
BaseArm7AT91:     format de fichier elf32-littlearm

Sections:
Idx Nom           Taille    VMA       LMA       Fich off  Algn
  0 .text         0000a6c8  00100000  00100000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ctors        00000008  0010a6c8  0010a6c8  000126c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .dtors        00000008  0010a6d0  0010a6d0  000126d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .rodata       00000260  0010a6d8  0010a6d8  000126d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .eh_frame     00000004  0010a938  0010a938  00012938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         00000a3c  00200000  0010a93c  00018000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  6 .jcr          00000004  00200a3c  0010b378  00018a3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          000003b8  00200a40  00200a40  00018a40  2**2
                  ALLOC
  8 .comment      0000057c  00000000  00000000  00018a40  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000808  00000000  00000000  00018fc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 00000f97  00000000  00000000  000197c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   0001b6b3  00000000  00000000  0001a75f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00004e7e  00000000  00000000  00035e12  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00005fc2  00000000  00000000  0003ac90  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00001ba0  00000000  00000000  00040c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0000242a  00000000  00000000  000427f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00009037  00000000  00000000  00044c1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macinfo 000a96cc  00000000  00000000  0004dc55  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 000004c0  00000000  00000000  000f7321  2**0
                  CONTENTS, READONLY, DEBUGGING
Déassemblage de la section .text:

00100000 <Vectors>:
			.text
			.arm
			.section .vectrom, "ax"

Vectors:        LDR     PC,Reset_Addr         
  100000:	e59ff018 	ldr	pc, [pc, #24]	; 100020 <Reset_Addr>
                LDR     PC,Undef_Addr
  100004:	e59ff018 	ldr	pc, [pc, #24]	; 100024 <Undef_Addr>
                LDR     PC,SWI_Addr
  100008:	e59ff018 	ldr	pc, [pc, #24]	; 100028 <SWI_Addr>
                LDR     PC,PAbt_Addr
  10000c:	e59ff018 	ldr	pc, [pc, #24]	; 10002c <PAbt_Addr>
                LDR     PC,DAbt_Addr
  100010:	e59ff018 	ldr	pc, [pc, #24]	; 100030 <DAbt_Addr>
                NOP                            /* Reserved Vector */
  100014:	e1a00000 	nop			(mov r0,r0)
//                LDR     PC,IRQ_Addr
                LDR     PC,[PC,#-0xF20]        /* Vector From AIC_IVR */
  100018:	e51fff20 	ldr	pc, [pc, #-3872]	; ff100 <PMC_OSCOUNT+0xef200>
//                LDR     PC,FIQ_Addr
                LDR     PC,[PC,#-0xF20]        /* Vector From AIC_FVR */
  10001c:	e51fff20 	ldr	pc, [pc, #-3872]	; ff104 <PMC_OSCOUNT+0xef204>

00100020 <Reset_Addr>:
  100020:	0010006c 	andeqs	r0, r0, ip, rrx

00100024 <Undef_Addr>:
  100024:	00100040 	andeqs	r0, r0, r0, asr #32

00100028 <SWI_Addr>:
  100028:	00100044 	andeqs	r0, r0, r4, asr #32

0010002c <PAbt_Addr>:
  10002c:	00100048 	andeqs	r0, r0, r8, asr #32

00100030 <DAbt_Addr>:
  100030:	0010004c 	andeqs	r0, r0, ip, asr #32
  100034:	00000000 	andeq	r0, r0, r0

00100038 <IRQ_Addr>:
  100038:	00100050 	andeqs	r0, r0, r0, asr r0

0010003c <FIQ_Addr>:
  10003c:	00100054 	andeqs	r0, r0, r4, asr r0

00100040 <Undef_Handler>:

Reset_Addr:     .word   Reset_Handler
Undef_Addr:     .word   Undef_Handler
SWI_Addr:       .word   SWI_Handler
PAbt_Addr:      .word   PAbt_Handler
DAbt_Addr:      .word   DAbt_Handler
                .word   0                      /* Reserved Address */
IRQ_Addr:       .word   IRQ_Handler
FIQ_Addr:       .word   FIQ_Handler

Undef_Handler:  B       Undef_Handler
  100040:	eafffffe 	b	100040 <Undef_Handler>

00100044 <SWI_Handler>:
SWI_Handler:    B       SWI_Handler
  100044:	eafffffe 	b	100044 <SWI_Handler>

00100048 <PAbt_Handler>:
PAbt_Handler:   B       PAbt_Handler
  100048:	eafffffe 	b	100048 <PAbt_Handler>

0010004c <DAbt_Handler>:
DAbt_Handler:   B       DAbt_Handler
  10004c:	eafffffe 	b	10004c <DAbt_Handler>

00100050 <IRQ_Handler>:
IRQ_Handler:    B       IRQ_Handler
  100050:	eafffffe 	b	100050 <IRQ_Handler>

00100054 <FIQ_Handler>:
FIQ_Handler:    B       FIQ_Handler
  100054:	eafffffe 	b	100054 <FIQ_Handler>

00100058 <_init>:
  100058:	e1a0c00d 	mov	ip, sp
  10005c:	e92ddff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
  100060:	e24cb004 	sub	fp, ip, #4	; 0x4
  100064:	eb000073 	bl	100238 <frame_dummy>

00100068 <_startup>:


// Starupt Code must be linked first at Address at which it expects to run.

		.text
		.arm
		.section .init, "ax"
	
		.global _startup
		.func   _startup
_startup:


// Reset Handler
                LDR     pc, =Reset_Handler
  100068:	e59ff100 	ldr	pc, [pc, #256]	; 100170 <.text+0x170>

0010006c <Reset_Handler>:
Reset_Handler:

// Setup EFC
.if EFC_SETUP
                LDR     R0, =EFC_BASE
  10006c:	e3e000ff 	mvn	r0, #255	; 0xff
                LDR     R1, =EFC_FMR_Val
  100070:	e59f10fc 	ldr	r1, [pc, #252]	; 100174 <.text+0x174>
                STR     R1, [R0, #EFC_FMR]
  100074:	e5801060 	str	r1, [r0, #96]
.endif


// Setup WDT
.if WDT_SETUP
                LDR     R0, =WDT_BASE
  100078:	e59f00f8 	ldr	r0, [pc, #248]	; 100178 <.text+0x178>
                LDR     R1, =WDT_MR_Val
  10007c:	e3a01902 	mov	r1, #32768	; 0x8000
                STR     R1, [R0, #WDT_MR]
  100080:	e5801004 	str	r1, [r0, #4]
.endif


// Setup PMC
.if PMC_SETUP
                LDR     R0, =PMC_BASE
  100084:	e59f00f0 	ldr	r0, [pc, #240]	; 10017c <.text+0x17c>

//  Setup Main Oscillator
                LDR     R1, =PMC_MOR_Val
  100088:	e59f10f0 	ldr	r1, [pc, #240]	; 100180 <.text+0x180>
                STR     R1, [R0, #PMC_MOR]
  10008c:	e5801020 	str	r1, [r0, #32]

00100090 <MOSCS_Loop>:

//  Wait until Main Oscillator is stablilized
.if (PMC_MOR_Val & PMC_MOSCEN)
MOSCS_Loop:     LDR     R2, [R0, #PMC_SR]
  100090:	e5902068 	ldr	r2, [r0, #104]
                ANDS    R2, R2, #PMC_MOSCS
  100094:	e2122001 	ands	r2, r2, #1	; 0x1
                BEQ     MOSCS_Loop
  100098:	0afffffc 	beq	100090 <MOSCS_Loop>
.endif

//  Setup the PLL
.if (PMC_PLLR_Val & PMC_MUL)
                LDR     R1, =PMC_PLLR_Val
  10009c:	e59f10e0 	ldr	r1, [pc, #224]	; 100184 <.text+0x184>
                STR     R1, [R0, #PMC_PLLR]
  1000a0:	e580102c 	str	r1, [r0, #44]

001000a4 <PLL_Loop>:

//  Wait until PLL is stabilized
PLL_Loop:       LDR     R2, [R0, #PMC_SR]
  1000a4:	e5902068 	ldr	r2, [r0, #104]
                ANDS    R2, R2, #PMC_LOCK
  1000a8:	e2122004 	ands	r2, r2, #4	; 0x4
                BEQ     PLL_Loop
  1000ac:	0afffffc 	beq	1000a4 <PLL_Loop>
.endif

//  Select Clock
                LDR     R1, =PMC_MCKR_Val
  1000b0:	e3a01007 	mov	r1, #7	; 0x7
                STR     R1, [R0, #PMC_MCKR]
  1000b4:	e5801030 	str	r1, [r0, #48]
.endif


// Setup Stack for each mode

                LDR     R0, =Top_Stack
  1000b8:	e3a00981 	mov	r0, #2113536	; 0x204000

//  Enter Undefined Instruction Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_UND|I_Bit|F_Bit
  1000bc:	e321f0db 	msr	CPSR_c, #219	; 0xdb
                MOV     SP, R0
  1000c0:	e1a0d000 	mov	sp, r0
                SUB     R0, R0, #UND_Stack_Size
  1000c4:	e2400004 	sub	r0, r0, #4	; 0x4

//  Enter Abort Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_ABT|I_Bit|F_Bit
  1000c8:	e321f0d7 	msr	CPSR_c, #215	; 0xd7
                MOV     SP, R0
  1000cc:	e1a0d000 	mov	sp, r0
                SUB     R0, R0, #ABT_Stack_Size
  1000d0:	e2400004 	sub	r0, r0, #4	; 0x4

//  Enter FIQ Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_FIQ|I_Bit|F_Bit
  1000d4:	e321f0d1 	msr	CPSR_c, #209	; 0xd1
                MOV     SP, R0
  1000d8:	e1a0d000 	mov	sp, r0
                SUB     R0, R0, #FIQ_Stack_Size
  1000dc:	e2400004 	sub	r0, r0, #4	; 0x4

//  Enter IRQ Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_IRQ|I_Bit|F_Bit
  1000e0:	e321f0d2 	msr	CPSR_c, #210	; 0xd2
                MOV     SP, R0
  1000e4:	e1a0d000 	mov	sp, r0
                SUB     R0, R0, #IRQ_Stack_Size
  1000e8:	e2400c01 	sub	r0, r0, #256	; 0x100

//  Enter Supervisor Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_SVC|I_Bit|F_Bit
  1000ec:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
                MOV     SP, R0
  1000f0:	e1a0d000 	mov	sp, r0
                SUB     R0, R0, #SVC_Stack_Size
  1000f4:	e2400c01 	sub	r0, r0, #256	; 0x100

//  Enter User Mode and set its Stack Pointer
                MSR     CPSR_c, #Mode_USR
  1000f8:	e321f010 	msr	CPSR_c, #16	; 0x10
                MOV     SP, R0
  1000fc:	e1a0d000 	mov	sp, r0

// Setup a default Stack Limit (when compiled with "-mapcs-stack-check")
                SUB     SL, SP, #USR_Stack_Size
  100100:	e24dab01 	sub	sl, sp, #1024	; 0x400


// Relocate .data section (Copy from ROM to RAM)
                LDR     R1, =_etext
  100104:	e59f107c 	ldr	r1, [pc, #124]	; 100188 <.text+0x188>
                LDR     R2, =_data
  100108:	e59f207c 	ldr	r2, [pc, #124]	; 10018c <.text+0x18c>
                LDR     R3, =_edata
  10010c:	e59f307c 	ldr	r3, [pc, #124]	; 100190 <.text+0x190>

00100110 <LoopRel>:
LoopRel:        CMP     R2, R3
  100110:	e1520003 	cmp	r2, r3
                LDRLO   R0, [R1], #4
  100114:	34910004 	ldrcc	r0, [r1], #4
                STRLO   R0, [R2], #4
  100118:	34820004 	strcc	r0, [r2], #4
                BLO     LoopRel
  10011c:	3afffffb 	bcc	100110 <LoopRel>


// Clear .bss section (Zero init)
                MOV     R0, #0
  100120:	e3a00000 	mov	r0, #0	; 0x0
                LDR     R1, =__bss_start__
  100124:	e59f1068 	ldr	r1, [pc, #104]	; 100194 <.text+0x194>
                LDR     R2, =__bss_end__
  100128:	e59f2068 	ldr	r2, [pc, #104]	; 100198 <.text+0x198>

0010012c <LoopZI>:
LoopZI:         CMP     R1, R2
  10012c:	e1510002 	cmp	r1, r2
                STRLO   R0, [R1], #4
  100130:	34810004 	strcc	r0, [r1], #4
                BLO     LoopZI
  100134:	3afffffc 	bcc	10012c <LoopZI>


#ifdef VECTORS_IN_RAM
/* 
   remap - exception vectors for RAM have been already copied 
   to 0x00200000 by the .data copy-loop 
*/
				.equ    MC_BASE,0xFFFFFF00  /* MC Base Address */
				.equ    MC_RCR, 0x00        /* MC_RCR Offset */

				LDR     R0, =MC_BASE
  100138:	e3e000ff 	mvn	r0, #255	; 0xff
				MOV     R1, #1
  10013c:	e3a01001 	mov	r1, #1	; 0x1
				STR     R1, [R0, #MC_RCR]   // Remap
  100140:	e5801000 	str	r1, [r0]
#endif /* VECTORS_IN_RAM */


/*
   Call C++ constructors (for objects in "global scope")
   added by Martin Thomas based on a Anglia Design 
   example-application for STR7 ARM
*/

			LDR 	r0, =__ctors_start__
  100144:	e59f0050 	ldr	r0, [pc, #80]	; 10019c <.text+0x19c>
			LDR 	r1, =__ctors_end__
  100148:	e59f1050 	ldr	r1, [pc, #80]	; 1001a0 <.text+0x1a0>

0010014c <ctor_end>:
ctor_loop:
//			CMP 	r0, r1
//			BEQ 	ctor_end
//			LDR 	r2, [r0], #4   /* this ctor's address */
//			STMFD 	sp!, {r0-r1}   /* save loop counters  */
//			MOV 	lr, pc         /* set return address  */
////			MOV 	pc, r2
//			BX      r2             /* call ctor */
//			LDMFD 	sp!, {r0-r1}   /* restore loop counters */
//			B 		ctor_loop
ctor_end:

       
// Enter the C code
				mov   r0,#0            // no arguments (argc = 0)
  10014c:	e3a00000 	mov	r0, #0	; 0x0
				mov   r1,r0
  100150:	e1a01000 	mov	r1, r0
				mov   r2,r0
  100154:	e1a02000 	mov	r2, r0
				mov   fp,r0            // null frame pointer
  100158:	e1a0b000 	mov	fp, r0
				mov   r7,r0            // null frame pointer for thumb
  10015c:	e1a07000 	mov	r7, r0
				ldr   r10,=main
  100160:	e59fa03c 	ldr	sl, [pc, #60]	; 1001a4 <.text+0x1a4>
				adr   lr, __main_exit
  100164:	e28fe000 	add	lr, pc, #0	; 0x0
				bx    r10              // enter main()
  100168:	e12fff1a 	bx	sl

0010016c <__main_exit>:

__main_exit:    B       __main_exit
  10016c:	eafffffe 	b	10016c <__main_exit>
  100170:	0010006c 	andeqs	r0, r0, ip, rrx
  100174:	00320100 	eoreqs	r0, r2, r0, lsl #2
  100178:	fffffd40 	undefined instruction 0xfffffd40
  10017c:	fffffc00 	undefined instruction 0xfffffc00
  100180:	00000601 	andeq	r0, r0, r1, lsl #12
  100184:	00191c05 	andeqs	r1, r9, r5, lsl #24
  100188:	0010a93c 	andeqs	sl, r0, ip, lsr r9
  10018c:	00200000 	eoreq	r0, r0, r0
  100190:	00200a40 	eoreq	r0, r0, r0, asr #20
  100194:	00200a40 	eoreq	r0, r0, r0, asr #20
  100198:	00200df8 	streqd	r0, [r0], -r8
  10019c:	0010a6c8 	andeqs	sl, r0, r8, asr #13
  1001a0:	0010a6d0 	ldreqsb	sl, [r0], -r0
  1001a4:	001003a4 	andeqs	r0, r0, r4, lsr #7
  1001a8:	eb002930 	bl	10a670 <__do_global_ctors_aux>
  1001ac:	e24bd028 	sub	sp, fp, #40	; 0x28
  1001b0:	e89d6ff0 	ldmia	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
  1001b4:	e1a0f00e 	mov	pc, lr

001001b8 <__do_global_dtors_aux>:
  1001b8:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  1001bc:	e59f505c 	ldr	r5, [pc, #92]	; 100220 <.text+0x220>
  1001c0:	e5d53000 	ldrb	r3, [r5]
  1001c4:	e3530000 	cmp	r3, #0	; 0x0
  1001c8:	18bd8030 	ldmneia	sp!, {r4, r5, pc}
  1001cc:	e59f4050 	ldr	r4, [pc, #80]	; 100224 <.text+0x224>
  1001d0:	e5943000 	ldr	r3, [r4]
  1001d4:	e5932000 	ldr	r2, [r3]
  1001d8:	e3520000 	cmp	r2, #0	; 0x0
  1001dc:	0a000007 	beq	100200 <__do_global_dtors_aux+0x48>
  1001e0:	e2833004 	add	r3, r3, #4	; 0x4
  1001e4:	e5843000 	str	r3, [r4]
  1001e8:	e1a0e00f 	mov	lr, pc
  1001ec:	e12fff12 	bx	r2
  1001f0:	e5943000 	ldr	r3, [r4]
  1001f4:	e5932000 	ldr	r2, [r3]
  1001f8:	e3520000 	cmp	r2, #0	; 0x0
  1001fc:	1afffff7 	bne	1001e0 <__do_global_dtors_aux+0x28>
  100200:	e59f3020 	ldr	r3, [pc, #32]	; 100228 <.text+0x228>
  100204:	e3530000 	cmp	r3, #0	; 0x0
  100208:	159f001c 	ldrne	r0, [pc, #28]	; 10022c <.text+0x22c>
  10020c:	11a0e00f 	movne	lr, pc
  100210:	112fff13 	bxne	r3
  100214:	e3a03001 	mov	r3, #1	; 0x1
  100218:	e5c53000 	strb	r3, [r5]
  10021c:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  100220:	00200a40 	eoreq	r0, r0, r0, asr #20
  100224:	00200060 	eoreq	r0, r0, r0, rrx
  100228:	00000000 	andeq	r0, r0, r0
  10022c:	0010a938 	andeqs	sl, r0, r8, lsr r9

00100230 <call___do_global_dtors_aux>:
  100230:	e52de004 	str	lr, [sp, #-4]!
  100234:	e49df004 	ldr	pc, [sp], #4

00100238 <frame_dummy>:
  100238:	e59f303c 	ldr	r3, [pc, #60]	; 10027c <.text+0x27c>
  10023c:	e3530000 	cmp	r3, #0	; 0x0
  100240:	e52de004 	str	lr, [sp, #-4]!
  100244:	e59f0034 	ldr	r0, [pc, #52]	; 100280 <.text+0x280>
  100248:	e59f1034 	ldr	r1, [pc, #52]	; 100284 <.text+0x284>
  10024c:	11a0e00f 	movne	lr, pc
  100250:	112fff13 	bxne	r3
  100254:	e59f002c 	ldr	r0, [pc, #44]	; 100288 <.text+0x288>
  100258:	e5903000 	ldr	r3, [r0]
  10025c:	e3530000 	cmp	r3, #0	; 0x0
  100260:	e59f3024 	ldr	r3, [pc, #36]	; 10028c <.text+0x28c>
  100264:	049df004 	ldreq	pc, [sp], #4
  100268:	e3530000 	cmp	r3, #0	; 0x0
  10026c:	049df004 	ldreq	pc, [sp], #4
  100270:	e1a0e00f 	mov	lr, pc
  100274:	e12fff13 	bx	r3
  100278:	e49df004 	ldr	pc, [sp], #4
  10027c:	00000000 	andeq	r0, r0, r0
  100280:	0010a938 	andeqs	sl, r0, r8, lsr r9
  100284:	00200a44 	eoreq	r0, r0, r4, asr #20
  100288:	00200a3c 	eoreq	r0, r0, ip, lsr sl
  10028c:	00000000 	andeq	r0, r0, r0

00100290 <call_frame_dummy>:
  100290:	e52de004 	str	lr, [sp, #-4]!
  100294:	e49df004 	ldr	pc, [sp], #4

00100298 <_mainCRTStartup>:
  100298:	e3a00016 	mov	r0, #22	; 0x16
  10029c:	e28f10e8 	add	r1, pc, #232	; 0xe8
  1002a0:	ef123456 	svc	0x00123456
  1002a4:	e59f00e0 	ldr	r0, [pc, #224]	; 10038c <.text+0x38c>
  1002a8:	e590d008 	ldr	sp, [r0, #8]
  1002ac:	e590a00c 	ldr	sl, [r0, #12]
  1002b0:	e28aac01 	add	sl, sl, #256	; 0x100
  1002b4:	e3a01000 	mov	r1, #0	; 0x0
  1002b8:	e1a0b001 	mov	fp, r1
  1002bc:	e1a07001 	mov	r7, r1
  1002c0:	e59f00c8 	ldr	r0, [pc, #200]	; 100390 <.text+0x390>
  1002c4:	e59f20c8 	ldr	r2, [pc, #200]	; 100394 <.text+0x394>
  1002c8:	e0422000 	sub	r2, r2, r0
  1002cc:	eb000ab5 	bl	102da8 <memset>
  1002d0:	eb000e2c 	bl	103b88 <initialise_monitor_handles>
  1002d4:	e3a00015 	mov	r0, #21	; 0x15
  1002d8:	e28f10bc 	add	r1, pc, #188	; 0xbc
  1002dc:	ef123456 	svc	0x00123456
  1002e0:	e59f10b4 	ldr	r1, [pc, #180]	; 10039c <.text+0x39c>
  1002e4:	e3a00000 	mov	r0, #0	; 0x0
  1002e8:	e92d0001 	stmdb	sp!, {r0}
  1002ec:	e4d13001 	ldrb	r3, [r1], #1
  1002f0:	e3530000 	cmp	r3, #0	; 0x0
  1002f4:	0a000011 	beq	100340 <_mainCRTStartup+0xa8>
  1002f8:	e3530020 	cmp	r3, #32	; 0x20
  1002fc:	0afffffa 	beq	1002ec <_mainCRTStartup+0x54>
  100300:	e3530022 	cmp	r3, #34	; 0x22
  100304:	13530027 	cmpne	r3, #39	; 0x27
  100308:	01a02003 	moveq	r2, r3
  10030c:	13a02020 	movne	r2, #32	; 0x20
  100310:	12411001 	subne	r1, r1, #1	; 0x1
  100314:	e92d0002 	stmdb	sp!, {r1}
  100318:	e2800001 	add	r0, r0, #1	; 0x1
  10031c:	e4d13001 	ldrb	r3, [r1], #1
  100320:	e3530000 	cmp	r3, #0	; 0x0
  100324:	0a000005 	beq	100340 <_mainCRTStartup+0xa8>
  100328:	e1520003 	cmp	r2, r3
  10032c:	1afffffa 	bne	10031c <_mainCRTStartup+0x84>
  100330:	e3a02000 	mov	r2, #0	; 0x0
  100334:	e2413001 	sub	r3, r1, #1	; 0x1
  100338:	e5c32000 	strb	r2, [r3]
  10033c:	eaffffea 	b	1002ec <_mainCRTStartup+0x54>
  100340:	e1a0100d 	mov	r1, sp
  100344:	e08d2100 	add	r2, sp, r0, lsl #2
  100348:	e1a0300d 	mov	r3, sp
  10034c:	e1520003 	cmp	r2, r3
  100350:	85124004 	ldrhi	r4, [r2, #-4]
  100354:	85935000 	ldrhi	r5, [r3]
  100358:	85225004 	strhi	r5, [r2, #-4]!
  10035c:	84834004 	strhi	r4, [r3], #4
  100360:	8afffff9 	bhi	10034c <_mainCRTStartup+0xb4>
  100364:	e3cdd007 	bic	sp, sp, #7	; 0x7
  100368:	e1a04000 	mov	r4, r0
  10036c:	e1a05001 	mov	r5, r1
  100370:	e59f0020 	ldr	r0, [pc, #32]	; 100398 <.text+0x398>
  100374:	eb000894 	bl	1025cc <atexit>
  100378:	ebffff36 	bl	100058 <_init>
  10037c:	e1a00004 	mov	r0, r4
  100380:	e1a01005 	mov	r1, r5
  100384:	eb000006 	bl	1003a4 <main>
  100388:	eb000894 	bl	1025e0 <exit>
  10038c:	00200064 	eoreq	r0, r0, r4, rrx
  100390:	00200a40 	eoreq	r0, r0, r0, asr #20
  100394:	00200df8 	streqd	r0, [r0], -r8
  100398:	0010a6ac 	andeqs	sl, r0, ip, lsr #13
  10039c:	00200074 	eoreq	r0, r0, r4, ror r0
  1003a0:	000000ff 	streqd	r0, [r0], -pc

001003a4 <main>:

/*** Main Program ***/

int main (void) 
{
  1003a4:	e52de004 	str	lr, [sp, #-4]!
	
	vFsysManager_Init();
  1003a8:	eb000004 	bl	1003c0 <vFsysManager_Init>
	vFdvManager_Init();
  1003ac:	eb000650 	bl	101cf4 <vFdvManager_Init>
	vFlibManager_Init();
  1003b0:	eb00014f 	bl	1008f4 <vFlibManager_Init>
	vFappManager_Init();
  1003b4:	eb00083c 	bl	1024ac <vFappManager_Init>
	
	while (1) 
	{                              /* Loop forever */
		vFappManager_Main();
  1003b8:	eb000838 	bl	1024a0 <vFappManager_Main>
  1003bc:	eafffffd 	b	1003b8 <main+0x14>

001003c0 <vFsysManager_Init>:
void vFsysManager_Init( void )
{
	// enable reset-button (mt)
	// AT91F_RSTSetMode( AT91C_BASE_RSTC , AT91C_RSTC_URSTEN );
	*AT91C_RSTC_RMR = ( 0xA5000000 | AT91C_RSTC_URSTEN );
  1003c0:	e3e03000 	mvn	r3, #0	; 0x0
  1003c4:	e3a024a5 	mov	r2, #-1526726656	; 0xa5000000
  1003c8:	e2822001 	add	r2, r2, #1	; 0x1
  1003cc:	e50322f7 	str	r2, [r3, #-759]
	
	*AT91C_PMC_PCER = (1 << AT91C_ID_PIOA) |  /* Enable Clock for PIO    */
  1003d0:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  1003d4:	e2822044 	add	r2, r2, #68	; 0x44
  1003d8:	e50323ef 	str	r2, [r3, #-1007]
		(1 << AT91C_ID_IRQ0) |  /* Enable Clock for IRQ0   */
		(1 << AT91C_ID_US0);    /* Enable Clock for USART0 */
}
  1003dc:	e12fff1e 	bx	lr

001003e0 <_close_r>:
    struct _reent *r, 
    int file)
{
	return 0;
}
  1003e0:	e3a00000 	mov	r0, #0	; 0x0
  1003e4:	e12fff1e 	bx	lr

001003e8 <_lseek_r>:


_off_t _lseek_r(
    struct _reent *r, 
    int file, 
    _off_t ptr, 
    int dir)
{
	return (_off_t)0;	/*  Always indicate we are at file beginning.  */
}
  1003e8:	e3a00000 	mov	r0, #0	; 0x0
  1003ec:	e12fff1e 	bx	lr

001003f0 <_fstat_r>:


int _fstat_r(
    struct _reent *r, 
    int file, 
    struct stat *st)
{
	/*  Always set as character device.				*/
	st->st_mode = S_IFCHR;
  1003f0:	e3a03a02 	mov	r3, #8192	; 0x2000
  1003f4:	e5823004 	str	r3, [r2, #4]
	/* assigned to strong type with implicit 	*/
	/* signed/unsigned conversion.  Required by 	*/
	/* newlib.					*/

	return 0;
}
  1003f8:	e3a00000 	mov	r0, #0	; 0x0
  1003fc:	e12fff1e 	bx	lr

00100400 <_sbrk_r>:


/*int isatty(int file); // avoid warning 

int isatty(int file)
{
	return 1;
}*/


#if 0
static void _exit (int n) {
label:  goto label; /* endless loop */
}
#endif 


/* "malloc clue function" from newlib-lpc/Keil-Demo/"generic" */

/**** Locally used variables. ****/
// mt: "cleaner": extern char* end;
extern char end[];              /*  end is set in the linker command 	*/
				/* file and is the end of statically 	*/
				/* allocated data (thus start of heap).	*/

static char *heap_ptr;		/* Points to current end of the heap.	*/

/************************** _sbrk_r *************************************
 * Support function. Adjusts end of heap to provide more memory to
 * memory allocator. Simple and dumb with no sanity checks.

 *  struct _reent *r -- re-entrancy structure, used by newlib to
 *                      support multiple threads of operation.
 *  ptrdiff_t nbytes -- number of bytes to add.
 *                      Returns pointer to start of new heap area.
 *
 *  Note:  This implementation is not thread safe (despite taking a
 *         _reent structure as a parameter).
 *         Since _s_r is not used in the current implementation, 
 *         the following messages must be suppressed.
 */
void * _sbrk_r(
    struct _reent *_s_r, 
    ptrdiff_t nbytes)
{
	char  *base;		/*  errno should be set to  ENOMEM on error  */

	if (!heap_ptr) {	/*  Initialize if first time through.  */
  100400:	e59f2020 	ldr	r2, [pc, #32]	; 100428 <.text+0x428>
  100404:	e5923000 	ldr	r3, [r2]
  100408:	e3530000 	cmp	r3, #0	; 0x0
		heap_ptr = end;
  10040c:	059f3018 	ldreq	r3, [pc, #24]	; 10042c <.text+0x42c>
  100410:	05823000 	streq	r3, [r2]
	}
	base = heap_ptr;	/*  Point to end of heap.  */
  100414:	e59f300c 	ldr	r3, [pc, #12]	; 100428 <.text+0x428>
  100418:	e5930000 	ldr	r0, [r3]
	heap_ptr += nbytes;	/*  Increase heap.  */
  10041c:	e0802001 	add	r2, r0, r1
  100420:	e5832000 	str	r2, [r3]
	
	return base;		/*  Return pointer to start of new heap area.  */
}
  100424:	e12fff1e 	bx	lr
  100428:	00200a5c 	eoreq	r0, r0, ip, asr sl
  10042c:	00200df8 	streqd	r0, [r0], -r8

00100430 <_write_r>:
  100430:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  100434:	e2537000 	subs	r7, r3, #0	; 0x0
  100438:	0a00000b 	beq	10046c <_write_r+0x3c>
  10043c:	e1a06002 	mov	r6, r2
  100440:	e3a04000 	mov	r4, #0	; 0x0
  100444:	e1a05004 	mov	r5, r4
  100448:	e7d43006 	ldrb	r3, [r4, r6]
  10044c:	e353000a 	cmp	r3, #10	; 0xa
  100450:	03a0000d 	moveq	r0, #13	; 0xd
  100454:	0b00028f 	bleq	100e98 <uart0_putc>
  100458:	e7d50006 	ldrb	r0, [r5, r6]
  10045c:	eb00028d 	bl	100e98 <uart0_putc>
  100460:	e2844001 	add	r4, r4, #1	; 0x1
  100464:	e1540007 	cmp	r4, r7
  100468:	1afffff5 	bne	100444 <_write_r+0x14>
  10046c:	e1a00007 	mov	r0, r7
  100470:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}

00100474 <_read_r>:
  100474:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  100478:	e2538000 	subs	r8, r3, #0	; 0x0
  10047c:	01a0a008 	moveq	sl, r8
  100480:	0a000015 	beq	1004dc <_read_r+0x68>
  100484:	ea000002 	b	100494 <_read_r+0x20>
  100488:	e3a03000 	mov	r3, #0	; 0x0
  10048c:	e5c73000 	strb	r3, [r7]
  100490:	ea000011 	b	1004dc <_read_r+0x68>
  100494:	e1a06002 	mov	r6, r2
  100498:	e3a0a000 	mov	sl, #0	; 0x0
  10049c:	e1a0400a 	mov	r4, sl
  1004a0:	e1a05004 	mov	r5, r4
  1004a4:	e0867004 	add	r7, r6, r4
  1004a8:	eb0002d2 	bl	100ff8 <iFdvUart_kbhit>
  1004ac:	e3500000 	cmp	r0, #0	; 0x0
  1004b0:	0afffffc 	beq	1004a8 <_read_r+0x34>
  1004b4:	eb0002e3 	bl	101048 <uart0_getc>
  1004b8:	e20000ff 	and	r0, r0, #255	; 0xff
  1004bc:	e350000d 	cmp	r0, #13	; 0xd
  1004c0:	0afffff0 	beq	100488 <_read_r+0x14>
  1004c4:	e7c50006 	strb	r0, [r5, r6]
  1004c8:	eb000272 	bl	100e98 <uart0_putc>
  1004cc:	e284a001 	add	sl, r4, #1	; 0x1
  1004d0:	e1a0400a 	mov	r4, sl
  1004d4:	e158000a 	cmp	r8, sl
  1004d8:	1afffff0 	bne	1004a0 <_read_r+0x2c>
  1004dc:	e06a0008 	rsb	r0, sl, r8
  1004e0:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}

001004e4 <cflibUart_SendReady>:

char cflibUart_SendReady( void )
{
	return 0;
}
  1004e4:	e3a00000 	mov	r0, #0	; 0x0
  1004e8:	e12fff1e 	bx	lr

001004ec <vFlibUart_SetRXByte>:

void vFlibUart_SetRXByte( unsigned char *pu8Byte)
{
	unsigned short uiIndex;
	
	uiIndex = tLibUartData.uiIndexIn+1;
  1004ec:	e59f3040 	ldr	r3, [pc, #64]	; 100534 <.text+0x534>
  1004f0:	e593c080 	ldr	ip, [r3, #128]
  1004f4:	e28c3001 	add	r3, ip, #1	; 0x1
  1004f8:	e1a03803 	mov	r3, r3, lsl #16
	
	if( uiIndex >= kLIBUART_INPUT_BUFFER_SIZE )
  1004fc:	e353087f 	cmp	r3, #8323072	; 0x7f0000
  100500:	91a01823 	movls	r1, r3, lsr #16
  100504:	83a01000 	movhi	r1, #0	; 0x0
		uiIndex = 0;
	if( tLibUartData.uiIndexOut != uiIndex )
  100508:	e59f2024 	ldr	r2, [pc, #36]	; 100534 <.text+0x534>
  10050c:	e5923084 	ldr	r3, [r2, #132]
  100510:	e1530001 	cmp	r3, r1
  100514:	012fff1e 	bxeq	lr
	{
		tLibUartData.tucInputBuffer[ tLibUartData.uiIndexIn ] = *pu8Byte;
  100518:	e5d03000 	ldrb	r3, [r0]
  10051c:	e7c2300c 	strb	r3, [r2, ip]
		tLibUartData.uiIndexIn = uiIndex;
  100520:	e5821080 	str	r1, [r2, #128]
		tLibUartData.uiByteCount++;
  100524:	e5923088 	ldr	r3, [r2, #136]
  100528:	e2833001 	add	r3, r3, #1	; 0x1
  10052c:	e5823088 	str	r3, [r2, #136]
  100530:	e12fff1e 	bx	lr
  100534:	00200a60 	eoreq	r0, r0, r0, ror #20

00100538 <cFlibUart_SendBuff>:
  100538:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  10053c:	e1a04000 	mov	r4, r0
  100540:	e1a05001 	mov	r5, r1
  100544:	eb000248 	bl	100e6c <vFdvUart_WaitTXFree>
  100548:	e3540000 	cmp	r4, #0	; 0x0
  10054c:	13550000 	cmpne	r5, #0	; 0x0
  100550:	0a00000e 	beq	100590 <cFlibUart_SendBuff+0x58>
	unsigned int szBuffer,
	char *pNextBuffer,
	unsigned int szNextBuffer )
{
	return AT91F_PDC_SendFrame(
  100554:	e3a034ff 	mov	r3, #-16777216	; 0xff000000
  100558:	e283373f 	add	r3, r3, #16515072	; 0xfc0000
  10055c:	e2832c01 	add	r2, r3, #256	; 0x100
  100560:	e592300c 	ldr	r3, [r2, #12]
  100564:	e3530000 	cmp	r3, #0	; 0x0
  100568:	1a000004 	bne	100580 <cFlibUart_SendBuff+0x48>
  10056c:	e5824008 	str	r4, [r2, #8]
  100570:	e582500c 	str	r5, [r2, #12]
  100574:	e5823018 	str	r3, [r2, #24]
  100578:	e582301c 	str	r3, [r2, #28]
  10057c:	ea000003 	b	100590 <cFlibUart_SendBuff+0x58>
  100580:	e592301c 	ldr	r3, [r2, #28]
  100584:	e3530000 	cmp	r3, #0	; 0x0
  100588:	05824018 	streq	r4, [r2, #24]
  10058c:	0582501c 	streq	r5, [r2, #28]
  100590:	eb000235 	bl	100e6c <vFdvUart_WaitTXFree>
  100594:	e3a00000 	mov	r0, #0	; 0x0
  100598:	e8bd8030 	ldmia	sp!, {r4, r5, pc}

0010059c <vFlibUart_Init>:
  10059c:	e52de004 	str	lr, [sp, #-4]!
  1005a0:	e59f2024 	ldr	r2, [pc, #36]	; 1005cc <.text+0x5cc>
  1005a4:	e3a03000 	mov	r3, #0	; 0x0
  1005a8:	e5823080 	str	r3, [r2, #128]
  1005ac:	e5823084 	str	r3, [r2, #132]
  1005b0:	e5823088 	str	r3, [r2, #136]
  1005b4:	e59f0014 	ldr	r0, [pc, #20]	; 1005d0 <.text+0x5d0>
  1005b8:	eb000221 	bl	100e44 <vFdvUart_SetRXCallback>
	AT91PS_USART pUSART, // \arg pointer to a USART controller
	unsigned int flag)   // \arg IT to be enabled
{
	//* Write to the IER register
	pUSART->US_IER = flag;
  1005bc:	e3a02001 	mov	r2, #1	; 0x1
  1005c0:	e3e03bff 	mvn	r3, #261120	; 0x3fc00
  1005c4:	e50323f7 	str	r2, [r3, #-1015]
  1005c8:	e49df004 	ldr	pc, [sp], #4
  1005cc:	00200a60 	eoreq	r0, r0, r0, ror #20
  1005d0:	001004ec 	andeqs	r0, r0, ip, ror #9

001005d4 <cFlibUart_GetRXByte>:
	}

}

char cFlibUart_GetRXByte( unsigned char *pu8Byte)
{
  1005d4:	e1a0c000 	mov	ip, r0
	if(tLibUartData.uiByteCount)
  1005d8:	e59f3080 	ldr	r3, [pc, #128]	; 100660 <.text+0x660>
  1005dc:	e5930088 	ldr	r0, [r3, #136]
  1005e0:	e3500000 	cmp	r0, #0	; 0x0
  1005e4:	012fff1e 	bxeq	lr
	AT91PS_USART pUSART, // \arg pointer to a USART controller
	unsigned int flag)   // \arg IT to be disabled
{
	//* Write to the IER register
	pUSART->US_IDR = flag;
  1005e8:	e3a03001 	mov	r3, #1	; 0x1
  1005ec:	e3e02bff 	mvn	r2, #261120	; 0x3fc00
  1005f0:	e50233f3 	str	r3, [r2, #-1011]
	{
		mDISABLE_UART_RX_IT();
		if( tLibUartData.uiIndexOut != tLibUartData.uiIndexIn )
  1005f4:	e59f1064 	ldr	r1, [pc, #100]	; 100660 <.text+0x660>
  1005f8:	e5912084 	ldr	r2, [r1, #132]
  1005fc:	e5913080 	ldr	r3, [r1, #128]
  100600:	e1520003 	cmp	r2, r3
  100604:	0a000010 	beq	10064c <cFlibUart_GetRXByte+0x78>
		{
			*pu8Byte = tLibUartData.tucInputBuffer[ tLibUartData.uiIndexOut ];
  100608:	e7d13002 	ldrb	r3, [r1, r2]
  10060c:	e5cc3000 	strb	r3, [ip]
			tLibUartData.uiIndexOut++;
  100610:	e5913084 	ldr	r3, [r1, #132]
  100614:	e2833001 	add	r3, r3, #1	; 0x1
  100618:	e5813084 	str	r3, [r1, #132]
			if( tLibUartData.uiIndexOut >= kLIBUART_INPUT_BUFFER_SIZE)
  10061c:	e353007f 	cmp	r3, #127	; 0x7f
				tLibUartData.uiIndexOut = 0;
  100620:	83a03000 	movhi	r3, #0	; 0x0
  100624:	85813084 	strhi	r3, [r1, #132]
			tLibUartData.uiByteCount--;
  100628:	e59f2030 	ldr	r2, [pc, #48]	; 100660 <.text+0x660>
  10062c:	e5923088 	ldr	r3, [r2, #136]
  100630:	e2433001 	sub	r3, r3, #1	; 0x1
  100634:	e5823088 	str	r3, [r2, #136]
	AT91PS_USART pUSART, // \arg pointer to a USART controller
	unsigned int flag)   // \arg IT to be enabled
{
	//* Write to the IER register
	pUSART->US_IER = flag;
  100638:	e3a02001 	mov	r2, #1	; 0x1
  10063c:	e3e03bff 	mvn	r3, #261120	; 0x3fc00
  100640:	e50323f7 	str	r2, [r3, #-1015]
  100644:	e1a00002 	mov	r0, r2
  100648:	e12fff1e 	bx	lr
			mENABLE_UART_RX_IT();
			return 1;
		}
		mENABLE_UART_RX_IT();
	}
	return 0;
}
  10064c:	e3a02001 	mov	r2, #1	; 0x1
  100650:	e3e03bff 	mvn	r3, #261120	; 0x3fc00
  100654:	e50323f7 	str	r2, [r3, #-1015]
  100658:	e3a00000 	mov	r0, #0	; 0x0
  10065c:	e12fff1e 	bx	lr
  100660:	00200a60 	eoreq	r0, r0, r0, ror #20

00100664 <vFlibTimer_Tick>:
{
	unsigned char ucTimerCount;
	tPeriodicTimer *pTimer;
	
	for( ucTimerCount = 0 ; ucTimerCount < tlibTimerData.iHandlerCount ; ucTimerCount++ )
  100664:	e59f304c 	ldr	r3, [pc, #76]	; 1006b8 <.text+0x6b8>
  100668:	e593c000 	ldr	ip, [r3]
  10066c:	e35c0000 	cmp	ip, #0	; 0x0
  100670:	d12fff1e 	bxle	lr
	{
		
		pTimer = tlibTimerData.ptTimerArray[ucTimerCount]; //newt timer
  100674:	e5930004 	ldr	r0, [r3, #4]
  100678:	e3a01000 	mov	r1, #0	; 0x0
  10067c:	e7902101 	ldr	r2, [r0, r1, lsl #2]
		pTimer->uiCount--; //decrement the timer count
  100680:	e592300c 	ldr	r3, [r2, #12]
  100684:	e2433001 	sub	r3, r3, #1	; 0x1
  100688:	e582300c 	str	r3, [r2, #12]
		if(!pTimer->uiCount)
  10068c:	e3530000 	cmp	r3, #0	; 0x0
		{	//new periodextern 
			pTimer->uiCount = pTimer->uiPeriod;
  100690:	05923004 	ldreq	r3, [r2, #4]
  100694:	0582300c 	streq	r3, [r2, #12]
			pTimer->uiPeriodCount++;
  100698:	05923008 	ldreq	r3, [r2, #8]
  10069c:	02833001 	addeq	r3, r3, #1	; 0x1
  1006a0:	05823008 	streq	r3, [r2, #8]
  1006a4:	e2813001 	add	r3, r1, #1	; 0x1
  1006a8:	e20310ff 	and	r1, r3, #255	; 0xff
  1006ac:	e151000c 	cmp	r1, ip
  1006b0:	bafffff1 	blt	10067c <vFlibTimer_Tick+0x18>
  1006b4:	e12fff1e 	bx	lr
  1006b8:	00200aec 	eoreq	r0, r0, ip, ror #21

001006bc <vFlibTimer_DeletPeriodicTimer>:
		}
	}
}

/// \brief Creat a new periodic Timer
/// \param uiPeiod period timer in ms
/// \return Pointer to the new timer
tPeriodicTimer *ptFlibTimer_NewPeriodicTimer( unsigned int uiPeriod )
{
	tPeriodicTimer *pNewTimer=NULL;
	
	if( tlibTimerData.iHandlerCount < LIBTIMER_MAX_TIMER_NUMBER )
	{
		//allocate memory for the new timer
		pNewTimer = (tPeriodicTimer*) malloc( sizeof( tPeriodicTimer)  );
		if( pNewTimer != NULL)
		{
			//add the new timer in the timer array
			if( realloc( tlibTimerData.ptTimerArray , (tlibTimerData.iHandlerCount+1)*sizeof(tPeriodicTimer*)) != NULL )
			{
				tlibTimerData.ptTimerArray[tlibTimerData.iHandlerCount] = pNewTimer;
				//update handler count
				kLIBTIMER_DISABLE_IT();
				tlibTimerData.iHandlerCount++;
				kLIBTIMER_ENABLE_IT();
				//init the new timer data
				pNewTimer->iHanler = tlibTimerData.iHandlerCount;
				pNewTimer->uiPeriod = uiPeriod;
				pNewTimer->uiPeriodCount= 0;
				pNewTimer->uiCount = uiPeriod;
			}
			else
			{
				free( pNewTimer );
				pNewTimer = NULL;
			}
		}
	}
	return pNewTimer;
}

void vFlibTimer_DeletPeriodicTimer( tPeriodicTimer *ptTimer)
{
  1006bc:	e52de004 	str	lr, [sp, #-4]!
	free( ptTimer );
  1006c0:	eb0007d2 	bl	102610 <free>
	tlibTimerData.iHandlerCount--;
  1006c4:	e59f3018 	ldr	r3, [pc, #24]	; 1006e4 <.text+0x6e4>
  1006c8:	e5931000 	ldr	r1, [r3]
  1006cc:	e2411001 	sub	r1, r1, #1	; 0x1
  1006d0:	e5831000 	str	r1, [r3]
	realloc( tlibTimerData.ptTimerArray , (tlibTimerData.iHandlerCount)*sizeof(tPeriodicTimer*));
  1006d4:	e5930004 	ldr	r0, [r3, #4]
  1006d8:	e1a01101 	mov	r1, r1, lsl #2
  1006dc:	eb0009d9 	bl	102e48 <realloc>
}
  1006e0:	e49df004 	ldr	pc, [sp], #4
  1006e4:	00200aec 	eoreq	r0, r0, ip, ror #21

001006e8 <vFlibTimer_Iinit>:
  1006e8:	e92d4010 	stmdb	sp!, {r4, lr}
  1006ec:	e59f4014 	ldr	r4, [pc, #20]	; 100708 <.text+0x708>
  1006f0:	e3a03000 	mov	r3, #0	; 0x0
  1006f4:	e5843000 	str	r3, [r4]
  1006f8:	e3a00004 	mov	r0, #4	; 0x4
  1006fc:	eb0007c8 	bl	102624 <malloc>
  100700:	e5840004 	str	r0, [r4, #4]
  100704:	e8bd8010 	ldmia	sp!, {r4, pc}
  100708:	00200aec 	eoreq	r0, r0, ip, ror #21

0010070c <ptFlibTimer_NewPeriodicTimer>:
  10070c:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  100710:	e1a06000 	mov	r6, r0
  100714:	e59f3090 	ldr	r3, [pc, #144]	; 1007ac <.text+0x7ac>
  100718:	e5933000 	ldr	r3, [r3]
  10071c:	e353000e 	cmp	r3, #14	; 0xe
  100720:	c3a04000 	movgt	r4, #0	; 0x0
  100724:	ca00001e 	bgt	1007a4 <ptFlibTimer_NewPeriodicTimer+0x98>
  100728:	e3a00010 	mov	r0, #16	; 0x10
  10072c:	eb0007bc 	bl	102624 <malloc>
  100730:	e2504000 	subs	r4, r0, #0	; 0x0
  100734:	0a00001a 	beq	1007a4 <ptFlibTimer_NewPeriodicTimer+0x98>
  100738:	e59f506c 	ldr	r5, [pc, #108]	; 1007ac <.text+0x7ac>
  10073c:	e5951000 	ldr	r1, [r5]
  100740:	e1a01101 	mov	r1, r1, lsl #2
  100744:	e5950004 	ldr	r0, [r5, #4]
  100748:	e2811004 	add	r1, r1, #4	; 0x4
  10074c:	eb0009bd 	bl	102e48 <realloc>
  100750:	e3500000 	cmp	r0, #0	; 0x0
  100754:	0a00000f 	beq	100798 <ptFlibTimer_NewPeriodicTimer+0x8c>
  100758:	e895000a 	ldmia	r5, {r1, r3}
  10075c:	e7834101 	str	r4, [r3, r1, lsl #2]
//*----------------------------------------------------------------------------
static __inline void AT91F_PITDisableInt(
        AT91PS_PITC pPITC)
{
	pPITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;	 
  100760:	e3e02c02 	mvn	r2, #512	; 0x200
  100764:	e51230cf 	ldr	r3, [r2, #-207]
  100768:	e3c33402 	bic	r3, r3, #33554432	; 0x2000000
  10076c:	e50230cf 	str	r3, [r2, #-207]
  100770:	e2811001 	add	r1, r1, #1	; 0x1
  100774:	e5851000 	str	r1, [r5]
//*----------------------------------------------------------------------------
static __inline void AT91F_PITEnableInt(
        AT91PS_PITC pPITC)
{
	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;	 
  100778:	e51230cf 	ldr	r3, [r2, #-207]
  10077c:	e3833402 	orr	r3, r3, #33554432	; 0x2000000
  100780:	e50230cf 	str	r3, [r2, #-207]
  100784:	e8840042 	stmia	r4, {r1, r6}
  100788:	e3a03000 	mov	r3, #0	; 0x0
  10078c:	e5843008 	str	r3, [r4, #8]
  100790:	e584600c 	str	r6, [r4, #12]
  100794:	ea000002 	b	1007a4 <ptFlibTimer_NewPeriodicTimer+0x98>
  100798:	e1a00004 	mov	r0, r4
  10079c:	eb00079b 	bl	102610 <free>
  1007a0:	e3a04000 	mov	r4, #0	; 0x0
  1007a4:	e1a00004 	mov	r0, r4
  1007a8:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  1007ac:	00200aec 	eoreq	r0, r0, ip, ror #21

001007b0 <vFlibTimer_GetCount>:

unsigned int  vFlibTimer_GetCount(tPeriodicTimer *ptTimer )
{
	unsigned int uiLocalCount=0;
	
	if( ptTimer->uiPeriodCount )
  1007b0:	e5901008 	ldr	r1, [r0, #8]
  1007b4:	e3510000 	cmp	r1, #0	; 0x0
  1007b8:	0a000008 	beq	1007e0 <vFlibTimer_GetCount+0x30>
//*----------------------------------------------------------------------------
static __inline void AT91F_PITDisableInt(
        AT91PS_PITC pPITC)
{
	pPITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;	 
  1007bc:	e3e02c02 	mvn	r2, #512	; 0x200
  1007c0:	e51230cf 	ldr	r3, [r2, #-207]
  1007c4:	e3c33402 	bic	r3, r3, #33554432	; 0x2000000
  1007c8:	e50230cf 	str	r3, [r2, #-207]
	{
		kLIBTIMER_DISABLE_IT();
		uiLocalCount = ptTimer->uiPeriodCount;
		ptTimer->uiPeriodCount = 0;
  1007cc:	e3a03000 	mov	r3, #0	; 0x0
  1007d0:	e5803008 	str	r3, [r0, #8]
//*----------------------------------------------------------------------------
static __inline void AT91F_PITEnableInt(
        AT91PS_PITC pPITC)
{
	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;	 
  1007d4:	e51230cf 	ldr	r3, [r2, #-207]
  1007d8:	e3833402 	orr	r3, r3, #33554432	; 0x2000000
  1007dc:	e50230cf 	str	r3, [r2, #-207]
		kLIBTIMER_ENABLE_IT();
	}
	
	return uiLocalCount;
}
  1007e0:	e1a00001 	mov	r0, r1
  1007e4:	e12fff1e 	bx	lr

001007e8 <TC_Configure>:
//------------------------------------------------------------------------------
void TC_Configure(AT91S_TC *pTc, unsigned int mode)
{
    // Disable TC clock
    pTc->TC_CCR = AT91C_TC_CLKDIS;
  1007e8:	e3a03002 	mov	r3, #2	; 0x2
  1007ec:	e5803000 	str	r3, [r0]

    // Disable interrupts
    pTc->TC_IDR = 0xFFFFFFFF;
  1007f0:	e2433003 	sub	r3, r3, #3	; 0x3
  1007f4:	e5803028 	str	r3, [r0, #40]

    // Clear status register
    pTc->TC_SR;
  1007f8:	e5903020 	ldr	r3, [r0, #32]

    // Set mode
    pTc->TC_CMR = mode;
  1007fc:	e5801004 	str	r1, [r0, #4]
}
  100800:	e12fff1e 	bx	lr

00100804 <TC_Start>:

//------------------------------------------------------------------------------
/// Starts the timer clock.
/// \param pTc  Pointer to an AT91S_TC instance.
//------------------------------------------------------------------------------
void TC_Start(AT91S_TC *pTc)
{
    pTc->TC_CCR = AT91C_TC_CLKEN | AT91C_TC_SWTRG;
  100804:	e3a03005 	mov	r3, #5	; 0x5
  100808:	e5803000 	str	r3, [r0]
}
  10080c:	e12fff1e 	bx	lr

00100810 <TC_Stop>:

//------------------------------------------------------------------------------
/// Stops the timer clock.
/// \param pTc  Pointer to an AT91S_TC instance.
//------------------------------------------------------------------------------
void TC_Stop(AT91S_TC *pTc)
{
    pTc->TC_CCR = AT91C_TC_CLKDIS;
  100810:	e3a03002 	mov	r3, #2	; 0x2
  100814:	e5803000 	str	r3, [r0]
}
  100818:	e12fff1e 	bx	lr

0010081c <TC_FindMckDivisor>:

//------------------------------------------------------------------------------
/// Finds the best MCK divisor given the timer frequency and MCK. The result
/// is guaranteed to satisfy the following equation:
///   (MCK / (DIV * 65536)) <= freq <= (MCK / DIV)
/// with DIV being the highest possible value.
/// Returns 1 if a divisor could be found; otherwise returns 0.
/// \param freq  Desired timer frequency.
/// \param mck  Master clock frequency.
/// \param div  Divisor value.
/// \param tcclks  TCCLKS field value for divisor.
//------------------------------------------------------------------------------
unsigned char TC_FindMckDivisor(
    unsigned int freq,
    unsigned int mck,
    unsigned int *div,
    unsigned int *tcclks)
{
  10081c:	e92d47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  100820:	e1a07000 	mov	r7, r0
  100824:	e1a06001 	mov	r6, r1
  100828:	e1a0a002 	mov	sl, r2
  10082c:	e1a09003 	mov	r9, r3
  100830:	e3a05000 	mov	r5, #0	; 0x0
  100834:	e59f40b4 	ldr	r4, [pc, #180]	; 1008f0 <.text+0x8f0>
  100838:	ea000003 	b	10084c <TC_FindMckDivisor+0x30>
    const unsigned int divisors[5] = {2, 8, 32, 128,
#if defined(at91sam9260) || defined(at91sam9261) || defined(at91sam9263) \
    || defined(at91sam9xe) || defined(at91sam9rl64) || defined(at91cap9)
        BOARD_MCK / 32768};
#else
        1024};
#endif
    unsigned int index = 0;

    // Satisfy lower bound
    while (freq < ((mck / divisors[index]) / 65536)) {

        index++;
  10083c:	e2855001 	add	r5, r5, #1	; 0x1
  100840:	e2844004 	add	r4, r4, #4	; 0x4

        // If no divisor can be found, return 0
        if (index == 5) {
  100844:	e3550005 	cmp	r5, #5	; 0x5
  100848:	0a000023 	beq	1008dc <TC_FindMckDivisor+0xc0>
  10084c:	e1a00006 	mov	r0, r6
  100850:	e5941000 	ldr	r1, [r4]
  100854:	eb000717 	bl	1024b8 <__aeabi_uidiv>
  100858:	e1570820 	cmp	r7, r0, lsr #16
  10085c:	3afffff6 	bcc	10083c <TC_FindMckDivisor+0x20>
  100860:	ea00000a 	b	100890 <TC_FindMckDivisor+0x74>

            return 0;
        }
    }

    // Try to maximise DIV while satisfying upper bound
    while (index < 4) {

        if (freq > (mck / divisors[index + 1])) {
  100864:	e2858001 	add	r8, r5, #1	; 0x1
  100868:	e1a00006 	mov	r0, r6
  10086c:	e5941008 	ldr	r1, [r4, #8]
  100870:	eb000710 	bl	1024b8 <__aeabi_uidiv>
  100874:	e2844004 	add	r4, r4, #4	; 0x4
  100878:	e1570000 	cmp	r7, r0
  10087c:	8a00000e 	bhi	1008bc <TC_FindMckDivisor+0xa0>

            break;
  100880:	e1a05008 	mov	r5, r8
  100884:	e3550004 	cmp	r5, #4	; 0x4
  100888:	1afffff5 	bne	100864 <TC_FindMckDivisor+0x48>
  10088c:	ea00000a 	b	1008bc <TC_FindMckDivisor+0xa0>
  100890:	e3550003 	cmp	r5, #3	; 0x3
  100894:	8a000008 	bhi	1008bc <TC_FindMckDivisor+0xa0>
  100898:	e2858001 	add	r8, r5, #1	; 0x1
  10089c:	e59f404c 	ldr	r4, [pc, #76]	; 1008f0 <.text+0x8f0>
  1008a0:	e1a00006 	mov	r0, r6
  1008a4:	e7941108 	ldr	r1, [r4, r8, lsl #2]
  1008a8:	eb000702 	bl	1024b8 <__aeabi_uidiv>
  1008ac:	e1570000 	cmp	r7, r0
  1008b0:	90844105 	addls	r4, r4, r5, lsl #2
  1008b4:	91a05008 	movls	r5, r8
  1008b8:	9afffff1 	bls	100884 <TC_FindMckDivisor+0x68>
        }
        index++;
    }

    // Store results
    if (div) {
  1008bc:	e35a0000 	cmp	sl, #0	; 0x0

        *div = divisors[index];
  1008c0:	159f3028 	ldrne	r3, [pc, #40]	; 1008f0 <.text+0x8f0>
  1008c4:	17933105 	ldrne	r3, [r3, r5, lsl #2]
  1008c8:	158a3000 	strne	r3, [sl]
    }
    if (tcclks) {
  1008cc:	e3590000 	cmp	r9, #0	; 0x0
  1008d0:	03a00001 	moveq	r0, #1	; 0x1
  1008d4:	08bd87f0 	ldmeqia	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  1008d8:	ea000001 	b	1008e4 <TC_FindMckDivisor+0xc8>
  1008dc:	e3a00000 	mov	r0, #0	; 0x0
  1008e0:	e8bd87f0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

        *tcclks = index;
  1008e4:	e5895000 	str	r5, [r9]
  1008e8:	e3a00001 	mov	r0, #1	; 0x1
    }

    return 1;
}
  1008ec:	e8bd87f0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  1008f0:	0010a6d8 	ldreqsb	sl, [r0], -r8

001008f4 <vFlibManager_Init>:
#include "libTime/libTimer.h"
#include "libUart/libUart.h"

void vFlibManager_Init( void )
{
  1008f4:	e52de004 	str	lr, [sp, #-4]!
	vFlibTimer_Iinit();
  1008f8:	ebffff7a 	bl	1006e8 <vFlibTimer_Iinit>
	//vFlibUart_Init();
}
  1008fc:	e49df004 	ldr	pc, [sp], #4

00100900 <vFdvUart_init>:
#define USART_INTERRUPT_LEVEL		5
AT91S_USART * pUSART = AT91C_BASE_US0;      /* Global Pointer to USART0 */
void (*pvfRXCallback)(unsigned char*);

void vFdvUart_init (void) {                   /* Initialize Serial Interface */
  100900:	e1a0c00d 	mov	ip, sp
  100904:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100908:	e24cb004 	sub	fp, ip, #4	; 0x4
  10090c:	e24dd004 	sub	sp, sp, #4	; 0x4
  /* mt: n.b: uart0 clock must be enabled to use it */

  *AT91C_PIOA_PDR = AT91C_PA5_RXD0 |        /* Enable RxD0 Pin */
  100910:	e3e03ebf 	mvn	r3, #3056	; 0xbf0
  100914:	e243300b 	sub	r3, r3, #11	; 0xb
  100918:	e3a02060 	mov	r2, #96	; 0x60
  10091c:	e5832000 	str	r2, [r3]
                    AT91C_PA6_TXD0;         /* Enalbe TxD0 Pin */

  	// Disable interrupts
  pUSART->US_IDR = (unsigned int) -1;
  100920:	e59f30c8 	ldr	r3, [pc, #200]	; 1009f0 <.text+0x9f0>
  100924:	e5932000 	ldr	r2, [r3]
  100928:	e3e03000 	mvn	r3, #0	; 0x0
  10092c:	e582300c 	str	r3, [r2, #12]

    // Timeguard disabled
  pUSART->US_TTGR = 0;
  100930:	e59f30b8 	ldr	r3, [pc, #184]	; 1009f0 <.text+0x9f0>
  100934:	e5932000 	ldr	r2, [r3]
  100938:	e3a03000 	mov	r3, #0	; 0x0
  10093c:	e5823028 	str	r3, [r2, #40]

  
  pUSART->US_CR = AT91C_US_RSTRX |          /* Reset Receiver      */
  100940:	e59f30a8 	ldr	r3, [pc, #168]	; 1009f0 <.text+0x9f0>
  100944:	e5932000 	ldr	r2, [r3]
  100948:	e3a030ac 	mov	r3, #172	; 0xac
  10094c:	e5823000 	str	r3, [r2]
                  AT91C_US_RSTTX |          /* Reset Transmitter   */
                  AT91C_US_RXDIS |          /* Receiver Disable    */
                  AT91C_US_TXDIS;           /* Transmitter Disable */

  pUSART->US_MR = AT91C_US_USMODE_NORMAL |  /* Normal Mode */
  100950:	e59f3098 	ldr	r3, [pc, #152]	; 1009f0 <.text+0x9f0>
  100954:	e5932000 	ldr	r2, [r3]
  100958:	e3a03d23 	mov	r3, #2240	; 0x8c0
  10095c:	e5823004 	str	r3, [r2, #4]
                  AT91C_US_CLKS_CLOCK    |  /* Clock = MCK */
                  AT91C_US_CHRL_8_BITS   |  /* 8-bit Data  */
                  AT91C_US_PAR_NONE      |  /* No Parity   */
                  AT91C_US_NBSTOP_1_BIT;    /* 1 Stop Bit  */

  pUSART->US_BRGR = BRD;                    /* Baud Rate Divisor */
  100960:	e59f3088 	ldr	r3, [pc, #136]	; 1009f0 <.text+0x9f0>
  100964:	e5932000 	ldr	r2, [r3]
  100968:	e3a0301a 	mov	r3, #26	; 0x1a
  10096c:	e5823020 	str	r3, [r2, #32]

  //* Reset receiver and transmitter
      pUSART->US_CR = AT91C_US_RSTRX | AT91C_US_RSTTX ;
  100970:	e59f3078 	ldr	r3, [pc, #120]	; 1009f0 <.text+0x9f0>
  100974:	e5932000 	ldr	r2, [r3]
  100978:	e3a0300c 	mov	r3, #12	; 0xc
  10097c:	e5823000 	str	r3, [r2]
  
      pUSART->US_CR = AT91C_US_RXEN  |          /* Receiver Enable     */
  100980:	e59f3068 	ldr	r3, [pc, #104]	; 1009f0 <.text+0x9f0>
  100984:	e5932000 	ldr	r2, [r3]
  100988:	e3a03050 	mov	r3, #80	; 0x50
  10098c:	e5823000 	str	r3, [r2]
                  AT91C_US_TXEN;            /* Transmitter Enable  */
  //* Enable USART IT AT91C_US_ENDRX
  	AT91F_US_EnableIt(AT91C_BASE_US0, AT91C_US_RXRDY);
  100990:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  100994:	e1a006c0 	mov	r0, r0, asr #13
  100998:	e3a01001 	mov	r1, #1	; 0x1
  10099c:	eb000016 	bl	1009fc <AT91F_US_EnableIt>
  //* open Usart 0 interrupt
  	AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, AT91C_ID_US0, USART_INTERRUPT_LEVEL,AT91C_AIC_SRCTYPE_HIGH_LEVEL, (void (*) ())SerialIsr_Wrapper); 
  1009a0:	e59f304c 	ldr	r3, [pc, #76]	; 1009f4 <.text+0x9f4>
  1009a4:	e58d3000 	str	r3, [sp]
  1009a8:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1009ac:	e1a009c0 	mov	r0, r0, asr #19
  1009b0:	e3a01006 	mov	r1, #6	; 0x6
  1009b4:	e3a02005 	mov	r2, #5	; 0x5
  1009b8:	e3a03040 	mov	r3, #64	; 0x40
  1009bc:	eb000019 	bl	100a28 <AT91F_AIC_ConfigureIt>
  	AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_US0);
  1009c0:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1009c4:	e1a009c0 	mov	r0, r0, asr #19
  1009c8:	e3a01006 	mov	r1, #6	; 0x6
  1009cc:	eb000042 	bl	100adc <AT91F_AIC_EnableIt>

  	pvfRXCallback=0;
  1009d0:	e59f2020 	ldr	r2, [pc, #32]	; 1009f8 <.text+0x9f8>
  1009d4:	e3a03000 	mov	r3, #0	; 0x0
  1009d8:	e5823000 	str	r3, [r2]
  	AT91F_PDC_Open(AT91C_BASE_PDC_US0);
  1009dc:	e3a004ff 	mov	r0, #-16777216	; 0xff000000
  1009e0:	e280073f 	add	r0, r0, #16515072	; 0xfc0000
  1009e4:	e2800c01 	add	r0, r0, #256	; 0x100
  1009e8:	eb000049 	bl	100b14 <AT91F_PDC_Open>
  	//AT91F_PDC_Close(AT91C_BASE_PDC_US0);
  	/*AT91F_PDC_DisableTx(AT91C_BASE_PDC_US0);
  	AT91F_PDC_SetNextTx(AT91C_BASE_PDC_US0, (char *) 0, 0);
  	AT91F_PDC_SetTx(AT91C_BASE_PDC_US0, (char *) 0, 0);
  	AT91F_PDC_EnableTx(AT91C_BASE_PDC_US0);*/
}
  1009ec:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  1009f0:	00200178 	eoreq	r0, r0, r8, ror r1
  1009f4:	00100e24 	andeqs	r0, r0, r4, lsr #28
  1009f8:	00200bf0 	streqd	r0, [r0], -r0

001009fc <AT91F_US_EnableIt>:
//*----------------------------------------------------------------------------
static __inline void AT91F_US_EnableIt (
	AT91PS_USART pUSART, // \arg pointer to a USART controller
	unsigned int flag)   // \arg IT to be enabled
{
  1009fc:	e1a0c00d 	mov	ip, sp
  100a00:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100a04:	e24cb004 	sub	fp, ip, #4	; 0x4
  100a08:	e24dd008 	sub	sp, sp, #8	; 0x8
  100a0c:	e50b0010 	str	r0, [fp, #-16]
  100a10:	e50b1014 	str	r1, [fp, #-20]
	//* Write to the IER register
	pUSART->US_IER = flag;
  100a14:	e51b2010 	ldr	r2, [fp, #-16]
  100a18:	e51b3014 	ldr	r3, [fp, #-20]
  100a1c:	e5823008 	str	r3, [r2, #8]
}
  100a20:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100a24:	e89da800 	ldmia	sp, {fp, sp, pc}

00100a28 <AT91F_AIC_ConfigureIt>:
  100a28:	e1a0c00d 	mov	ip, sp
  100a2c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100a30:	e24cb004 	sub	fp, ip, #4	; 0x4
  100a34:	e24dd018 	sub	sp, sp, #24	; 0x18
  100a38:	e50b0018 	str	r0, [fp, #-24]
  100a3c:	e50b101c 	str	r1, [fp, #-28]
  100a40:	e50b2020 	str	r2, [fp, #-32]
  100a44:	e50b3024 	str	r3, [fp, #-36]
  100a48:	e51b301c 	ldr	r3, [fp, #-28]
  100a4c:	e51b2018 	ldr	r2, [fp, #-24]
  100a50:	e3a01080 	mov	r1, #128	; 0x80
  100a54:	e1a03103 	mov	r3, r3, lsl #2
  100a58:	e0833002 	add	r3, r3, r2
  100a5c:	e0833001 	add	r3, r3, r1
  100a60:	e5933000 	ldr	r3, [r3]
  100a64:	e50b3014 	str	r3, [fp, #-20]
  100a68:	e51b201c 	ldr	r2, [fp, #-28]
  100a6c:	e3a03001 	mov	r3, #1	; 0x1
  100a70:	e1a03213 	mov	r3, r3, lsl r2
  100a74:	e50b3010 	str	r3, [fp, #-16]
  100a78:	e51b2018 	ldr	r2, [fp, #-24]
  100a7c:	e51b3010 	ldr	r3, [fp, #-16]
  100a80:	e5823124 	str	r3, [r2, #292]
  100a84:	e51b001c 	ldr	r0, [fp, #-28]
  100a88:	e59b3004 	ldr	r3, [fp, #4]
  100a8c:	e1a0c003 	mov	ip, r3
  100a90:	e51b2018 	ldr	r2, [fp, #-24]
  100a94:	e3a01080 	mov	r1, #128	; 0x80
  100a98:	e1a03100 	mov	r3, r0, lsl #2
  100a9c:	e0833002 	add	r3, r3, r2
  100aa0:	e0833001 	add	r3, r3, r1
  100aa4:	e583c000 	str	ip, [r3]
  100aa8:	e51b101c 	ldr	r1, [fp, #-28]
  100aac:	e51b2024 	ldr	r2, [fp, #-36]
  100ab0:	e51b3020 	ldr	r3, [fp, #-32]
  100ab4:	e1822003 	orr	r2, r2, r3
  100ab8:	e51b3018 	ldr	r3, [fp, #-24]
  100abc:	e7832101 	str	r2, [r3, r1, lsl #2]
  100ac0:	e51b2018 	ldr	r2, [fp, #-24]
  100ac4:	e51b3010 	ldr	r3, [fp, #-16]
  100ac8:	e5823128 	str	r3, [r2, #296]
  100acc:	e51b3014 	ldr	r3, [fp, #-20]
  100ad0:	e1a00003 	mov	r0, r3
  100ad4:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100ad8:	e89da800 	ldmia	sp, {fp, sp, pc}

00100adc <AT91F_AIC_EnableIt>:
  100adc:	e1a0c00d 	mov	ip, sp
  100ae0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100ae4:	e24cb004 	sub	fp, ip, #4	; 0x4
  100ae8:	e24dd008 	sub	sp, sp, #8	; 0x8
  100aec:	e50b0010 	str	r0, [fp, #-16]
  100af0:	e50b1014 	str	r1, [fp, #-20]
  100af4:	e51b2014 	ldr	r2, [fp, #-20]
  100af8:	e3a03001 	mov	r3, #1	; 0x1
  100afc:	e1a03213 	mov	r3, r3, lsl r2
  100b00:	e1a02003 	mov	r2, r3
  100b04:	e51b3010 	ldr	r3, [fp, #-16]
  100b08:	e5832120 	str	r2, [r3, #288]
  100b0c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100b10:	e89da800 	ldmia	sp, {fp, sp, pc}

00100b14 <AT91F_PDC_Open>:
  100b14:	e1a0c00d 	mov	ip, sp
  100b18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100b1c:	e24cb004 	sub	fp, ip, #4	; 0x4
  100b20:	e24dd004 	sub	sp, sp, #4	; 0x4
  100b24:	e50b0010 	str	r0, [fp, #-16]
  100b28:	e51b0010 	ldr	r0, [fp, #-16]
  100b2c:	eb000016 	bl	100b8c <AT91F_PDC_DisableRx>
  100b30:	e51b0010 	ldr	r0, [fp, #-16]
  100b34:	eb00001d 	bl	100bb0 <AT91F_PDC_DisableTx>
  100b38:	e51b0010 	ldr	r0, [fp, #-16]
  100b3c:	e3a01000 	mov	r1, #0	; 0x0
  100b40:	e3a02000 	mov	r2, #0	; 0x0
  100b44:	eb000022 	bl	100bd4 <AT91F_PDC_SetNextTx>
  100b48:	e51b0010 	ldr	r0, [fp, #-16]
  100b4c:	e3a01000 	mov	r1, #0	; 0x0
  100b50:	e3a02000 	mov	r2, #0	; 0x0
  100b54:	eb00002e 	bl	100c14 <AT91F_PDC_SetNextRx>
  100b58:	e51b0010 	ldr	r0, [fp, #-16]
  100b5c:	e3a01000 	mov	r1, #0	; 0x0
  100b60:	e3a02000 	mov	r2, #0	; 0x0
  100b64:	eb00003a 	bl	100c54 <AT91F_PDC_SetTx>
  100b68:	e51b0010 	ldr	r0, [fp, #-16]
  100b6c:	e3a01000 	mov	r1, #0	; 0x0
  100b70:	e3a02000 	mov	r2, #0	; 0x0
  100b74:	eb000046 	bl	100c94 <AT91F_PDC_SetRx>
  100b78:	e51b0010 	ldr	r0, [fp, #-16]
  100b7c:	eb000054 	bl	100cd4 <AT91F_PDC_EnableRx>
  100b80:	e51b0010 	ldr	r0, [fp, #-16]
  100b84:	eb00005b 	bl	100cf8 <AT91F_PDC_EnableTx>
  100b88:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100b8c <AT91F_PDC_DisableRx>:
  100b8c:	e1a0c00d 	mov	ip, sp
  100b90:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100b94:	e24cb004 	sub	fp, ip, #4	; 0x4
  100b98:	e24dd004 	sub	sp, sp, #4	; 0x4
  100b9c:	e50b0010 	str	r0, [fp, #-16]
  100ba0:	e51b2010 	ldr	r2, [fp, #-16]
  100ba4:	e3a03002 	mov	r3, #2	; 0x2
  100ba8:	e5823020 	str	r3, [r2, #32]
  100bac:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100bb0 <AT91F_PDC_DisableTx>:
  100bb0:	e1a0c00d 	mov	ip, sp
  100bb4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100bb8:	e24cb004 	sub	fp, ip, #4	; 0x4
  100bbc:	e24dd004 	sub	sp, sp, #4	; 0x4
  100bc0:	e50b0010 	str	r0, [fp, #-16]
  100bc4:	e51b2010 	ldr	r2, [fp, #-16]
  100bc8:	e3a03c02 	mov	r3, #512	; 0x200
  100bcc:	e5823020 	str	r3, [r2, #32]
  100bd0:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100bd4 <AT91F_PDC_SetNextTx>:
  100bd4:	e1a0c00d 	mov	ip, sp
  100bd8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100bdc:	e24cb004 	sub	fp, ip, #4	; 0x4
  100be0:	e24dd00c 	sub	sp, sp, #12	; 0xc
  100be4:	e50b0010 	str	r0, [fp, #-16]
  100be8:	e50b1014 	str	r1, [fp, #-20]
  100bec:	e50b2018 	str	r2, [fp, #-24]
  100bf0:	e51b3014 	ldr	r3, [fp, #-20]
  100bf4:	e1a02003 	mov	r2, r3
  100bf8:	e51b3010 	ldr	r3, [fp, #-16]
  100bfc:	e5832018 	str	r2, [r3, #24]
  100c00:	e51b2010 	ldr	r2, [fp, #-16]
  100c04:	e51b3018 	ldr	r3, [fp, #-24]
  100c08:	e582301c 	str	r3, [r2, #28]
  100c0c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100c10:	e89da800 	ldmia	sp, {fp, sp, pc}

00100c14 <AT91F_PDC_SetNextRx>:
  100c14:	e1a0c00d 	mov	ip, sp
  100c18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100c1c:	e24cb004 	sub	fp, ip, #4	; 0x4
  100c20:	e24dd00c 	sub	sp, sp, #12	; 0xc
  100c24:	e50b0010 	str	r0, [fp, #-16]
  100c28:	e50b1014 	str	r1, [fp, #-20]
  100c2c:	e50b2018 	str	r2, [fp, #-24]
  100c30:	e51b3014 	ldr	r3, [fp, #-20]
  100c34:	e1a02003 	mov	r2, r3
  100c38:	e51b3010 	ldr	r3, [fp, #-16]
  100c3c:	e5832010 	str	r2, [r3, #16]
  100c40:	e51b2010 	ldr	r2, [fp, #-16]
  100c44:	e51b3018 	ldr	r3, [fp, #-24]
  100c48:	e5823014 	str	r3, [r2, #20]
  100c4c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100c50:	e89da800 	ldmia	sp, {fp, sp, pc}

00100c54 <AT91F_PDC_SetTx>:
  100c54:	e1a0c00d 	mov	ip, sp
  100c58:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100c5c:	e24cb004 	sub	fp, ip, #4	; 0x4
  100c60:	e24dd00c 	sub	sp, sp, #12	; 0xc
  100c64:	e50b0010 	str	r0, [fp, #-16]
  100c68:	e50b1014 	str	r1, [fp, #-20]
  100c6c:	e50b2018 	str	r2, [fp, #-24]
  100c70:	e51b3014 	ldr	r3, [fp, #-20]
  100c74:	e1a02003 	mov	r2, r3
  100c78:	e51b3010 	ldr	r3, [fp, #-16]
  100c7c:	e5832008 	str	r2, [r3, #8]
  100c80:	e51b2010 	ldr	r2, [fp, #-16]
  100c84:	e51b3018 	ldr	r3, [fp, #-24]
  100c88:	e582300c 	str	r3, [r2, #12]
  100c8c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100c90:	e89da800 	ldmia	sp, {fp, sp, pc}

00100c94 <AT91F_PDC_SetRx>:
  100c94:	e1a0c00d 	mov	ip, sp
  100c98:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100c9c:	e24cb004 	sub	fp, ip, #4	; 0x4
  100ca0:	e24dd00c 	sub	sp, sp, #12	; 0xc
  100ca4:	e50b0010 	str	r0, [fp, #-16]
  100ca8:	e50b1014 	str	r1, [fp, #-20]
  100cac:	e50b2018 	str	r2, [fp, #-24]
  100cb0:	e51b3014 	ldr	r3, [fp, #-20]
  100cb4:	e1a02003 	mov	r2, r3
  100cb8:	e51b3010 	ldr	r3, [fp, #-16]
  100cbc:	e5832000 	str	r2, [r3]
  100cc0:	e51b2010 	ldr	r2, [fp, #-16]
  100cc4:	e51b3018 	ldr	r3, [fp, #-24]
  100cc8:	e5823004 	str	r3, [r2, #4]
  100ccc:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100cd0:	e89da800 	ldmia	sp, {fp, sp, pc}

00100cd4 <AT91F_PDC_EnableRx>:
  100cd4:	e1a0c00d 	mov	ip, sp
  100cd8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100cdc:	e24cb004 	sub	fp, ip, #4	; 0x4
  100ce0:	e24dd004 	sub	sp, sp, #4	; 0x4
  100ce4:	e50b0010 	str	r0, [fp, #-16]
  100ce8:	e51b2010 	ldr	r2, [fp, #-16]
  100cec:	e3a03001 	mov	r3, #1	; 0x1
  100cf0:	e5823020 	str	r3, [r2, #32]
  100cf4:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100cf8 <AT91F_PDC_EnableTx>:
  100cf8:	e1a0c00d 	mov	ip, sp
  100cfc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100d00:	e24cb004 	sub	fp, ip, #4	; 0x4
  100d04:	e24dd004 	sub	sp, sp, #4	; 0x4
  100d08:	e50b0010 	str	r0, [fp, #-16]
  100d0c:	e51b2010 	ldr	r2, [fp, #-16]
  100d10:	e3a03c01 	mov	r3, #256	; 0x100
  100d14:	e5823020 	str	r3, [r2, #32]
  100d18:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100d1c <usart_c_irq_handler>:

void usart_c_irq_handler( void )
{
  100d1c:	e1a0c00d 	mov	ip, sp
  100d20:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100d24:	e24cb004 	sub	fp, ip, #4	; 0x4
  100d28:	e24dd008 	sub	sp, sp, #8	; 0x8
	//volatile unsigned int status;
	volatile unsigned char ucByteIn;
	volatile unsigned int uiStatus;
	
	uiStatus = AT91C_BASE_US0->US_CSR;
  100d2c:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
  100d30:	e1a036c3 	mov	r3, r3, asr #13
  100d34:	e5933014 	ldr	r3, [r3, #20]
  100d38:	e50b3014 	str	r3, [fp, #-20]
	uiStatus &= AT91C_BASE_US0->US_IMR;
  100d3c:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
  100d40:	e1a036c3 	mov	r3, r3, asr #13
  100d44:	e5932010 	ldr	r2, [r3, #16]
  100d48:	e51b3014 	ldr	r3, [fp, #-20]
  100d4c:	e0023003 	and	r3, r2, r3
  100d50:	e50b3014 	str	r3, [fp, #-20]
	//* get Usart status register
	//if ( AT91F_US_RxReady(AT91C_BASE_US0)&AT91C_US_RXRDY )
	 if ( uiStatus&AT91C_US_RXRDY )
  100d54:	e51b3014 	ldr	r3, [fp, #-20]
  100d58:	e2033001 	and	r3, r3, #1	; 0x1
  100d5c:	e20330ff 	and	r3, r3, #255	; 0xff
  100d60:	e3530000 	cmp	r3, #0	; 0x0
  100d64:	0a00000f 	beq	100da8 <usart_c_irq_handler+0x8c>
	{
		ucByteIn = AT91F_US_GetChar( AT91C_BASE_US0 );
  100d68:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  100d6c:	e1a006c0 	mov	r0, r0, asr #13
  100d70:	eb000016 	bl	100dd0 <AT91F_US_GetChar>
  100d74:	e1a03000 	mov	r3, r0
  100d78:	e20330ff 	and	r3, r3, #255	; 0xff
  100d7c:	e54b300d 	strb	r3, [fp, #-13]
		if( pvfRXCallback )
  100d80:	e59f3044 	ldr	r3, [pc, #68]	; 100dcc <.text+0xdcc>
  100d84:	e5933000 	ldr	r3, [r3]
  100d88:	e3530000 	cmp	r3, #0	; 0x0
  100d8c:	0a000005 	beq	100da8 <usart_c_irq_handler+0x8c>
			pvfRXCallback((unsigned char*)&ucByteIn);
  100d90:	e59f3034 	ldr	r3, [pc, #52]	; 100dcc <.text+0xdcc>
  100d94:	e5932000 	ldr	r2, [r3]
  100d98:	e24b300d 	sub	r3, fp, #13	; 0xd
  100d9c:	e1a00003 	mov	r0, r3
  100da0:	e1a0e00f 	mov	lr, pc
  100da4:	e12fff12 	bx	r2
	}
	
	//* Reset the satus bit
	 AT91C_BASE_US0->US_CR = AT91C_US_RSTSTA;
  100da8:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
  100dac:	e1a036c3 	mov	r3, r3, asr #13
  100db0:	e3a02c01 	mov	r2, #256	; 0x100
  100db4:	e5832000 	str	r2, [r3]
	AT91F_AIC_AcknowledgeIt(AT91C_BASE_AIC);
  100db8:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  100dbc:	e1a009c0 	mov	r0, r0, asr #19
  100dc0:	eb00000d 	bl	100dfc <AT91F_AIC_AcknowledgeIt>
}
  100dc4:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100dc8:	e89da800 	ldmia	sp, {fp, sp, pc}
  100dcc:	00200bf0 	streqd	r0, [r0], -r0

00100dd0 <AT91F_US_GetChar>:
//* \brief Receive a character,does not check if a character is available
//*----------------------------------------------------------------------------
static __inline int AT91F_US_GetChar (
	const AT91PS_USART pUSART)
{
  100dd0:	e1a0c00d 	mov	ip, sp
  100dd4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100dd8:	e24cb004 	sub	fp, ip, #4	; 0x4
  100ddc:	e24dd004 	sub	sp, sp, #4	; 0x4
  100de0:	e50b0010 	str	r0, [fp, #-16]
    return((pUSART->US_RHR) & 0x1FF);
  100de4:	e51b3010 	ldr	r3, [fp, #-16]
  100de8:	e5933018 	ldr	r3, [r3, #24]
  100dec:	e1a03b83 	mov	r3, r3, lsl #23
  100df0:	e1a03ba3 	mov	r3, r3, lsr #23
}
  100df4:	e1a00003 	mov	r0, r3
  100df8:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100dfc <AT91F_AIC_AcknowledgeIt>:
  100dfc:	e1a0c00d 	mov	ip, sp
  100e00:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100e04:	e24cb004 	sub	fp, ip, #4	; 0x4
  100e08:	e24dd004 	sub	sp, sp, #4	; 0x4
  100e0c:	e50b0010 	str	r0, [fp, #-16]
  100e10:	e51b3010 	ldr	r3, [fp, #-16]
  100e14:	e5932130 	ldr	r2, [r3, #304]
  100e18:	e51b3010 	ldr	r3, [fp, #-16]
  100e1c:	e5832130 	str	r2, [r3, #304]
  100e20:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100e24 <SerialIsr_Wrapper>:

void NACKEDFUNC SerialIsr_Wrapper( void )
{
	/* Save the context of the interrupted task. */
	ISR_ENTRY();
  100e24:	e24ee004 	sub	lr, lr, #4	; 0x4
  100e28:	e92d5fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
  100e2c:	e14f1000 	mrs	r1, SPSR
  100e30:	e92d0002 	stmdb	sp!, {r1}

	/* Call the handler to do the work.  This must be a separate
	function to ensure the stack frame is set up correctly. */
	usart_c_irq_handler();
  100e34:	ebffffb8 	bl	100d1c <usart_c_irq_handler>

	/* Restore the context of whichever task will execute next. */
	ISR_EXIT();
  100e38:	e8bd0002 	ldmia	sp!, {r1}
  100e3c:	e161f001 	msr	SPSR_c, r1
  100e40:	e8fd9fff 	ldmia	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

00100e44 <vFdvUart_SetRXCallback>:
}

void vFdvUart_SetRXCallback( void (*callback)(unsigned char*))
{
  100e44:	e1a0c00d 	mov	ip, sp
  100e48:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100e4c:	e24cb004 	sub	fp, ip, #4	; 0x4
  100e50:	e24dd004 	sub	sp, sp, #4	; 0x4
  100e54:	e50b0010 	str	r0, [fp, #-16]
	pvfRXCallback = callback;
  100e58:	e59f2008 	ldr	r2, [pc, #8]	; 100e68 <.text+0xe68>
  100e5c:	e51b3010 	ldr	r3, [fp, #-16]
  100e60:	e5823000 	str	r3, [r2]

}
  100e64:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  100e68:	00200bf0 	streqd	r0, [r0], -r0

00100e6c <vFdvUart_WaitTXFree>:

void vFdvUart_WaitTXFree(void)
{
  100e6c:	e1a0c00d 	mov	ip, sp
  100e70:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100e74:	e24cb004 	sub	fp, ip, #4	; 0x4
	while (!(pUSART->US_CSR & AT91C_US_TXRDY));   /* Wait for Empty Tx Buffer */
  100e78:	e59f3014 	ldr	r3, [pc, #20]	; 100e94 <.text+0xe94>
  100e7c:	e5933000 	ldr	r3, [r3]
  100e80:	e5933014 	ldr	r3, [r3, #20]
  100e84:	e2033002 	and	r3, r3, #2	; 0x2
  100e88:	e3530000 	cmp	r3, #0	; 0x0
  100e8c:	0afffff9 	beq	100e78 <vFdvUart_WaitTXFree+0xc>
}
  100e90:	e89da800 	ldmia	sp, {fp, sp, pc}
  100e94:	00200178 	eoreq	r0, r0, r8, ror r1

00100e98 <uart0_putc>:

int uart0_putc(int ch) 
{
  100e98:	e1a0c00d 	mov	ip, sp
  100e9c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100ea0:	e24cb004 	sub	fp, ip, #4	; 0x4
  100ea4:	e24dd004 	sub	sp, sp, #4	; 0x4
  100ea8:	e50b0010 	str	r0, [fp, #-16]
	while (!(pUSART->US_CSR & AT91C_US_TXRDY));   /* Wait for Empty Tx Buffer */
  100eac:	e59f302c 	ldr	r3, [pc, #44]	; 100ee0 <.text+0xee0>
  100eb0:	e5933000 	ldr	r3, [r3]
  100eb4:	e5933014 	ldr	r3, [r3, #20]
  100eb8:	e2033002 	and	r3, r3, #2	; 0x2
  100ebc:	e3530000 	cmp	r3, #0	; 0x0
  100ec0:	0afffff9 	beq	100eac <uart0_putc+0x14>
	return (pUSART->US_THR = ch);                 /* Transmit Character */
  100ec4:	e59f3014 	ldr	r3, [pc, #20]	; 100ee0 <.text+0xee0>
  100ec8:	e5932000 	ldr	r2, [r3]
  100ecc:	e51b3010 	ldr	r3, [fp, #-16]
  100ed0:	e582301c 	str	r3, [r2, #28]
  100ed4:	e592301c 	ldr	r3, [r2, #28]
}	
  100ed8:	e1a00003 	mov	r0, r3
  100edc:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  100ee0:	00200178 	eoreq	r0, r0, r8, ror r1

00100ee4 <uart0_putchar>:

int uart0_putchar (int ch) {                      /* Write Character to Serial Port */
  100ee4:	e1a0c00d 	mov	ip, sp
  100ee8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100eec:	e24cb004 	sub	fp, ip, #4	; 0x4
  100ef0:	e24dd004 	sub	sp, sp, #4	; 0x4
  100ef4:	e50b0010 	str	r0, [fp, #-16]

  if (ch == '\n')  {                            /* Check for LF */
  100ef8:	e51b3010 	ldr	r3, [fp, #-16]
  100efc:	e353000a 	cmp	r3, #10	; 0xa
  100f00:	1a000001 	bne	100f0c <uart0_putchar+0x28>
    uart0_putc( '\r' );                         /* Output CR */
  100f04:	e3a0000d 	mov	r0, #13	; 0xd
  100f08:	ebffffe2 	bl	100e98 <uart0_putc>
  }
  return uart0_putc( ch );                     /* Transmit Character */
  100f0c:	e51b0010 	ldr	r0, [fp, #-16]
  100f10:	ebffffe0 	bl	100e98 <uart0_putc>
  100f14:	e1a03000 	mov	r3, r0
}
  100f18:	e1a00003 	mov	r0, r3
  100f1c:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00100f20 <uart0_puts>:

int uart0_puts ( char* s )
{
  100f20:	e1a0c00d 	mov	ip, sp
  100f24:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100f28:	e24cb004 	sub	fp, ip, #4	; 0x4
  100f2c:	e24dd008 	sub	sp, sp, #8	; 0x8
  100f30:	e50b0014 	str	r0, [fp, #-20]
	int i = 0;
  100f34:	e3a03000 	mov	r3, #0	; 0x0
  100f38:	e50b3010 	str	r3, [fp, #-16]
	while ( *s ) {
  100f3c:	ea00000a 	b	100f6c <uart0_puts+0x4c>
		uart0_putc( *s++ );
  100f40:	e51b3014 	ldr	r3, [fp, #-20]
  100f44:	e5d33000 	ldrb	r3, [r3]
  100f48:	e1a02003 	mov	r2, r3
  100f4c:	e51b3014 	ldr	r3, [fp, #-20]
  100f50:	e2833001 	add	r3, r3, #1	; 0x1
  100f54:	e50b3014 	str	r3, [fp, #-20]
  100f58:	e1a00002 	mov	r0, r2
  100f5c:	ebffffcd 	bl	100e98 <uart0_putc>
		i++;
  100f60:	e51b3010 	ldr	r3, [fp, #-16]
  100f64:	e2833001 	add	r3, r3, #1	; 0x1
  100f68:	e50b3010 	str	r3, [fp, #-16]
  100f6c:	e51b3014 	ldr	r3, [fp, #-20]
  100f70:	e5d33000 	ldrb	r3, [r3]
  100f74:	e3530000 	cmp	r3, #0	; 0x0
  100f78:	1afffff0 	bne	100f40 <uart0_puts+0x20>
	}
	return i;
  100f7c:	e51b3010 	ldr	r3, [fp, #-16]
}
  100f80:	e1a00003 	mov	r0, r3
  100f84:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100f88:	e89da800 	ldmia	sp, {fp, sp, pc}

00100f8c <uart0_prints>:

int uart0_prints ( char* s )
{
  100f8c:	e1a0c00d 	mov	ip, sp
  100f90:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  100f94:	e24cb004 	sub	fp, ip, #4	; 0x4
  100f98:	e24dd008 	sub	sp, sp, #8	; 0x8
  100f9c:	e50b0014 	str	r0, [fp, #-20]
	int i = 0;
  100fa0:	e3a03000 	mov	r3, #0	; 0x0
  100fa4:	e50b3010 	str	r3, [fp, #-16]
	while ( *s ) {
  100fa8:	ea00000a 	b	100fd8 <uart0_prints+0x4c>
		uart0_putchar( *s++ );
  100fac:	e51b3014 	ldr	r3, [fp, #-20]
  100fb0:	e5d33000 	ldrb	r3, [r3]
  100fb4:	e1a02003 	mov	r2, r3
  100fb8:	e51b3014 	ldr	r3, [fp, #-20]
  100fbc:	e2833001 	add	r3, r3, #1	; 0x1
  100fc0:	e50b3014 	str	r3, [fp, #-20]
  100fc4:	e1a00002 	mov	r0, r2
  100fc8:	ebffffc5 	bl	100ee4 <uart0_putchar>
		i++;
  100fcc:	e51b3010 	ldr	r3, [fp, #-16]
  100fd0:	e2833001 	add	r3, r3, #1	; 0x1
  100fd4:	e50b3010 	str	r3, [fp, #-16]
  100fd8:	e51b3014 	ldr	r3, [fp, #-20]
  100fdc:	e5d33000 	ldrb	r3, [r3]
  100fe0:	e3530000 	cmp	r3, #0	; 0x0
  100fe4:	1afffff0 	bne	100fac <uart0_prints+0x20>
	}
	return i;
  100fe8:	e51b3010 	ldr	r3, [fp, #-16]
}
  100fec:	e1a00003 	mov	r0, r3
  100ff0:	e24bd00c 	sub	sp, fp, #12	; 0xc
  100ff4:	e89da800 	ldmia	sp, {fp, sp, pc}

00100ff8 <iFdvUart_kbhit>:

int iFdvUart_kbhit( void ) /* returns true if character in receive buffer */
{
  100ff8:	e1a0c00d 	mov	ip, sp
  100ffc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101000:	e24cb004 	sub	fp, ip, #4	; 0x4
  101004:	e24dd004 	sub	sp, sp, #4	; 0x4
	if ( pUSART->US_CSR & AT91C_US_RXRDY) {
  101008:	e59f3034 	ldr	r3, [pc, #52]	; 101044 <.text+0x1044>
  10100c:	e5933000 	ldr	r3, [r3]
  101010:	e5933014 	ldr	r3, [r3, #20]
  101014:	e2033001 	and	r3, r3, #1	; 0x1
  101018:	e20330ff 	and	r3, r3, #255	; 0xff
  10101c:	e3530000 	cmp	r3, #0	; 0x0
  101020:	0a000002 	beq	101030 <iFdvUart_kbhit+0x38>
		return 1;
  101024:	e3a03001 	mov	r3, #1	; 0x1
  101028:	e50b3010 	str	r3, [fp, #-16]
  10102c:	ea000001 	b	101038 <iFdvUart_kbhit+0x40>
	}
	else {
		return 0;
  101030:	e3a03000 	mov	r3, #0	; 0x0
  101034:	e50b3010 	str	r3, [fp, #-16]
  101038:	e51b3010 	ldr	r3, [fp, #-16]
	}
}
  10103c:	e1a00003 	mov	r0, r3
  101040:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  101044:	00200178 	eoreq	r0, r0, r8, ror r1

00101048 <uart0_getc>:

int uart0_getc ( void )  /* Read Character from Serial Port */
{    
  101048:	e1a0c00d 	mov	ip, sp
  10104c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101050:	e24cb004 	sub	fp, ip, #4	; 0x4
  while (!(pUSART->US_CSR & AT91C_US_RXRDY));   /* Wait for Full Rx Buffer */
  101054:	e59f3024 	ldr	r3, [pc, #36]	; 101080 <.text+0x1080>
  101058:	e5933000 	ldr	r3, [r3]
  10105c:	e5933014 	ldr	r3, [r3, #20]
  101060:	e2033001 	and	r3, r3, #1	; 0x1
  101064:	e3530000 	cmp	r3, #0	; 0x0
  101068:	0afffff9 	beq	101054 <uart0_getc+0xc>
  return (pUSART->US_RHR);                      /* Read Character */
  10106c:	e59f300c 	ldr	r3, [pc, #12]	; 101080 <.text+0x1080>
  101070:	e5933000 	ldr	r3, [r3]
  101074:	e5933018 	ldr	r3, [r3, #24]
}
  101078:	e1a00003 	mov	r0, r3
  10107c:	e89da800 	ldmia	sp, {fp, sp, pc}
  101080:	00200178 	eoreq	r0, r0, r8, ror r1

00101084 <ucFdvUart_GetByte>:


unsigned char ucFdvUart_GetByte(void)
{
  101084:	e1a0c00d 	mov	ip, sp
  101088:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10108c:	e24cb004 	sub	fp, ip, #4	; 0x4
	return (pUSART->US_RHR);                      /* Read Character */
  101090:	e59f3010 	ldr	r3, [pc, #16]	; 1010a8 <.text+0x10a8>
  101094:	e5933000 	ldr	r3, [r3]
  101098:	e5933018 	ldr	r3, [r3, #24]
  10109c:	e20330ff 	and	r3, r3, #255	; 0xff
}
  1010a0:	e1a00003 	mov	r0, r3
  1010a4:	e89da800 	ldmia	sp, {fp, sp, pc}
  1010a8:	00200178 	eoreq	r0, r0, r8, ror r1

001010ac <vFdvUart0_init>:



void vFdvUartSendPS2Byte( unsigned char );
//static unsigned char uc1,uc2;

void vFdvUart0_init (void) 
{                   /* Initialize Serial Interface */
  1010ac:	e1a0c00d 	mov	ip, sp
  1010b0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1010b4:	e24cb004 	sub	fp, ip, #4	; 0x4
  1010b8:	e24dd008 	sub	sp, sp, #8	; 0x8
	  /* mt: n.b: uart0 clock must be enabled to use it */
	volatile unsigned int uiCount,uiDummy;
	

	  *AT91C_PIOA_PDR = AT91C_PA5_RXD0 ;        /* Enable RxD0 & SCK0 Pin */
  1010bc:	e3e03ebf 	mvn	r3, #3056	; 0xbf0
  1010c0:	e243300b 	sub	r3, r3, #11	; 0xb
  1010c4:	e3a02020 	mov	r2, #32	; 0x20
  1010c8:	e5832000 	str	r2, [r3]

	  	// Disable interrupts
	  pUSART->US_IDR = (unsigned int) -1;
  1010cc:	e59f308c 	ldr	r3, [pc, #140]	; 101160 <.text+0x1160>
  1010d0:	e5932000 	ldr	r2, [r3]
  1010d4:	e3e03000 	mvn	r3, #0	; 0x0
  1010d8:	e582300c 	str	r3, [r2, #12]

	    // Timeguard disabled
	  pUSART->US_TTGR = 0;
  1010dc:	e59f307c 	ldr	r3, [pc, #124]	; 101160 <.text+0x1160>
  1010e0:	e5932000 	ldr	r2, [r3]
  1010e4:	e3a03000 	mov	r3, #0	; 0x0
  1010e8:	e5823028 	str	r3, [r2, #40]

	  
	  pUSART->US_CR = AT91C_US_RSTRX |          /* Reset Receiver      */
  1010ec:	e59f306c 	ldr	r3, [pc, #108]	; 101160 <.text+0x1160>
  1010f0:	e5932000 	ldr	r2, [r3]
  1010f4:	e3a030ac 	mov	r3, #172	; 0xac
  1010f8:	e5823000 	str	r3, [r2]
	                  AT91C_US_RSTTX |          /* Reset Transmitter   */
	                  AT91C_US_RXDIS |          /* Receiver Disable    */
	                  AT91C_US_TXDIS;           /* Transmitter Disable */

	  pUSART->US_MR = AT91C_US_USMODE_NORMAL |  /* Normal Mode */
  1010fc:	e59f305c 	ldr	r3, [pc, #92]	; 101160 <.text+0x1160>
  101100:	e5932000 	ldr	r2, [r3]
  101104:	e3a03e3f 	mov	r3, #1008	; 0x3f0
  101108:	e5823004 	str	r3, [r2, #4]
	  					AT91C_US_CLKS_EXT    |  /* Externalclock */
	                  AT91C_US_CHRL_8_BITS   |  /* 8-bit Data  */
	                  AT91C_US_PAR_ODD      |  /* Parity  Odd */
	                  AT91C_US_NBSTOP_1_BIT  | /* 1 Stop Bit  */
	                  AT91C_US_SYNC;    	 /*synchonous mode*/


	  	//* Reset receiver and transmitter
	      pUSART->US_CR = AT91C_US_RSTRX | AT91C_US_RSTTX ;
  10110c:	e59f304c 	ldr	r3, [pc, #76]	; 101160 <.text+0x1160>
  101110:	e5932000 	ldr	r2, [r3]
  101114:	e3a0300c 	mov	r3, #12	; 0xc
  101118:	e5823000 	str	r3, [r2]
	  
//
	      vFdvUartSendPS2Byte(0xF4);
  10111c:	e3a000f4 	mov	r0, #244	; 0xf4
  101120:	eb00000f 	bl	101164 <vFdvUartSendPS2Byte>
	      
  	      for (uiCount=0;uiCount<500;uiCount++)
  101124:	e3a03000 	mov	r3, #0	; 0x0
  101128:	e50b3010 	str	r3, [fp, #-16]
  10112c:	ea000005 	b	101148 <vFdvUart0_init+0x9c>
  	      	uiDummy++;
  101130:	e51b3014 	ldr	r3, [fp, #-20]
  101134:	e2833001 	add	r3, r3, #1	; 0x1
  101138:	e50b3014 	str	r3, [fp, #-20]
  10113c:	e51b3010 	ldr	r3, [fp, #-16]
  101140:	e2833001 	add	r3, r3, #1	; 0x1
  101144:	e50b3010 	str	r3, [fp, #-16]
  101148:	e51b2010 	ldr	r2, [fp, #-16]
  10114c:	e3a03e1f 	mov	r3, #496	; 0x1f0
  101150:	e2833003 	add	r3, r3, #3	; 0x3
  101154:	e1520003 	cmp	r2, r3
  101158:	9afffff4 	bls	101130 <vFdvUart0_init+0x84>
  	      

	      while( 1)
	    	  ;
  10115c:	eafffffe 	b	10115c <vFdvUart0_init+0xb0>
  101160:	00200178 	eoreq	r0, r0, r8, ror r1

00101164 <vFdvUartSendPS2Byte>:
}


void vFdvUartSendPS2Byte( unsigned char ucData )
{
  101164:	e1a0c00d 	mov	ip, sp
  101168:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10116c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101170:	e24dd010 	sub	sp, sp, #16	; 0x10
  101174:	e1a03000 	mov	r3, r0
  101178:	e54b301c 	strb	r3, [fp, #-28]
	volatile unsigned int uiCount,uiDummy;
	unsigned char ucParityCount = 0;
  10117c:	e3a03000 	mov	r3, #0	; 0x0
  101180:	e54b300d 	strb	r3, [fp, #-13]
	
	 pUSART->US_CR =  AT91C_US_RXDIS ;          /* Receiver Disable    */
  101184:	e59f320c 	ldr	r3, [pc, #524]	; 101398 <.text+0x1398>
  101188:	e5932000 	ldr	r2, [r3]
  10118c:	e3a03020 	mov	r3, #32	; 0x20
  101190:	e5823000 	str	r3, [r2]
      //set clock line low: configure pio tx has pio
      AT91F_PIO_CfgOutput(AT91C_BASE_PIOA,AT91C_PA2_SCK0);
  101194:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101198:	e1a009c0 	mov	r0, r0, asr #19
  10119c:	e3a01004 	mov	r1, #4	; 0x4
  1011a0:	eb00007d 	bl	10139c <AT91F_PIO_CfgOutput>
      AT91C_BASE_PIOA->PIO_MDER = AT91C_PA2_SCK0;
  1011a4:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  1011a8:	e1a039c3 	mov	r3, r3, asr #19
  1011ac:	e3a02004 	mov	r2, #4	; 0x4
  1011b0:	e5832050 	str	r2, [r3, #80]
      AT91F_PIO_ClearOutput(AT91C_BASE_PIOA,AT91C_PA2_SCK0);
  1011b4:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  1011b8:	e1a009c0 	mov	r0, r0, asr #19
  1011bc:	e3a01004 	mov	r1, #4	; 0x4
  1011c0:	eb000083 	bl	1013d4 <AT91F_PIO_ClearOutput>
      //wait 
      for (uiCount=0;uiCount<500;uiCount++)
  1011c4:	e3a03000 	mov	r3, #0	; 0x0
  1011c8:	e50b3014 	str	r3, [fp, #-20]
  1011cc:	ea000005 	b	1011e8 <vFdvUartSendPS2Byte+0x84>
      	uiDummy++;
  1011d0:	e51b3018 	ldr	r3, [fp, #-24]
  1011d4:	e2833001 	add	r3, r3, #1	; 0x1
  1011d8:	e50b3018 	str	r3, [fp, #-24]
  1011dc:	e51b3014 	ldr	r3, [fp, #-20]
  1011e0:	e2833001 	add	r3, r3, #1	; 0x1
  1011e4:	e50b3014 	str	r3, [fp, #-20]
  1011e8:	e51b2014 	ldr	r2, [fp, #-20]
  1011ec:	e3a03e1f 	mov	r3, #496	; 0x1f0
  1011f0:	e2833003 	add	r3, r3, #3	; 0x3
  1011f4:	e1520003 	cmp	r2, r3
  1011f8:	9afffff4 	bls	1011d0 <vFdvUartSendPS2Byte+0x6c>
      AT91F_PIO_CfgOutput(AT91C_BASE_PIOA,AT91C_PIO_PA6);
  1011fc:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101200:	e1a009c0 	mov	r0, r0, asr #19
  101204:	e3a01040 	mov	r1, #64	; 0x40
  101208:	eb000063 	bl	10139c <AT91F_PIO_CfgOutput>
      AT91C_BASE_PIOA->PIO_MDER = AT91C_PIO_PA6;
  10120c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  101210:	e1a039c3 	mov	r3, r3, asr #19
  101214:	e3a02040 	mov	r2, #64	; 0x40
  101218:	e5832050 	str	r2, [r3, #80]
      AT91F_PIO_ClearOutput(AT91C_BASE_PIOA,AT91C_PIO_PA6);
  10121c:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101220:	e1a009c0 	mov	r0, r0, asr #19
  101224:	e3a01040 	mov	r1, #64	; 0x40
  101228:	eb000069 	bl	1013d4 <AT91F_PIO_ClearOutput>
      AT91F_PIO_SetOutput(AT91C_BASE_PIOA,AT91C_PA2_SCK0);
  10122c:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101230:	e1a009c0 	mov	r0, r0, asr #19
  101234:	e3a01004 	mov	r1, #4	; 0x4
  101238:	eb000070 	bl	101400 <AT91F_PIO_SetOutput>
      AT91F_PIO_CfgInput(AT91C_BASE_PIOA,AT91C_PA2_SCK0);
  10123c:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101240:	e1a009c0 	mov	r0, r0, asr #19
  101244:	e3a01004 	mov	r1, #4	; 0x4
  101248:	eb000077 	bl	10142c <AT91F_PIO_CfgInput>
      
      for (uiCount=0;uiCount<8;uiCount++)
  10124c:	e3a03000 	mov	r3, #0	; 0x0
  101250:	e50b3014 	str	r3, [fp, #-20]
  101254:	ea000022 	b	1012e4 <vFdvUartSendPS2Byte+0x180>
      {
    	  //wait clock line low
    	  while( (AT91C_BASE_PIOA->PIO_PDSR)&AT91C_PA2_SCK0)
  101258:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  10125c:	e1a039c3 	mov	r3, r3, asr #19
  101260:	e593303c 	ldr	r3, [r3, #60]
  101264:	e2033004 	and	r3, r3, #4	; 0x4
  101268:	e3530000 	cmp	r3, #0	; 0x0
  10126c:	1afffff9 	bne	101258 <vFdvUartSendPS2Byte+0xf4>
    		  ;
    	  //set data line level
    	  if( ucData & 0x1 )
  101270:	e55b301c 	ldrb	r3, [fp, #-28]
  101274:	e2033001 	and	r3, r3, #1	; 0x1
  101278:	e20330ff 	and	r3, r3, #255	; 0xff
  10127c:	e3530000 	cmp	r3, #0	; 0x0
  101280:	0a000007 	beq	1012a4 <vFdvUartSendPS2Byte+0x140>
    	  {
    		ucParityCount++;
  101284:	e55b300d 	ldrb	r3, [fp, #-13]
  101288:	e2833001 	add	r3, r3, #1	; 0x1
  10128c:	e54b300d 	strb	r3, [fp, #-13]
    		AT91C_BASE_PIOA->PIO_SODR = AT91C_PA6_TXD0;
  101290:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  101294:	e1a039c3 	mov	r3, r3, asr #19
  101298:	e3a02040 	mov	r2, #64	; 0x40
  10129c:	e5832030 	str	r2, [r3, #48]
  1012a0:	ea000003 	b	1012b4 <vFdvUartSendPS2Byte+0x150>
    	  }
    	  else
    		AT91C_BASE_PIOA->PIO_CODR = AT91C_PA6_TXD0;
  1012a4:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  1012a8:	e1a039c3 	mov	r3, r3, asr #19
  1012ac:	e3a02040 	mov	r2, #64	; 0x40
  1012b0:	e5832034 	str	r2, [r3, #52]
    	  ucData>>=1;
  1012b4:	e55b301c 	ldrb	r3, [fp, #-28]
  1012b8:	e1a030a3 	mov	r3, r3, lsr #1
  1012bc:	e54b301c 	strb	r3, [fp, #-28]
    	//wait clock line high
    	  while( !((AT91C_BASE_PIOA->PIO_PDSR)&AT91C_PA2_SCK0))
  1012c0:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  1012c4:	e1a039c3 	mov	r3, r3, asr #19
  1012c8:	e593303c 	ldr	r3, [r3, #60]
  1012cc:	e2033004 	and	r3, r3, #4	; 0x4
  1012d0:	e3530000 	cmp	r3, #0	; 0x0
  1012d4:	0afffff9 	beq	1012c0 <vFdvUartSendPS2Byte+0x15c>
  1012d8:	e51b3014 	ldr	r3, [fp, #-20]
  1012dc:	e2833001 	add	r3, r3, #1	; 0x1
  1012e0:	e50b3014 	str	r3, [fp, #-20]
  1012e4:	e51b3014 	ldr	r3, [fp, #-20]
  1012e8:	e3530007 	cmp	r3, #7	; 0x7
  1012ec:	9affffd9 	bls	101258 <vFdvUartSendPS2Byte+0xf4>
    		  ;
      }
      //wait clock line low
      while( (AT91C_BASE_PIOA->PIO_PDSR)&AT91C_PA2_SCK0)
  1012f0:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  1012f4:	e1a039c3 	mov	r3, r3, asr #19
  1012f8:	e593303c 	ldr	r3, [r3, #60]
  1012fc:	e2033004 	and	r3, r3, #4	; 0x4
  101300:	e3530000 	cmp	r3, #0	; 0x0
  101304:	1afffff9 	bne	1012f0 <vFdvUartSendPS2Byte+0x18c>
		  ;
      //parity: 
      if( ucParityCount & 0x1 )
  101308:	e55b300d 	ldrb	r3, [fp, #-13]
  10130c:	e2033001 	and	r3, r3, #1	; 0x1
  101310:	e20330ff 	and	r3, r3, #255	; 0xff
  101314:	e3530000 	cmp	r3, #0	; 0x0
  101318:	0a000004 	beq	101330 <vFdvUartSendPS2Byte+0x1cc>
    	  AT91C_BASE_PIOA->PIO_CODR = AT91C_PA6_TXD0;
  10131c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  101320:	e1a039c3 	mov	r3, r3, asr #19
  101324:	e3a02040 	mov	r2, #64	; 0x40
  101328:	e5832034 	str	r2, [r3, #52]
  10132c:	ea000003 	b	101340 <vFdvUartSendPS2Byte+0x1dc>
	  else
    	  AT91C_BASE_PIOA->PIO_SODR = AT91C_PA6_TXD0;
  101330:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  101334:	e1a039c3 	mov	r3, r3, asr #19
  101338:	e3a02040 	mov	r2, #64	; 0x40
  10133c:	e5832030 	str	r2, [r3, #48]
	  //wait clock line high
	  while( !((AT91C_BASE_PIOA->PIO_PDSR)&AT91C_PA2_SCK0))
  101340:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  101344:	e1a039c3 	mov	r3, r3, asr #19
  101348:	e593303c 	ldr	r3, [r3, #60]
  10134c:	e2033004 	and	r3, r3, #4	; 0x4
  101350:	e3530000 	cmp	r3, #0	; 0x0
  101354:	0afffff9 	beq	101340 <vFdvUartSendPS2Byte+0x1dc>
  		  ;
	  //wait clock line low
	  while( (AT91C_BASE_PIOA->PIO_PDSR)&AT91C_PA2_SCK0)
  101358:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
  10135c:	e1a039c3 	mov	r3, r3, asr #19
  101360:	e593303c 	ldr	r3, [r3, #60]
  101364:	e2033004 	and	r3, r3, #4	; 0x4
  101368:	e3530000 	cmp	r3, #0	; 0x0
  10136c:	1afffff9 	bne	101358 <vFdvUartSendPS2Byte+0x1f4>
		  ;
      //stop bit:level 1 <=> cfg input
	  AT91F_PIO_CfgInput(AT91C_BASE_PIOA,AT91C_PA6_TXD0);
  101370:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101374:	e1a009c0 	mov	r0, r0, asr #19
  101378:	e3a01040 	mov	r1, #64	; 0x40
  10137c:	eb00002a 	bl	10142c <AT91F_PIO_CfgInput>
	  /* Receiver Enable     */
      pUSART->US_CR = AT91C_US_RXEN ;         
  101380:	e59f3010 	ldr	r3, [pc, #16]	; 101398 <.text+0x1398>
  101384:	e5932000 	ldr	r2, [r3]
  101388:	e3a03010 	mov	r3, #16	; 0x10
  10138c:	e5823000 	str	r3, [r2]
}
  101390:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101394:	e89da800 	ldmia	sp, {fp, sp, pc}
  101398:	00200178 	eoreq	r0, r0, r8, ror r1

0010139c <AT91F_PIO_CfgOutput>:
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_CfgOutput(
	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
	unsigned int pioEnable)      // \arg PIO to be enabled
{
  10139c:	e1a0c00d 	mov	ip, sp
  1013a0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1013a4:	e24cb004 	sub	fp, ip, #4	; 0x4
  1013a8:	e24dd008 	sub	sp, sp, #8	; 0x8
  1013ac:	e50b0010 	str	r0, [fp, #-16]
  1013b0:	e50b1014 	str	r1, [fp, #-20]
	pPio->PIO_PER = pioEnable; // Set in PIO mode
  1013b4:	e51b2010 	ldr	r2, [fp, #-16]
  1013b8:	e51b3014 	ldr	r3, [fp, #-20]
  1013bc:	e5823000 	str	r3, [r2]
	pPio->PIO_OER = pioEnable; // Configure in Output
  1013c0:	e51b2010 	ldr	r2, [fp, #-16]
  1013c4:	e51b3014 	ldr	r3, [fp, #-20]
  1013c8:	e5823010 	str	r3, [r2, #16]
}
  1013cc:	e24bd00c 	sub	sp, fp, #12	; 0xc
  1013d0:	e89da800 	ldmia	sp, {fp, sp, pc}

001013d4 <AT91F_PIO_ClearOutput>:

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_CfgInput
//* \brief Enable PIO in input mode
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_CfgInput(
	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
	unsigned int inputEnable)      // \arg PIO to be enabled
{
	// Disable output
	pPio->PIO_ODR  = inputEnable;
	pPio->PIO_PER  = inputEnable;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_CfgOpendrain
//* \brief Configure PIO in open drain
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_CfgOpendrain(
	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
	unsigned int multiDrvEnable) // \arg pio to be configured in open drain
{
	// Configure the multi-drive option
	pPio->PIO_MDDR = ~multiDrvEnable;
	pPio->PIO_MDER = multiDrvEnable;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_CfgPullup
//* \brief Enable pullup on PIO
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_CfgPullup(
	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
	unsigned int pullupEnable)   // \arg enable pullup on PIO
{
		// Connect or not Pullup
	pPio->PIO_PPUDR = ~pullupEnable;
	pPio->PIO_PPUER = pullupEnable;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_CfgDirectDrive
//* \brief Enable direct drive on PIO
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_CfgDirectDrive(
	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
	unsigned int directDrive)    // \arg PIO to be configured with direct drive

{
	// Configure the Direct Drive
	pPio->PIO_OWDR  = ~directDrive;
	pPio->PIO_OWER  = directDrive;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_CfgInputFilter
//* \brief Enable input filter on input PIO
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_CfgInputFilter(
	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
	unsigned int inputFilter)    // \arg PIO to be configured with input filter

{
	// Configure the Direct Drive
	pPio->PIO_IFDR  = ~inputFilter;
	pPio->PIO_IFER  = inputFilter;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_GetInput
//* \brief Return PIO input value
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PIO_GetInput( // \return PIO input
	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
{
	return pPio->PIO_PDSR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_IsInputSet
//* \brief Test if PIO is input flag is active
//*----------------------------------------------------------------------------
static __inline int AT91F_PIO_IsInputSet(
	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
	unsigned int flag) // \arg  flag to be tested
{
	return (AT91F_PIO_GetInput(pPio) & flag);
}


//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_SetOutput
//* \brief Set to 1 output PIO
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_SetOutput(
	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
	unsigned int flag) // \arg  output to be set
{
	pPio->PIO_SODR = flag;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PIO_ClearOutput
//* \brief Set to 0 output PIO
//*----------------------------------------------------------------------------
static __inline void AT91F_PIO_ClearOutput(
	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
	unsigned int flag) // \arg  output to be cleared
{
  1013d4:	e1a0c00d 	mov	ip, sp
  1013d8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1013dc:	e24cb004 	sub	fp, ip, #4	; 0x4
  1013e0:	e24dd008 	sub	sp, sp, #8	; 0x8
  1013e4:	e50b0010 	str	r0, [fp, #-16]
  1013e8:	e50b1014 	str	r1, [fp, #-20]
	pPio->PIO_CODR = flag;
  1013ec:	e51b2010 	ldr	r2, [fp, #-16]
  1013f0:	e51b3014 	ldr	r3, [fp, #-20]
  1013f4:	e5823034 	str	r3, [r2, #52]
}
  1013f8:	e24bd00c 	sub	sp, fp, #12	; 0xc
  1013fc:	e89da800 	ldmia	sp, {fp, sp, pc}

00101400 <AT91F_PIO_SetOutput>:
  101400:	e1a0c00d 	mov	ip, sp
  101404:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101408:	e24cb004 	sub	fp, ip, #4	; 0x4
  10140c:	e24dd008 	sub	sp, sp, #8	; 0x8
  101410:	e50b0010 	str	r0, [fp, #-16]
  101414:	e50b1014 	str	r1, [fp, #-20]
  101418:	e51b2010 	ldr	r2, [fp, #-16]
  10141c:	e51b3014 	ldr	r3, [fp, #-20]
  101420:	e5823030 	str	r3, [r2, #48]
  101424:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101428:	e89da800 	ldmia	sp, {fp, sp, pc}

0010142c <AT91F_PIO_CfgInput>:
  10142c:	e1a0c00d 	mov	ip, sp
  101430:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101434:	e24cb004 	sub	fp, ip, #4	; 0x4
  101438:	e24dd008 	sub	sp, sp, #8	; 0x8
  10143c:	e50b0010 	str	r0, [fp, #-16]
  101440:	e50b1014 	str	r1, [fp, #-20]
  101444:	e51b2010 	ldr	r2, [fp, #-16]
  101448:	e51b3014 	ldr	r3, [fp, #-20]
  10144c:	e5823014 	str	r3, [r2, #20]
  101450:	e51b2010 	ldr	r2, [fp, #-16]
  101454:	e51b3014 	ldr	r3, [fp, #-20]
  101458:	e5823000 	str	r3, [r2]
  10145c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101460:	e89da800 	ldmia	sp, {fp, sp, pc}

00101464 <system_int>:
//void  __attribute__ ((interrupt("IRQ"))) system_int (void) __atr {        /* System Interrupt Handler */
//void  INTFUNC ATTR system_int (void) {        /* System Interrupt Handler */
//void  NACKEDFUNC system_int (void) {        /* System Interrupt Handler */
void system_int (void)
{
  101464:	e1a0c00d 	mov	ip, sp
  101468:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10146c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101470:	e24dd004 	sub	sp, sp, #4	; 0x4

	volatile unsigned int uiPVR;

  if (AT91F_PITGetStatus(AT91C_BASE_PITC)&AT91C_PITC_PITS)
  101474:	e3a004a6 	mov	r0, #-1509949440	; 0xa6000000
  101478:	e1a00ac0 	mov	r0, r0, asr #21
  10147c:	eb000018 	bl	1014e4 <AT91F_PITGetStatus>
  101480:	e1a03000 	mov	r3, r0
  101484:	e2033001 	and	r3, r3, #1	; 0x1
  101488:	e20330ff 	and	r3, r3, #255	; 0xff
  10148c:	e3530000 	cmp	r3, #0	; 0x0
  101490:	0a00000e 	beq	1014d0 <system_int+0x6c>
	{  /* Check PIT Interrupt */
		vFlibTimer_Tick();
  101494:	ebfffc72 	bl	100664 <vFlibTimer_Tick>
		timeval++;                              /* Increment Time Tick */
  101498:	e59f3040 	ldr	r3, [pc, #64]	; 1014e0 <.text+0x14e0>
  10149c:	e5933000 	ldr	r3, [r3]
  1014a0:	e2832001 	add	r2, r3, #1	; 0x1
  1014a4:	e59f3034 	ldr	r3, [pc, #52]	; 1014e0 <.text+0x14e0>
  1014a8:	e5832000 	str	r2, [r3]
		uiPVR=AT91F_PITGetPIVR(AT91C_BASE_PITC);
  1014ac:	e3a004a6 	mov	r0, #-1509949440	; 0xa6000000
  1014b0:	e1a00ac0 	mov	r0, r0, asr #21
  1014b4:	eb000013 	bl	101508 <AT91F_PITGetPIVR>
  1014b8:	e1a03000 	mov	r3, r0
  1014bc:	e50b3010 	str	r3, [fp, #-16]
#ifdef kUSE_FAT
		if(!(timeval%10))
			disk_timerproc();
#endif
		AT91F_AIC_AcknowledgeIt(AT91C_BASE_AIC);     /* Ack & End of Interrupt */
  1014c0:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1014c4:	e1a009c0 	mov	r0, r0, asr #19
  1014c8:	eb000017 	bl	10152c <AT91F_AIC_AcknowledgeIt>
  1014cc:	ea000002 	b	1014dc <system_int+0x78>
	} 
	else 
		AT91F_AIC_AcknowledgeIt(AT91C_BASE_AIC);     /* Ack & End of Interrupt */
  1014d0:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1014d4:	e1a009c0 	mov	r0, r0, asr #19
  1014d8:	eb000013 	bl	10152c <AT91F_AIC_AcknowledgeIt>
  
}
  1014dc:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  1014e0:	00200bf4 	streqd	r0, [r0], -r4

001014e4 <AT91F_PITGetStatus>:
//* \brief Read PIT status register
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetStatus(
        AT91PS_PITC pPITC)
{
  1014e4:	e1a0c00d 	mov	ip, sp
  1014e8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1014ec:	e24cb004 	sub	fp, ip, #4	; 0x4
  1014f0:	e24dd004 	sub	sp, sp, #4	; 0x4
  1014f4:	e50b0010 	str	r0, [fp, #-16]
	return(pPITC->PITC_PISR);
  1014f8:	e51b3010 	ldr	r3, [fp, #-16]
  1014fc:	e5933004 	ldr	r3, [r3, #4]
}
  101500:	e1a00003 	mov	r0, r3
  101504:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00101508 <AT91F_PITGetPIVR>:

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITGetPIIR
//* \brief Read PIT CPIV and PICNT without ressetting the counters
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetPIIR(
        AT91PS_PITC pPITC)
{
	return(pPITC->PITC_PIIR);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITGetPIVR
//* \brief Read System timer CPIV and PICNT without ressetting the counters
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetPIVR(
        AT91PS_PITC pPITC)
{
  101508:	e1a0c00d 	mov	ip, sp
  10150c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101510:	e24cb004 	sub	fp, ip, #4	; 0x4
  101514:	e24dd004 	sub	sp, sp, #4	; 0x4
  101518:	e50b0010 	str	r0, [fp, #-16]
	return(pPITC->PITC_PIVR);
  10151c:	e51b3010 	ldr	r3, [fp, #-16]
  101520:	e5933008 	ldr	r3, [r3, #8]
}
  101524:	e1a00003 	mov	r0, r3
  101528:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

0010152c <AT91F_AIC_AcknowledgeIt>:
  10152c:	e1a0c00d 	mov	ip, sp
  101530:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101534:	e24cb004 	sub	fp, ip, #4	; 0x4
  101538:	e24dd004 	sub	sp, sp, #4	; 0x4
  10153c:	e50b0010 	str	r0, [fp, #-16]
  101540:	e51b3010 	ldr	r3, [fp, #-16]
  101544:	e5932130 	ldr	r2, [r3, #304]
  101548:	e51b3010 	ldr	r3, [fp, #-16]
  10154c:	e5832130 	str	r2, [r3, #304]
  101550:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00101554 <PITIsr_Wrapper>:

void NACKEDFUNC PITIsr_Wrapper( void )
{
	/* Save the context of the interrupted task. */
	ISR_ENTRY();
  101554:	e24ee004 	sub	lr, lr, #4	; 0x4
  101558:	e92d5fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
  10155c:	e14f1000 	mrs	r1, SPSR
  101560:	e92d0002 	stmdb	sp!, {r1}

	/* Call the handler to do the work.  This must be a separate
	function to ensure the stack frame is set up correctly. */
	system_int();
  101564:	ebffffbe 	bl	101464 <system_int>

	/* Restore the context of whichever task will execute next. */
	ISR_EXIT();
  101568:	e8bd0002 	ldmia	sp!, {r1}
  10156c:	e161f001 	msr	SPSR_c, r1
  101570:	e8fd9fff 	ldmia	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^

00101574 <vFdvTimer_init>:
}


void vFdvTimer_init(void) {                    /* Setup PIT with Interrupt */
  101574:	e1a0c00d 	mov	ip, sp
  101578:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10157c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101580:	e24dd004 	sub	sp, sp, #4	; 0x4
  //volatile AT91S_AIC * pAIC = AT91C_BASE_AIC;

  //*AT91C_PIOA_CODR = LED3; 
	timeval=0;
  101584:	e59f3058 	ldr	r3, [pc, #88]	; 1015e4 <.text+0x15e4>
  101588:	e3a02000 	mov	r2, #0	; 0x0
  10158c:	e5832000 	str	r2, [r3]
  AT91F_PITInit(AT91C_BASE_PITC,1000,MCKMHz);
  101590:	e3a004a6 	mov	r0, #-1509949440	; 0xa6000000
  101594:	e1a00ac0 	mov	r0, r0, asr #21
  101598:	e3a01ffa 	mov	r1, #1000	; 0x3e8
  10159c:	e3a02030 	mov	r2, #48	; 0x30
  1015a0:	eb000011 	bl	1015ec <AT91F_PITInit>
  AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, AT91C_ID_SYS, 6 ,AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE, (void (*) ())PITIsr_Wrapper);
  1015a4:	e59f303c 	ldr	r3, [pc, #60]	; 1015e8 <.text+0x15e8>
  1015a8:	e58d3000 	str	r3, [sp]
  1015ac:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1015b0:	e1a009c0 	mov	r0, r0, asr #19
  1015b4:	e3a01001 	mov	r1, #1	; 0x1
  1015b8:	e3a02006 	mov	r2, #6	; 0x6
  1015bc:	e3a03020 	mov	r3, #32	; 0x20
  1015c0:	eb000026 	bl	101660 <AT91F_AIC_ConfigureIt>
  AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_SYS);
  1015c4:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1015c8:	e1a009c0 	mov	r0, r0, asr #19
  1015cc:	e3a01001 	mov	r1, #1	; 0x1
  1015d0:	eb00004f 	bl	101714 <AT91F_AIC_EnableIt>
  AT91F_PITEnableInt(AT91C_BASE_PITC);
  1015d4:	e3a004a6 	mov	r0, #-1509949440	; 0xa6000000
  1015d8:	e1a00ac0 	mov	r0, r0, asr #21
  1015dc:	eb00005a 	bl	10174c <AT91F_PITEnableInt>


#if 0
  *AT91C_PITC_PIMR = AT91C_PITC_PITIEN |    /* PIT Interrupt Enable */ 
                     AT91C_PITC_PITEN  |    /* PIT Enable */
                     PIV;                   /* Periodic Interval Value */ 

  /* Setup System Interrupt Mode and Vector with Priority 7 and Enable it */
  // mt pAIC->AIC_SMR[AT91C_ID_SYS] = AT91C_AIC_SRCTYPE_INT_EDGE_TRIGGERED | 7;
  pAIC->AIC_SMR[AT91C_ID_SYS] = AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE | 7;
  
  pAIC->AIC_SVR[AT91C_ID_SYS] = (unsigned long) system_int;
  pAIC->AIC_IECR = (1 << AT91C_ID_SYS);
#endif
  //*AT91C_PIOA_CODR = LED2; 
  
}
  1015e0:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  1015e4:	00200bf4 	streqd	r0, [r0], -r4
  1015e8:	00101554 	andeqs	r1, r0, r4, asr r5

001015ec <AT91F_PITInit>:
static __inline void AT91F_PITInit(
        AT91PS_PITC pPITC,
        unsigned int period,
        unsigned int pit_frequency)
{
  1015ec:	e1a0c00d 	mov	ip, sp
  1015f0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1015f4:	e24cb004 	sub	fp, ip, #4	; 0x4
  1015f8:	e24dd010 	sub	sp, sp, #16	; 0x10
  1015fc:	e50b0010 	str	r0, [fp, #-16]
  101600:	e50b1014 	str	r1, [fp, #-20]
  101604:	e50b2018 	str	r2, [fp, #-24]
	pPITC->PITC_PIMR = period? (period * pit_frequency + 8) >> 4 : 0; // +8 to avoid %10 and /10
  101608:	e51b3014 	ldr	r3, [fp, #-20]
  10160c:	e3530000 	cmp	r3, #0	; 0x0
  101610:	0a000006 	beq	101630 <AT91F_PITInit+0x44>
  101614:	e51b2014 	ldr	r2, [fp, #-20]
  101618:	e51b3018 	ldr	r3, [fp, #-24]
  10161c:	e0030392 	mul	r3, r2, r3
  101620:	e2833008 	add	r3, r3, #8	; 0x8
  101624:	e1a03223 	mov	r3, r3, lsr #4
  101628:	e50b301c 	str	r3, [fp, #-28]
  10162c:	ea000001 	b	101638 <AT91F_PITInit+0x4c>
  101630:	e3a02000 	mov	r2, #0	; 0x0
  101634:	e50b201c 	str	r2, [fp, #-28]
  101638:	e51b3010 	ldr	r3, [fp, #-16]
  10163c:	e51b201c 	ldr	r2, [fp, #-28]
  101640:	e5832000 	str	r2, [r3]
	pPITC->PITC_PIMR |= AT91C_PITC_PITEN;	 
  101644:	e51b3010 	ldr	r3, [fp, #-16]
  101648:	e5933000 	ldr	r3, [r3]
  10164c:	e3832401 	orr	r2, r3, #16777216	; 0x1000000
  101650:	e51b3010 	ldr	r3, [fp, #-16]
  101654:	e5832000 	str	r2, [r3]
}
  101658:	e24bd00c 	sub	sp, fp, #12	; 0xc
  10165c:	e89da800 	ldmia	sp, {fp, sp, pc}

00101660 <AT91F_AIC_ConfigureIt>:
  101660:	e1a0c00d 	mov	ip, sp
  101664:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101668:	e24cb004 	sub	fp, ip, #4	; 0x4
  10166c:	e24dd018 	sub	sp, sp, #24	; 0x18
  101670:	e50b0018 	str	r0, [fp, #-24]
  101674:	e50b101c 	str	r1, [fp, #-28]
  101678:	e50b2020 	str	r2, [fp, #-32]
  10167c:	e50b3024 	str	r3, [fp, #-36]
  101680:	e51b301c 	ldr	r3, [fp, #-28]
  101684:	e51b2018 	ldr	r2, [fp, #-24]
  101688:	e3a01080 	mov	r1, #128	; 0x80
  10168c:	e1a03103 	mov	r3, r3, lsl #2
  101690:	e0833002 	add	r3, r3, r2
  101694:	e0833001 	add	r3, r3, r1
  101698:	e5933000 	ldr	r3, [r3]
  10169c:	e50b3014 	str	r3, [fp, #-20]
  1016a0:	e51b201c 	ldr	r2, [fp, #-28]
  1016a4:	e3a03001 	mov	r3, #1	; 0x1
  1016a8:	e1a03213 	mov	r3, r3, lsl r2
  1016ac:	e50b3010 	str	r3, [fp, #-16]
  1016b0:	e51b2018 	ldr	r2, [fp, #-24]
  1016b4:	e51b3010 	ldr	r3, [fp, #-16]
  1016b8:	e5823124 	str	r3, [r2, #292]
  1016bc:	e51b001c 	ldr	r0, [fp, #-28]
  1016c0:	e59b3004 	ldr	r3, [fp, #4]
  1016c4:	e1a0c003 	mov	ip, r3
  1016c8:	e51b2018 	ldr	r2, [fp, #-24]
  1016cc:	e3a01080 	mov	r1, #128	; 0x80
  1016d0:	e1a03100 	mov	r3, r0, lsl #2
  1016d4:	e0833002 	add	r3, r3, r2
  1016d8:	e0833001 	add	r3, r3, r1
  1016dc:	e583c000 	str	ip, [r3]
  1016e0:	e51b101c 	ldr	r1, [fp, #-28]
  1016e4:	e51b2024 	ldr	r2, [fp, #-36]
  1016e8:	e51b3020 	ldr	r3, [fp, #-32]
  1016ec:	e1822003 	orr	r2, r2, r3
  1016f0:	e51b3018 	ldr	r3, [fp, #-24]
  1016f4:	e7832101 	str	r2, [r3, r1, lsl #2]
  1016f8:	e51b2018 	ldr	r2, [fp, #-24]
  1016fc:	e51b3010 	ldr	r3, [fp, #-16]
  101700:	e5823128 	str	r3, [r2, #296]
  101704:	e51b3014 	ldr	r3, [fp, #-20]
  101708:	e1a00003 	mov	r0, r3
  10170c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101710:	e89da800 	ldmia	sp, {fp, sp, pc}

00101714 <AT91F_AIC_EnableIt>:
  101714:	e1a0c00d 	mov	ip, sp
  101718:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10171c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101720:	e24dd008 	sub	sp, sp, #8	; 0x8
  101724:	e50b0010 	str	r0, [fp, #-16]
  101728:	e50b1014 	str	r1, [fp, #-20]
  10172c:	e51b2014 	ldr	r2, [fp, #-20]
  101730:	e3a03001 	mov	r3, #1	; 0x1
  101734:	e1a03213 	mov	r3, r3, lsl r2
  101738:	e1a02003 	mov	r2, r3
  10173c:	e51b3010 	ldr	r3, [fp, #-16]
  101740:	e5832120 	str	r2, [r3, #288]
  101744:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101748:	e89da800 	ldmia	sp, {fp, sp, pc}

0010174c <AT91F_PITEnableInt>:

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITSetPIV
//* \brief Set the PIT Periodic Interval Value 
//*----------------------------------------------------------------------------
static __inline void AT91F_PITSetPIV(
        AT91PS_PITC pPITC,
        unsigned int piv)
{
	pPITC->PITC_PIMR = piv | (pPITC->PITC_PIMR & (AT91C_PITC_PITEN | AT91C_PITC_PITIEN));
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITEnableInt
//* \brief Enable PIT periodic interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_PITEnableInt(
        AT91PS_PITC pPITC)
{
  10174c:	e1a0c00d 	mov	ip, sp
  101750:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101754:	e24cb004 	sub	fp, ip, #4	; 0x4
  101758:	e24dd004 	sub	sp, sp, #4	; 0x4
  10175c:	e50b0010 	str	r0, [fp, #-16]
	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;	 
  101760:	e51b3010 	ldr	r3, [fp, #-16]
  101764:	e5933000 	ldr	r3, [r3]
  101768:	e3832402 	orr	r2, r3, #33554432	; 0x2000000
  10176c:	e51b3010 	ldr	r3, [fp, #-16]
  101770:	e5832000 	str	r2, [r3]
}
  101774:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00101778 <dvTimerwait>:

void dvTimerwait(unsigned long time)
{
  101778:	e1a0c00d 	mov	ip, sp
  10177c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101780:	e24cb004 	sub	fp, ip, #4	; 0x4
  101784:	e24dd008 	sub	sp, sp, #8	; 0x8
  101788:	e50b0014 	str	r0, [fp, #-20]
	unsigned long tick;
	
	tick = timeval;
  10178c:	e59f3028 	ldr	r3, [pc, #40]	; 1017bc <.text+0x17bc>
  101790:	e5933000 	ldr	r3, [r3]
  101794:	e50b3010 	str	r3, [fp, #-16]
	
	/* Wait for specified Time */
	while ((unsigned long)(timeval - tick) < time);
  101798:	e59f301c 	ldr	r3, [pc, #28]	; 1017bc <.text+0x17bc>
  10179c:	e5932000 	ldr	r2, [r3]
  1017a0:	e51b3010 	ldr	r3, [fp, #-16]
  1017a4:	e0632002 	rsb	r2, r3, r2
  1017a8:	e51b3014 	ldr	r3, [fp, #-20]
  1017ac:	e1520003 	cmp	r2, r3
  1017b0:	3afffff8 	bcc	101798 <dvTimerwait+0x20>
}
  1017b4:	e24bd00c 	sub	sp, fp, #12	; 0xc
  1017b8:	e89da800 	ldmia	sp, {fp, sp, pc}
  1017bc:	00200bf4 	streqd	r0, [r0], -r4

001017c0 <AT91_spiSetSpeed>:
 BYTE Timer;			/* 100Hz decrement timer */


void AT91_spiSetSpeed(BYTE speed)
{
  1017c0:	e1a0c00d 	mov	ip, sp
  1017c4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1017c8:	e24cb004 	sub	fp, ip, #4	; 0x4
  1017cc:	e24dd008 	sub	sp, sp, #8	; 0x8
  1017d0:	e1a03000 	mov	r3, r0
  1017d4:	e54b3014 	strb	r3, [fp, #-20]
	DWORD reg;

	if ( speed < SPI_SCBR_MIN ) 
  1017d8:	e55b3014 	ldrb	r3, [fp, #-20]
  1017dc:	e3530001 	cmp	r3, #1	; 0x1
  1017e0:	8a000001 	bhi	1017ec <AT91_spiSetSpeed+0x2c>
		speed = SPI_SCBR_MIN;
  1017e4:	e3a03002 	mov	r3, #2	; 0x2
  1017e8:	e54b3014 	strb	r3, [fp, #-20]
	if ( speed > 1 ) 
  1017ec:	e55b3014 	ldrb	r3, [fp, #-20]
  1017f0:	e3530001 	cmp	r3, #1	; 0x1
  1017f4:	9a000004 	bls	10180c <AT91_spiSetSpeed+0x4c>
		speed &= 0xFE;
  1017f8:	e3e03001 	mvn	r3, #1	; 0x1
  1017fc:	e1a02003 	mov	r2, r3
  101800:	e55b3014 	ldrb	r3, [fp, #-20]
  101804:	e0033002 	and	r3, r3, r2
  101808:	e54b3014 	strb	r3, [fp, #-20]

	reg = pSPI->SPI_CSR[SPI_CSR_NUM];
  10180c:	e59f3038 	ldr	r3, [pc, #56]	; 10184c <.text+0x184c>
  101810:	e5933000 	ldr	r3, [r3]
  101814:	e5933030 	ldr	r3, [r3, #48]
  101818:	e50b3010 	str	r3, [fp, #-16]
	reg = ( reg & ~(AT91C_SPI_SCBR) ) | ( (DWORD)speed << 8 );
  10181c:	e51b3010 	ldr	r3, [fp, #-16]
  101820:	e3c32cff 	bic	r2, r3, #65280	; 0xff00
  101824:	e55b3014 	ldrb	r3, [fp, #-20]
  101828:	e1a03403 	mov	r3, r3, lsl #8
  10182c:	e1823003 	orr	r3, r2, r3
  101830:	e50b3010 	str	r3, [fp, #-16]
	pSPI->SPI_CSR[SPI_CSR_NUM] = reg;
  101834:	e59f3010 	ldr	r3, [pc, #16]	; 10184c <.text+0x184c>
  101838:	e5932000 	ldr	r2, [r3]
  10183c:	e51b3010 	ldr	r3, [fp, #-16]
  101840:	e5823030 	str	r3, [r2, #48]
}
  101844:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101848:	e89da800 	ldmia	sp, {fp, sp, pc}
  10184c:	00200180 	eoreq	r0, r0, r0, lsl #3

00101850 <AT91_spi>:

BYTE AT91_spi(BYTE outgoing)
{
  101850:	e1a0c00d 	mov	ip, sp
  101854:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101858:	e24cb004 	sub	fp, ip, #4	; 0x4
  10185c:	e24dd008 	sub	sp, sp, #8	; 0x8
  101860:	e1a03000 	mov	r3, r0
  101864:	e54b3014 	strb	r3, [fp, #-20]
	BYTE incoming;

	while( !( pSPI->SPI_SR & AT91C_SPI_TDRE ) ); // transfer compl. wait
  101868:	e59f3058 	ldr	r3, [pc, #88]	; 1018c8 <.text+0x18c8>
  10186c:	e5933000 	ldr	r3, [r3]
  101870:	e5933010 	ldr	r3, [r3, #16]
  101874:	e2033002 	and	r3, r3, #2	; 0x2
  101878:	e3530000 	cmp	r3, #0	; 0x0
  10187c:	0afffff9 	beq	101868 <AT91_spi+0x18>
	pSPI->SPI_TDR = (WORD)( outgoing );
  101880:	e59f3040 	ldr	r3, [pc, #64]	; 1018c8 <.text+0x18c8>
  101884:	e5932000 	ldr	r2, [r3]
  101888:	e55b3014 	ldrb	r3, [fp, #-20]
  10188c:	e582300c 	str	r3, [r2, #12]
	while( !( pSPI->SPI_SR & AT91C_SPI_RDRF ) ); // wait for char
  101890:	e59f3030 	ldr	r3, [pc, #48]	; 1018c8 <.text+0x18c8>
  101894:	e5933000 	ldr	r3, [r3]
  101898:	e5933010 	ldr	r3, [r3, #16]
  10189c:	e2033001 	and	r3, r3, #1	; 0x1
  1018a0:	e3530000 	cmp	r3, #0	; 0x0
  1018a4:	0afffff9 	beq	101890 <AT91_spi+0x40>
	incoming = (BYTE)( pSPI->SPI_RDR );
  1018a8:	e59f3018 	ldr	r3, [pc, #24]	; 1018c8 <.text+0x18c8>
  1018ac:	e5933000 	ldr	r3, [r3]
  1018b0:	e5933008 	ldr	r3, [r3, #8]
  1018b4:	e54b300d 	strb	r3, [fp, #-13]

	return incoming;
  1018b8:	e55b300d 	ldrb	r3, [fp, #-13]
}
  1018bc:	e1a00003 	mov	r0, r3
  1018c0:	e24bd00c 	sub	sp, fp, #12	; 0xc
  1018c4:	e89da800 	ldmia	sp, {fp, sp, pc}
  1018c8:	00200180 	eoreq	r0, r0, r0, lsl #3

001018cc <xmit_spi>:

/*--------------------------------*/
/* Transmit a byte to MMC via SPI */
/* (Platform dependent)           */

void xmit_spi(BYTE dat)
{
  1018cc:	e1a0c00d 	mov	ip, sp
  1018d0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1018d4:	e24cb004 	sub	fp, ip, #4	; 0x4
  1018d8:	e24dd004 	sub	sp, sp, #4	; 0x4
  1018dc:	e1a03000 	mov	r3, r0
  1018e0:	e54b3010 	strb	r3, [fp, #-16]
	AT91_spi(dat);
  1018e4:	e55b3010 	ldrb	r3, [fp, #-16]
  1018e8:	e1a00003 	mov	r0, r3
  1018ec:	ebffffd7 	bl	101850 <AT91_spi>
}
  1018f0:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

001018f4 <rcvr_spi>:

/*---------------------------------*/
/* Receive a byte from MMC via SPI */
/* (Platform dependent)            */

BYTE rcvr_spi(void)
{
  1018f4:	e1a0c00d 	mov	ip, sp
  1018f8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1018fc:	e24cb004 	sub	fp, ip, #4	; 0x4
	return AT91_spi(0xff);
  101900:	e3a000ff 	mov	r0, #255	; 0xff
  101904:	ebffffd1 	bl	101850 <AT91_spi>
  101908:	e1a03000 	mov	r3, r0
}
  10190c:	e1a00003 	mov	r0, r3
  101910:	e89da800 	ldmia	sp, {fp, sp, pc}

00101914 <rcvr_spi_m>:

/* Alternative "macro" (not at AT91 so far) to receive data fast */
void rcvr_spi_m(BYTE *dst)
{
  101914:	e1a0c00d 	mov	ip, sp
  101918:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10191c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101920:	e24dd004 	sub	sp, sp, #4	; 0x4
  101924:	e50b0010 	str	r0, [fp, #-16]
	*dst = rcvr_spi();
  101928:	ebfffff1 	bl	1018f4 <rcvr_spi>
  10192c:	e1a03000 	mov	r3, r0
  101930:	e51b2010 	ldr	r2, [fp, #-16]
  101934:	e5c23000 	strb	r3, [r2]
}
  101938:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

0010193c <wait_ready>:


/*---------------------*/
/* Wait for card ready */
BYTE wait_ready ()
{
  10193c:	e1a0c00d 	mov	ip, sp
  101940:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101944:	e24cb004 	sub	fp, ip, #4	; 0x4
  101948:	e24dd004 	sub	sp, sp, #4	; 0x4
	BYTE res;
	
	Timer = 50;			/* Wait for ready in timeout of 500ms */
  10194c:	e59f3040 	ldr	r3, [pc, #64]	; 101994 <.text+0x1994>
  101950:	e3a02032 	mov	r2, #50	; 0x32
  101954:	e5c32000 	strb	r2, [r3]
	rcvr_spi();
  101958:	ebffffe5 	bl	1018f4 <rcvr_spi>
	do
		res = rcvr_spi();
  10195c:	ebffffe4 	bl	1018f4 <rcvr_spi>
  101960:	e1a03000 	mov	r3, r0
  101964:	e54b300d 	strb	r3, [fp, #-13]
	while ((res != 0xFF) && Timer);
  101968:	e55b300d 	ldrb	r3, [fp, #-13]
  10196c:	e35300ff 	cmp	r3, #255	; 0xff
  101970:	0a000004 	beq	101988 <wait_ready+0x4c>
  101974:	e59f3018 	ldr	r3, [pc, #24]	; 101994 <.text+0x1994>
  101978:	e5d33000 	ldrb	r3, [r3]
  10197c:	e20330ff 	and	r3, r3, #255	; 0xff
  101980:	e3530000 	cmp	r3, #0	; 0x0
  101984:	1afffff4 	bne	10195c <wait_ready+0x20>
	return res;
  101988:	e55b300d 	ldrb	r3, [fp, #-13]
}
  10198c:	e1a00003 	mov	r0, r3
  101990:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  101994:	00200af4 	streqd	r0, [r0], -r4

00101998 <vFdvSpi_Init>:






/*-----------------------------------------------------------------------*/
/* Public Functions                                                      */


/*-----------------------*/
/* Initialize Disk Drive */
/* (Platform dependent)  */

void vFdvSpi_Init( void )
{
  101998:	e1a0c00d 	mov	ip, sp
  10199c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1019a0:	e24cb004 	sub	fp, ip, #4	; 0x4
	// disable PIO from controlling MOSI, MISO, SCK (=hand over to SPI)
	// keep CS untouched - used as GPIO pin during init
	pPIOA->PIO_PDR = AT91C_PA12_MISO | AT91C_PA13_MOSI | AT91C_PA14_SPCK|AT91C_PA11_NPCS0; //  | NCPS_PDR_BIT;
  1019a4:	e59f3080 	ldr	r3, [pc, #128]	; 101a2c <.text+0x1a2c>
  1019a8:	e5932000 	ldr	r2, [r3]
  1019ac:	e3a03b1e 	mov	r3, #30720	; 0x7800
  1019b0:	e5823004 	str	r3, [r2, #4]
	// set pin-functions in PIO Controller
	pPIOA->PIO_ASR = AT91C_PA12_MISO | AT91C_PA13_MOSI | AT91C_PA14_SPCK|AT91C_PA11_NPCS0; /// not here: | NCPS_ASR_BIT;
  1019b4:	e59f3070 	ldr	r3, [pc, #112]	; 101a2c <.text+0x1a2c>
  1019b8:	e5932000 	ldr	r2, [r3]
  1019bc:	e3a03b1e 	mov	r3, #30720	; 0x7800
  1019c0:	e5823070 	str	r3, [r2, #112]
	

	// enable peripheral clock for SPI ( PID Bit 5 )
	AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC,1 << AT91C_ID_SPI  );
  1019c4:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1019c8:	e1a00ac0 	mov	r0, r0, asr #21
  1019cc:	e3a01020 	mov	r1, #32	; 0x20
  1019d0:	eb000017 	bl	101a34 <AT91F_PMC_EnablePeriphClock>
	//pPMC->PMC_PCER = ( (DWORD) 1 << AT91C_ID_SPI ); // n.b. IDs are just bit-numbers
	
	// SPI enable and reset
	AT91F_SPI_Reset(AT91C_BASE_SPI);
  1019d4:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1019d8:	e1a00740 	mov	r0, r0, asr #14
  1019dc:	eb00001f 	bl	101a60 <AT91F_SPI_Reset>
	AT91F_SPI_Enable(AT91C_BASE_SPI);
  1019e0:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1019e4:	e1a00740 	mov	r0, r0, asr #14
  1019e8:	eb000025 	bl	101a84 <AT91F_SPI_Enable>
	//pSPI->SPI_CR = AT91C_SPI_SPIEN | AT91C_SPI_SWRST;
	
	// SPI mode: master, FDIV=0, fault detection disabled
	AT91F_SPI_CfgMode(AT91C_BASE_SPI,AT91C_SPI_MSTR | AT91C_SPI_MODFDIS);
  1019ec:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  1019f0:	e1a00740 	mov	r0, r0, asr #14
  1019f4:	e3a01011 	mov	r1, #17	; 0x11
  1019f8:	eb00002a 	bl	101aa8 <AT91F_SPI_CfgMode>
	//pSPI->SPI_MR  = AT91C_SPI_MSTR | AT91C_SPI_MODFDIS;
	
	// set chip-select-register
	// 8 bits per transfer, CPOL=1, ClockPhase=0, DLYBCT = 0
	AT91F_SPI_CfgCs(AT91C_BASE_SPI ,SPI_CSR_NUM, AT91C_SPI_CPOL | AT91C_SPI_BITS_8);
  1019fc:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  101a00:	e1a00740 	mov	r0, r0, asr #14
  101a04:	e3a01000 	mov	r1, #0	; 0x0
  101a08:	e3a02001 	mov	r2, #1	; 0x1
  101a0c:	eb000030 	bl	101ad4 <AT91F_SPI_CfgCs>
	//pSPI->SPI_CSR[SPI_CSR_NUM] = AT91C_SPI_CPOL | AT91C_SPI_BITS_8;
	
	// slow during init
	AT91_spiSetSpeed(0xFE); 
  101a10:	e3a000fe 	mov	r0, #254	; 0xfe
  101a14:	ebffff69 	bl	1017c0 <AT91_spiSetSpeed>
	
	// enable
	pSPI->SPI_CR = AT91C_SPI_SPIEN;
  101a18:	e59f3010 	ldr	r3, [pc, #16]	; 101a30 <.text+0x1a30>
  101a1c:	e5932000 	ldr	r2, [r3]
  101a20:	e3a03001 	mov	r3, #1	; 0x1
  101a24:	e5823000 	str	r3, [r2]

}
  101a28:	e89da800 	ldmia	sp, {fp, sp, pc}
  101a2c:	0020017c 	eoreq	r0, r0, ip, ror r1
  101a30:	00200180 	eoreq	r0, r0, r0, lsl #3

00101a34 <AT91F_PMC_EnablePeriphClock>:
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_EnablePeriphClock (
	AT91PS_PMC pPMC, // \arg pointer to PMC controller
	unsigned int periphIds)  // \arg IDs of peripherals to enable
{
  101a34:	e1a0c00d 	mov	ip, sp
  101a38:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101a3c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101a40:	e24dd008 	sub	sp, sp, #8	; 0x8
  101a44:	e50b0010 	str	r0, [fp, #-16]
  101a48:	e50b1014 	str	r1, [fp, #-20]
	pPMC->PMC_PCER = periphIds;
  101a4c:	e51b2010 	ldr	r2, [fp, #-16]
  101a50:	e51b3014 	ldr	r3, [fp, #-20]
  101a54:	e5823010 	str	r3, [r2, #16]
}
  101a58:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101a5c:	e89da800 	ldmia	sp, {fp, sp, pc}

00101a60 <AT91F_SPI_Reset>:

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_DisablePeriphClock
//* \brief Disable peripheral clock
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_DisablePeriphClock (
	AT91PS_PMC pPMC, // \arg pointer to PMC controller
	unsigned int periphIds)  // \arg IDs of peripherals to enable
{
	pPMC->PMC_PCDR = periphIds;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_GetPeriphClock
//* \brief Get peripheral clock status
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_GetPeriphClock (
	AT91PS_PMC pPMC) // \arg pointer to PMC controller
{
	return pPMC->PMC_PCSR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_CfgMainOscillatorReg
//* \brief Cfg the main oscillator
//*----------------------------------------------------------------------------
static __inline void AT91F_CKGR_CfgMainOscillatorReg (
	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
	unsigned int mode)
{
	pCKGR->CKGR_MOR = mode;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_GetMainOscillatorReg
//* \brief Cfg the main oscillator
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_CKGR_GetMainOscillatorReg (
	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
{
	return pCKGR->CKGR_MOR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_EnableMainOscillator
//* \brief Enable the main oscillator
//*----------------------------------------------------------------------------
static __inline void AT91F_CKGR_EnableMainOscillator(
	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
{
	pCKGR->CKGR_MOR |= AT91C_CKGR_MOSCEN;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_DisableMainOscillator
//* \brief Disable the main oscillator
//*----------------------------------------------------------------------------
static __inline void AT91F_CKGR_DisableMainOscillator (
	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
{
	pCKGR->CKGR_MOR &= ~AT91C_CKGR_MOSCEN;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_CfgMainOscStartUpTime
//* \brief Cfg MOR Register according to the main osc startup time
//*----------------------------------------------------------------------------
static __inline void AT91F_CKGR_CfgMainOscStartUpTime (
	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
	unsigned int startup_time,  // \arg main osc startup time in microsecond (us)
	unsigned int slowClock)  // \arg slowClock in Hz
{
	pCKGR->CKGR_MOR &= ~AT91C_CKGR_OSCOUNT;
	pCKGR->CKGR_MOR |= ((slowClock * startup_time)/(8*1000000)) << 8;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_GetMainClockFreqReg
//* \brief Cfg the main oscillator
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_CKGR_GetMainClockFreqReg (
	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
{
	return pCKGR->CKGR_MCFR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_CKGR_GetMainClock
//* \brief Return Main clock in Hz
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_CKGR_GetMainClock (
	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
	unsigned int slowClock)  // \arg slowClock in Hz
{
	return ((pCKGR->CKGR_MCFR  & AT91C_CKGR_MAINF) * slowClock) >> 4;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_CfgMCKReg
//* \brief Cfg Master Clock Register
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_CfgMCKReg (
	AT91PS_PMC pPMC, // \arg pointer to PMC controller
	unsigned int mode)
{
	pPMC->PMC_MCKR = mode;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_GetMCKReg
//* \brief Return Master Clock Register
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_GetMCKReg(
	AT91PS_PMC pPMC) // \arg pointer to PMC controller
{
	return pPMC->PMC_MCKR;
}

//*------------------------------------------------------------------------------
//* \fn    AT91F_PMC_GetMasterClock
//* \brief Return master clock in Hz which correponds to processor clock for ARM7
//*------------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_GetMasterClock (
	AT91PS_PMC pPMC, // \arg pointer to PMC controller
	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
	unsigned int slowClock)  // \arg slowClock in Hz
{
	unsigned int reg = pPMC->PMC_MCKR;
	unsigned int prescaler = (1 << ((reg & AT91C_PMC_PRES) >> 2));
	unsigned int pllDivider, pllMultiplier;

	switch (reg & AT91C_PMC_CSS) {
		case AT91C_PMC_CSS_SLOW_CLK: // Slow clock selected
			return slowClock / prescaler;
		case AT91C_PMC_CSS_MAIN_CLK: // Main clock is selected
			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / prescaler;
		case AT91C_PMC_CSS_PLL_CLK: // PLLB clock is selected
			reg = pCKGR->CKGR_PLLR;
			pllDivider    = (reg  & AT91C_CKGR_DIV);
			pllMultiplier = ((reg  & AT91C_CKGR_MUL) >> 16) + 1;
			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / pllDivider * pllMultiplier / prescaler;
	}
	return 0;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_EnablePCK
//* \brief Enable peripheral clock
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_EnablePCK (
	AT91PS_PMC pPMC, // \arg pointer to PMC controller
	unsigned int pck,  // \arg Peripheral clock identifier 0 .. 7
	unsigned int mode)
{
	pPMC->PMC_PCKR[pck] = mode;
	pPMC->PMC_SCER = (1 << pck) << 8;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_DisablePCK
//* \brief Enable peripheral clock
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_DisablePCK (
	AT91PS_PMC pPMC, // \arg pointer to PMC controller
	unsigned int pck)  // \arg Peripheral clock identifier 0 .. 7
{
	pPMC->PMC_SCDR = (1 << pck) << 8;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_EnableIt
//* \brief Enable PMC interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_EnableIt (
	AT91PS_PMC pPMC,     // pointer to a PMC controller
	unsigned int flag)   // IT to be enabled
{
	//* Write to the IER register
	pPMC->PMC_IER = flag;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_DisableIt
//* \brief Disable PMC interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_PMC_DisableIt (
	AT91PS_PMC pPMC, // pointer to a PMC controller
	unsigned int flag) // IT to be disabled
{
	//* Write to the IDR register
	pPMC->PMC_IDR = flag;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_GetStatus
//* \brief Return PMC Interrupt Status
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_GetStatus( // \return PMC Interrupt Status
	AT91PS_PMC pPMC) // pointer to a PMC controller
{
	return pPMC->PMC_SR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_GetInterruptMaskStatus
//* \brief Return PMC Interrupt Mask Status
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_GetInterruptMaskStatus( // \return PMC Interrupt Mask Status
	AT91PS_PMC pPMC) // pointer to a PMC controller
{
	return pPMC->PMC_IMR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_IsInterruptMasked
//* \brief Test if PMC Interrupt is Masked
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_IsInterruptMasked(
        AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
        unsigned int flag) // \arg  flag to be tested
{
	return (AT91F_PMC_GetInterruptMaskStatus(pPMC) & flag);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PMC_IsStatusSet
//* \brief Test if PMC Status is Set
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PMC_IsStatusSet(
        AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
        unsigned int flag) // \arg  flag to be tested
{
	return (AT91F_PMC_GetStatus(pPMC) & flag);
}

// ----------------------------------------------------------------------------
//  \fn    AT91F_CKGR_CfgPLLReg
//  \brief Cfg the PLL Register
// ----------------------------------------------------------------------------
static __inline void AT91F_CKGR_CfgPLLReg (
	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
	unsigned int mode)
{
	pCKGR->CKGR_PLLR = mode;
}

// ----------------------------------------------------------------------------
//  \fn    AT91F_CKGR_GetPLLReg
//  \brief Get the PLL Register
// ----------------------------------------------------------------------------
static __inline unsigned int AT91F_CKGR_GetPLLReg (
	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
{
	return pCKGR->CKGR_PLLR;
}



/* *****************************************************************************
                SOFTWARE API FOR RSTC
   ***************************************************************************** */
//*----------------------------------------------------------------------------
//* \fn    AT91F_RSTSoftReset
//* \brief Start Software Reset
//*----------------------------------------------------------------------------
static __inline void AT91F_RSTSoftReset(
        AT91PS_RSTC pRSTC,
        unsigned int reset)
{
	pRSTC->RSTC_RCR = (0xA5000000 | reset);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_RSTSetMode
//* \brief Set Reset Mode
//*----------------------------------------------------------------------------
static __inline void AT91F_RSTSetMode(
        AT91PS_RSTC pRSTC,
        unsigned int mode)
{
	pRSTC->RSTC_RMR = (0xA5000000 | mode);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_RSTGetMode
//* \brief Get Reset Mode
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_RSTGetMode(
        AT91PS_RSTC pRSTC)
{
	return (pRSTC->RSTC_RMR);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_RSTGetStatus
//* \brief Get Reset Status
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_RSTGetStatus(
        AT91PS_RSTC pRSTC)
{
	return (pRSTC->RSTC_RSR);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_RSTIsSoftRstActive
//* \brief Return !=0 if software reset is still not completed
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_RSTIsSoftRstActive(
        AT91PS_RSTC pRSTC)
{
	return ((pRSTC->RSTC_RSR) & AT91C_RSTC_SRCMP);
}
/* *****************************************************************************
                SOFTWARE API FOR RTTC
   ***************************************************************************** */
//*--------------------------------------------------------------------------------------
//* \fn     AT91F_SetRTT_TimeBase()
//* \brief  Set the RTT prescaler according to the TimeBase in ms
//*--------------------------------------------------------------------------------------
static __inline unsigned int AT91F_RTTSetTimeBase(
        AT91PS_RTTC pRTTC, 
        unsigned int ms)
{
	if (ms > 2000)
		return 1;   // AT91C_TIME_OUT_OF_RANGE
	pRTTC->RTTC_RTMR &= ~0xFFFF;	
	pRTTC->RTTC_RTMR |= (((ms << 15) /1000) & 0xFFFF);	
	return 0;
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTTSetPrescaler()
//* \brief  Set the new prescaler value
//*--------------------------------------------------------------------------------------
static __inline unsigned int AT91F_RTTSetPrescaler(
        AT91PS_RTTC pRTTC, 
        unsigned int rtpres)
{
	pRTTC->RTTC_RTMR &= ~0xFFFF;	
	pRTTC->RTTC_RTMR |= (rtpres & 0xFFFF);	
	return (pRTTC->RTTC_RTMR);
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTTRestart()
//* \brief  Restart the RTT prescaler
//*--------------------------------------------------------------------------------------
static __inline void AT91F_RTTRestart(
        AT91PS_RTTC pRTTC)
{
	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTRST;	
}


//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_SetAlarmINT()
//* \brief  Enable RTT Alarm Interrupt
//*--------------------------------------------------------------------------------------
static __inline void AT91F_RTTSetAlarmINT(
        AT91PS_RTTC pRTTC)
{
	pRTTC->RTTC_RTMR |= AT91C_RTTC_ALMIEN;
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_ClearAlarmINT()
//* \brief  Disable RTT Alarm Interrupt
//*--------------------------------------------------------------------------------------
static __inline void AT91F_RTTClearAlarmINT(
        AT91PS_RTTC pRTTC)
{
	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_ALMIEN;
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_SetRttIncINT()
//* \brief  Enable RTT INC Interrupt
//*--------------------------------------------------------------------------------------
static __inline void AT91F_RTTSetRttIncINT(
        AT91PS_RTTC pRTTC)
{
	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTINCIEN;
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_ClearRttIncINT()
//* \brief  Disable RTT INC Interrupt
//*--------------------------------------------------------------------------------------
static __inline void AT91F_RTTClearRttIncINT(
        AT91PS_RTTC pRTTC)
{
	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_RTTINCIEN;
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_SetAlarmValue()
//* \brief  Set RTT Alarm Value
//*--------------------------------------------------------------------------------------
static __inline void AT91F_RTTSetAlarmValue(
        AT91PS_RTTC pRTTC, unsigned int alarm)
{
	pRTTC->RTTC_RTAR = alarm;
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_GetAlarmValue()
//* \brief  Get RTT Alarm Value
//*--------------------------------------------------------------------------------------
static __inline unsigned int AT91F_RTTGetAlarmValue(
        AT91PS_RTTC pRTTC)
{
	return(pRTTC->RTTC_RTAR);
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTTGetStatus()
//* \brief  Read the RTT status
//*--------------------------------------------------------------------------------------
static __inline unsigned int AT91F_RTTGetStatus(
        AT91PS_RTTC pRTTC)
{
	return(pRTTC->RTTC_RTSR);
}

//*--------------------------------------------------------------------------------------
//* \fn     AT91F_RTT_ReadValue()
//* \brief  Read the RTT value
//*--------------------------------------------------------------------------------------
static __inline unsigned int AT91F_RTTReadValue(
        AT91PS_RTTC pRTTC)
{
        register volatile unsigned int val1,val2;
	do
	{
		val1 = pRTTC->RTTC_RTVR;
		val2 = pRTTC->RTTC_RTVR;
	}	
	while(val1 != val2);
	return(val1);
}
/* *****************************************************************************
                SOFTWARE API FOR PITC
   ***************************************************************************** */
//*----------------------------------------------------------------------------
//* \fn    AT91F_PITInit
//* \brief System timer init : period in ï¿½second, system clock freq in MHz
//*----------------------------------------------------------------------------
static __inline void AT91F_PITInit(
        AT91PS_PITC pPITC,
        unsigned int period,
        unsigned int pit_frequency)
{
	pPITC->PITC_PIMR = period? (period * pit_frequency + 8) >> 4 : 0; // +8 to avoid %10 and /10
	pPITC->PITC_PIMR |= AT91C_PITC_PITEN;	 
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITSetPIV
//* \brief Set the PIT Periodic Interval Value 
//*----------------------------------------------------------------------------
static __inline void AT91F_PITSetPIV(
        AT91PS_PITC pPITC,
        unsigned int piv)
{
	pPITC->PITC_PIMR = piv | (pPITC->PITC_PIMR & (AT91C_PITC_PITEN | AT91C_PITC_PITIEN));
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITEnableInt
//* \brief Enable PIT periodic interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_PITEnableInt(
        AT91PS_PITC pPITC)
{
	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;	 
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITDisableInt
//* \brief Disable PIT periodic interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_PITDisableInt(
        AT91PS_PITC pPITC)
{
	pPITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;	 
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITGetMode
//* \brief Read PIT mode register
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetMode(
        AT91PS_PITC pPITC)
{
	return(pPITC->PITC_PIMR);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITGetStatus
//* \brief Read PIT status register
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetStatus(
        AT91PS_PITC pPITC)
{
	return(pPITC->PITC_PISR);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITGetPIIR
//* \brief Read PIT CPIV and PICNT without ressetting the counters
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetPIIR(
        AT91PS_PITC pPITC)
{
	return(pPITC->PITC_PIIR);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_PITGetPIVR
//* \brief Read System timer CPIV and PICNT without ressetting the counters
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_PITGetPIVR(
        AT91PS_PITC pPITC)
{
	return(pPITC->PITC_PIVR);
}
/* *****************************************************************************
                SOFTWARE API FOR WDTC
   ***************************************************************************** */
//*----------------------------------------------------------------------------
//* \fn    AT91F_WDTSetMode
//* \brief Set Watchdog Mode Register
//*----------------------------------------------------------------------------
static __inline void AT91F_WDTSetMode(
        AT91PS_WDTC pWDTC,
        unsigned int Mode)
{
	pWDTC->WDTC_WDMR = Mode;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_WDTRestart
//* \brief Restart Watchdog
//*----------------------------------------------------------------------------
static __inline void AT91F_WDTRestart(
        AT91PS_WDTC pWDTC)
{
	pWDTC->WDTC_WDCR = 0xA5000001;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_WDTSGettatus
//* \brief Get Watchdog Status
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_WDTSGettatus(
        AT91PS_WDTC pWDTC)
{
	return(pWDTC->WDTC_WDSR & 0x3);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_WDTGetPeriod
//* \brief Translate ms into Watchdog Compatible value
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_WDTGetPeriod(unsigned int ms)
{
	if ((ms < 4) || (ms > 16000))
		return 0;
	return((ms << 8) / 1000);
}
/* *****************************************************************************
                SOFTWARE API FOR VREG
   ***************************************************************************** */
//*----------------------------------------------------------------------------
//* \fn    AT91F_VREG_Enable_LowPowerMode
//* \brief Enable VREG Low Power Mode
//*----------------------------------------------------------------------------
static __inline void AT91F_VREG_Enable_LowPowerMode(
        AT91PS_VREG pVREG)
{
	pVREG->VREG_MR |= AT91C_VREG_PSTDBY;	 
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_VREG_Disable_LowPowerMode
//* \brief Disable VREG Low Power Mode
//*----------------------------------------------------------------------------
static __inline void AT91F_VREG_Disable_LowPowerMode(
        AT91PS_VREG pVREG)
{
	pVREG->VREG_MR &= ~AT91C_VREG_PSTDBY;	 
}/* *****************************************************************************
                SOFTWARE API FOR MC
   ***************************************************************************** */

#define AT91C_MC_CORRECT_KEY  ((unsigned int) 0x5A << 24) // (MC) Correct Protect Key

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_Remap
//* \brief Make Remap
//*----------------------------------------------------------------------------
static __inline void AT91F_MC_Remap (void)     //  
{
    AT91PS_MC pMC = (AT91PS_MC) AT91C_BASE_MC;
    
    pMC->MC_RCR = AT91C_MC_RCB;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_CfgModeReg
//* \brief Configure the EFC Mode Register of the MC controller
//*----------------------------------------------------------------------------
static __inline void AT91F_MC_EFC_CfgModeReg (
	AT91PS_MC pMC, // pointer to a MC controller
	unsigned int mode)        // mode register 
{
	// Write to the FMR register
	pMC->MC_FMR = mode;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_GetModeReg
//* \brief Return MC EFC Mode Regsiter
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_MC_EFC_GetModeReg(
	AT91PS_MC pMC) // pointer to a MC controller
{
	return pMC->MC_FMR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_ComputeFMCN
//* \brief Return MC EFC Mode Regsiter
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_MC_EFC_ComputeFMCN(
	int master_clock) // master clock in Hz
{
	return (master_clock/1000000 +2);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_PerformCmd
//* \brief Perform EFC Command
//*----------------------------------------------------------------------------
static __inline void AT91F_MC_EFC_PerformCmd (
	AT91PS_MC pMC, // pointer to a MC controller
    unsigned int transfer_cmd)
{
	pMC->MC_FCR = transfer_cmd;	
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_GetStatus
//* \brief Return MC EFC Status
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_MC_EFC_GetStatus(
	AT91PS_MC pMC) // pointer to a MC controller
{
	return pMC->MC_FSR;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_IsInterruptMasked
//* \brief Test if EFC MC Interrupt is Masked 
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_MC_EFC_IsInterruptMasked(
        AT91PS_MC pMC,   // \arg  pointer to a MC controller
        unsigned int flag) // \arg  flag to be tested
{
	return (AT91F_MC_EFC_GetModeReg(pMC) & flag);
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_MC_EFC_IsInterruptSet
//* \brief Test if EFC MC Interrupt is Set
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_MC_EFC_IsInterruptSet(
        AT91PS_MC pMC,   // \arg  pointer to a MC controller
        unsigned int flag) // \arg  flag to be tested
{
	return (AT91F_MC_EFC_GetStatus(pMC) & flag);
}

/* *****************************************************************************
                SOFTWARE API FOR SPI
   ***************************************************************************** */
//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_CfgCs
//* \brief Configure SPI chip select register
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_CfgCs (
	AT91PS_SPI pSPI,     // pointer to a SPI controller
	int cs,     // SPI cs number (0 to 3)
 	int val)   //  chip select register
{
	//* Write to the CSR register
	*(pSPI->SPI_CSR + cs) = val;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_EnableIt
//* \brief Enable SPI interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_EnableIt (
	AT91PS_SPI pSPI,     // pointer to a SPI controller
	unsigned int flag)   // IT to be enabled
{
	//* Write to the IER register
	pSPI->SPI_IER = flag;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_DisableIt
//* \brief Disable SPI interrupt
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_DisableIt (
	AT91PS_SPI pSPI, // pointer to a SPI controller
	unsigned int flag) // IT to be disabled
{
	//* Write to the IDR register
	pSPI->SPI_IDR = flag;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_Reset
//* \brief Reset the SPI controller
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_Reset (
	AT91PS_SPI pSPI // pointer to a SPI controller
	)
{
  101a60:	e1a0c00d 	mov	ip, sp
  101a64:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101a68:	e24cb004 	sub	fp, ip, #4	; 0x4
  101a6c:	e24dd004 	sub	sp, sp, #4	; 0x4
  101a70:	e50b0010 	str	r0, [fp, #-16]
	//* Write to the CR register
	pSPI->SPI_CR = AT91C_SPI_SWRST;
  101a74:	e51b2010 	ldr	r2, [fp, #-16]
  101a78:	e3a03080 	mov	r3, #128	; 0x80
  101a7c:	e5823000 	str	r3, [r2]
}
  101a80:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00101a84 <AT91F_SPI_Enable>:

//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_Enable
//* \brief Enable the SPI controller
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_Enable (
	AT91PS_SPI pSPI // pointer to a SPI controller
	)
{
  101a84:	e1a0c00d 	mov	ip, sp
  101a88:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101a8c:	e24cb004 	sub	fp, ip, #4	; 0x4
  101a90:	e24dd004 	sub	sp, sp, #4	; 0x4
  101a94:	e50b0010 	str	r0, [fp, #-16]
	//* Write to the CR register
	pSPI->SPI_CR = AT91C_SPI_SPIEN;
  101a98:	e51b2010 	ldr	r2, [fp, #-16]
  101a9c:	e3a03001 	mov	r3, #1	; 0x1
  101aa0:	e5823000 	str	r3, [r2]
}
  101aa4:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00101aa8 <AT91F_SPI_CfgMode>:

//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_Disable
//* \brief Disable the SPI controller
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_Disable (
	AT91PS_SPI pSPI // pointer to a SPI controller
	)
{
	//* Write to the CR register
	pSPI->SPI_CR = AT91C_SPI_SPIDIS;
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_SPI_CfgMode
//* \brief Enable the SPI controller
//*----------------------------------------------------------------------------
static __inline void AT91F_SPI_CfgMode (
	AT91PS_SPI pSPI, // pointer to a SPI controller
	int mode)        // mode register 
{
  101aa8:	e1a0c00d 	mov	ip, sp
  101aac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101ab0:	e24cb004 	sub	fp, ip, #4	; 0x4
  101ab4:	e24dd008 	sub	sp, sp, #8	; 0x8
  101ab8:	e50b0010 	str	r0, [fp, #-16]
  101abc:	e50b1014 	str	r1, [fp, #-20]
	//* Write to the MR register
	pSPI->SPI_MR = mode;
  101ac0:	e51b2014 	ldr	r2, [fp, #-20]
  101ac4:	e51b3010 	ldr	r3, [fp, #-16]
  101ac8:	e5832004 	str	r2, [r3, #4]
}
  101acc:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101ad0:	e89da800 	ldmia	sp, {fp, sp, pc}

00101ad4 <AT91F_SPI_CfgCs>:
  101ad4:	e1a0c00d 	mov	ip, sp
  101ad8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101adc:	e24cb004 	sub	fp, ip, #4	; 0x4
  101ae0:	e24dd00c 	sub	sp, sp, #12	; 0xc
  101ae4:	e50b0010 	str	r0, [fp, #-16]
  101ae8:	e50b1014 	str	r1, [fp, #-20]
  101aec:	e50b2018 	str	r2, [fp, #-24]
  101af0:	e51b3010 	ldr	r3, [fp, #-16]
  101af4:	e2832030 	add	r2, r3, #48	; 0x30
  101af8:	e51b3014 	ldr	r3, [fp, #-20]
  101afc:	e1a03103 	mov	r3, r3, lsl #2
  101b00:	e0822003 	add	r2, r2, r3
  101b04:	e51b3018 	ldr	r3, [fp, #-24]
  101b08:	e5823000 	str	r3, [r2]
  101b0c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101b10:	e89da800 	ldmia	sp, {fp, sp, pc}

00101b14 <vFdvPWM_init>:
	
}*/

void vFdvPWM_init( void )
{
  101b14:	e1a0c00d 	mov	ip, sp
  101b18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101b1c:	e24cb004 	sub	fp, ip, #4	; 0x4
	// enable peripheral clock for PWM( PID Bit 10 )
	AT91F_PWMC_CfgPMC();
  101b20:	eb000041 	bl	101c2c <AT91F_PWMC_CfgPMC>
	// disable PIO from PWM0
	AT91F_PIO_CfgPeriph(AT91C_BASE_PIOA,AT91C_PA0_PWM0,0);
  101b24:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101b28:	e1a009c0 	mov	r0, r0, asr #19
  101b2c:	e3a01001 	mov	r1, #1	; 0x1
  101b30:	e3a02000 	mov	r2, #0	; 0x0
  101b34:	eb00004f 	bl	101c78 <AT91F_PIO_CfgPeriph>
	// Initially they're stopped
	AT91F_PWMC_StopChannel( AT91C_BASE_PWMC , AT91C_PWMC_CHID0);
  101b38:	e3a00326 	mov	r0, #-1744830464	; 0x98000000
  101b3c:	e1a006c0 	mov	r0, r0, asr #13
  101b40:	e3a01001 	mov	r1, #1	; 0x1
  101b44:	eb00005f 	bl	101cc8 <AT91F_PWMC_StopChannel>
	// Set the Clock A divider
	AT91C_BASE_PWMC->PWMC_MR = (( 4 << 8 ) | 0x02 );  // MCK selection or'ed with Divider
  101b48:	e3a02326 	mov	r2, #-1744830464	; 0x98000000
  101b4c:	e1a026c2 	mov	r2, r2, asr #13
  101b50:	e3a03b01 	mov	r3, #1024	; 0x400
  101b54:	e2833002 	add	r3, r3, #2	; 0x2
  101b58:	e5823000 	str	r3, [r2]
	//AT91C_BASE_PWMC->PWMC_MR = 0; //don't use clock A & B
	  // Set the Clock
	AT91C_BASE_PWMC->PWMC_CH[ 0 ].PWMC_CMR =AT91C_PWMC_CPRE_MCKA |AT91C_PWMC_CPOL;     //Divider Clock A | Channel Polarity Invert
  101b5c:	e3a02326 	mov	r2, #-1744830464	; 0x98000000
  101b60:	e1a026c2 	mov	r2, r2, asr #13
  101b64:	e3a03f82 	mov	r3, #520	; 0x208
  101b68:	e2833003 	add	r3, r3, #3	; 0x3
  101b6c:	e5823200 	str	r3, [r2, #512]
	//AT91C_BASE_PWMC->PWMC_CH[ 0 ].PWMC_CMR = 0xa;     //Use MCK/1024
	//AT91C_BASE_PWMC->PWMC_CH[ 0 ].PWMC_CMR =0x8|AT91C_PWMC_CPOL;     //Divider Clock A | Channel Polarity Invert
    // Set the Period register (sample size bit fied )
	AT91C_BASE_PWMC->PWMC_CH[ 0 ].PWMC_CPRDR = 1024; //
  101b70:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101b74:	e1a036c3 	mov	r3, r3, asr #13
  101b78:	e3a02b01 	mov	r2, #1024	; 0x400
  101b7c:	e5832208 	str	r2, [r3, #520]
	// Set the duty cycle register (output value)
	AT91C_BASE_PWMC->PWMC_CH[ 0 ].PWMC_CDTYR = 256; //50%
  101b80:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101b84:	e1a036c3 	mov	r3, r3, asr #13
  101b88:	e3a02c01 	mov	r2, #256	; 0x100
  101b8c:	e5832204 	str	r2, [r3, #516]
	// Initialise the Update register write only
	AT91C_BASE_PWMC->PWMC_CH[ 0 ].PWMC_CUPDR = 256 ;
  101b90:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101b94:	e1a036c3 	mov	r3, r3, asr #13
  101b98:	e3a02c01 	mov	r2, #256	; 0x100
  101b9c:	e5832210 	str	r2, [r3, #528]
	//Enable PWM0
	AT91C_BASE_PWMC->PWMC_ENA =  AT91C_PWMC_CHID0;
  101ba0:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101ba4:	e1a036c3 	mov	r3, r3, asr #13
  101ba8:	e3a02001 	mov	r2, #1	; 0x1
  101bac:	e5832004 	str	r2, [r3, #4]

	// disable PIO from PWM1
		AT91F_PIO_CfgPeriph(AT91C_BASE_PIOA,AT91C_PA1_PWM1,0);
  101bb0:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101bb4:	e1a009c0 	mov	r0, r0, asr #19
  101bb8:	e3a01002 	mov	r1, #2	; 0x2
  101bbc:	e3a02000 	mov	r2, #0	; 0x0
  101bc0:	eb00002c 	bl	101c78 <AT91F_PIO_CfgPeriph>
		// Initially they're stopped
		AT91F_PWMC_StopChannel( AT91C_BASE_PWMC , AT91C_PWMC_CHID1);
  101bc4:	e3a00326 	mov	r0, #-1744830464	; 0x98000000
  101bc8:	e1a006c0 	mov	r0, r0, asr #13
  101bcc:	e3a01002 	mov	r1, #2	; 0x2
  101bd0:	eb00003c 	bl	101cc8 <AT91F_PWMC_StopChannel>
	  // Set the Clock
		AT91C_BASE_PWMC->PWMC_CH[ 1 ].PWMC_CMR =AT91C_PWMC_CPRE_MCKA |AT91C_PWMC_CPOL;     //Divider Clock A | Channel Polarity Invert
  101bd4:	e3a02326 	mov	r2, #-1744830464	; 0x98000000
  101bd8:	e1a026c2 	mov	r2, r2, asr #13
  101bdc:	e3a03f82 	mov	r3, #520	; 0x208
  101be0:	e2833003 	add	r3, r3, #3	; 0x3
  101be4:	e5823220 	str	r3, [r2, #544]
	    // Set the Period register (sample size bit fied )
		AT91C_BASE_PWMC->PWMC_CH[ 1 ].PWMC_CPRDR = 1024; //
  101be8:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101bec:	e1a036c3 	mov	r3, r3, asr #13
  101bf0:	e3a02b01 	mov	r2, #1024	; 0x400
  101bf4:	e5832228 	str	r2, [r3, #552]
		// Set the duty cycle register (output value)
		AT91C_BASE_PWMC->PWMC_CH[ 1 ].PWMC_CDTYR = 256; //50%
  101bf8:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101bfc:	e1a036c3 	mov	r3, r3, asr #13
  101c00:	e3a02c01 	mov	r2, #256	; 0x100
  101c04:	e5832224 	str	r2, [r3, #548]
		// Initialise the Update register write only
		AT91C_BASE_PWMC->PWMC_CH[ 1 ].PWMC_CUPDR = 256 ;
  101c08:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101c0c:	e1a036c3 	mov	r3, r3, asr #13
  101c10:	e3a02c01 	mov	r2, #256	; 0x100
  101c14:	e5832230 	str	r2, [r3, #560]
		//Enable PWM0
		AT91C_BASE_PWMC->PWMC_ENA =  AT91C_PWMC_CHID1;
  101c18:	e3a03326 	mov	r3, #-1744830464	; 0x98000000
  101c1c:	e1a036c3 	mov	r3, r3, asr #13
  101c20:	e3a02002 	mov	r2, #2	; 0x2
  101c24:	e5832004 	str	r2, [r3, #4]


}
  101c28:	e89da800 	ldmia	sp, {fp, sp, pc}

00101c2c <AT91F_PWMC_CfgPMC>:
//* \fn    AT91F_PWMC_CfgPMC
//* \brief Enable Peripheral clock in PMC for  PWMC
//*----------------------------------------------------------------------------
static __inline void AT91F_PWMC_CfgPMC (void)
{
  101c2c:	e1a0c00d 	mov	ip, sp
  101c30:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101c34:	e24cb004 	sub	fp, ip, #4	; 0x4
	AT91F_PMC_EnablePeriphClock(
  101c38:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
  101c3c:	e1a00ac0 	mov	r0, r0, asr #21
  101c40:	e3a01b01 	mov	r1, #1024	; 0x400
  101c44:	eb000000 	bl	101c4c <AT91F_PMC_EnablePeriphClock>
		AT91C_BASE_PMC, // PIO controller base address
		((unsigned int) 1 << AT91C_ID_PWMC));
}
  101c48:	e89da800 	ldmia	sp, {fp, sp, pc}

00101c4c <AT91F_PMC_EnablePeriphClock>:
  101c4c:	e1a0c00d 	mov	ip, sp
  101c50:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101c54:	e24cb004 	sub	fp, ip, #4	; 0x4
  101c58:	e24dd008 	sub	sp, sp, #8	; 0x8
  101c5c:	e50b0010 	str	r0, [fp, #-16]
  101c60:	e50b1014 	str	r1, [fp, #-20]
  101c64:	e51b2010 	ldr	r2, [fp, #-16]
  101c68:	e51b3014 	ldr	r3, [fp, #-20]
  101c6c:	e5823010 	str	r3, [r2, #16]
  101c70:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101c74:	e89da800 	ldmia	sp, {fp, sp, pc}

00101c78 <AT91F_PIO_CfgPeriph>:
  101c78:	e1a0c00d 	mov	ip, sp
  101c7c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101c80:	e24cb004 	sub	fp, ip, #4	; 0x4
  101c84:	e24dd00c 	sub	sp, sp, #12	; 0xc
  101c88:	e50b0010 	str	r0, [fp, #-16]
  101c8c:	e50b1014 	str	r1, [fp, #-20]
  101c90:	e50b2018 	str	r2, [fp, #-24]
  101c94:	e51b2010 	ldr	r2, [fp, #-16]
  101c98:	e51b3014 	ldr	r3, [fp, #-20]
  101c9c:	e5823070 	str	r3, [r2, #112]
  101ca0:	e51b2010 	ldr	r2, [fp, #-16]
  101ca4:	e51b3018 	ldr	r3, [fp, #-24]
  101ca8:	e5823074 	str	r3, [r2, #116]
  101cac:	e51b2014 	ldr	r2, [fp, #-20]
  101cb0:	e51b3018 	ldr	r3, [fp, #-24]
  101cb4:	e1822003 	orr	r2, r2, r3
  101cb8:	e51b3010 	ldr	r3, [fp, #-16]
  101cbc:	e5832004 	str	r2, [r3, #4]
  101cc0:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101cc4:	e89da800 	ldmia	sp, {fp, sp, pc}

00101cc8 <AT91F_PWMC_StopChannel>:
  101cc8:	e1a0c00d 	mov	ip, sp
  101ccc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101cd0:	e24cb004 	sub	fp, ip, #4	; 0x4
  101cd4:	e24dd008 	sub	sp, sp, #8	; 0x8
  101cd8:	e50b0010 	str	r0, [fp, #-16]
  101cdc:	e50b1014 	str	r1, [fp, #-20]
  101ce0:	e51b2010 	ldr	r2, [fp, #-16]
  101ce4:	e51b3014 	ldr	r3, [fp, #-20]
  101ce8:	e5823008 	str	r3, [r2, #8]
  101cec:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101cf0:	e89da800 	ldmia	sp, {fp, sp, pc}

00101cf4 <vFdvManager_Init>:
#include "dvManager.h"
void vFdvUart0_init (void);
void vFdvManager_Init( void )
{
  101cf4:	e1a0c00d 	mov	ip, sp
  101cf8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101cfc:	e24cb004 	sub	fp, ip, #4	; 0x4
	
	vFdvTimer_init ();                            /* Initialize Timer */
  101d00:	ebfffe1b 	bl	101574 <vFdvTimer_init>
//	vFdvExtInt_init();                            /* Initialize External Interrupt */
//	vFdvUart_init();                             /* Initialize Serial Interface */
	vFdvPWM_init();
  101d04:	ebffff82 	bl	101b14 <vFdvPWM_init>
	
}
  101d08:	e89da800 	ldmia	sp, {fp, sp, pc}

00101d0c <vFdvExtInt_init>:
  ISR_RESTORE();
}


void vFdvExtInt_init(void) {                   /* Setup IRQ 0 Interrupt */
  101d0c:	e1a0c00d 	mov	ip, sp
  101d10:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101d14:	e24cb004 	sub	fp, ip, #4	; 0x4
  101d18:	e24dd004 	sub	sp, sp, #4	; 0x4
  volatile AT91S_AIC * pAIC = AT91C_BASE_AIC;
  101d1c:	e3a03102 	mov	r3, #-2147483648	; 0x80000000
  101d20:	e1a039c3 	mov	r3, r3, asr #19
  101d24:	e50b3010 	str	r3, [fp, #-16]

  /* Setup IRQ0 Interrupt Mode and Vector with Priority 0 and Enable it */
  // mt: pAIC->AIC_SMR[AT91C_ID_IRQ0] = AT91C_AIC_SRCTYPE_INT_EDGE_TRIGGERED | 0;
  pAIC->AIC_SMR[AT91C_ID_IRQ0] = AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE | 0;
  101d28:	e51b2010 	ldr	r2, [fp, #-16]
  101d2c:	e3a03020 	mov	r3, #32	; 0x20
  101d30:	e5823078 	str	r3, [r2, #120]
 
  pAIC->AIC_SVR[AT91C_ID_IRQ0] = (unsigned long) irq0_int;
  101d34:	e59f3018 	ldr	r3, [pc, #24]	; 101d54 <.text+0x1d54>
  101d38:	e1a02003 	mov	r2, r3
  101d3c:	e51b3010 	ldr	r3, [fp, #-16]
  101d40:	e58320f8 	str	r2, [r3, #248]
  pAIC->AIC_IECR = (1 << AT91C_ID_IRQ0);
  101d44:	e51b2010 	ldr	r2, [fp, #-16]
  101d48:	e3a03101 	mov	r3, #1073741824	; 0x40000000
  101d4c:	e5823120 	str	r3, [r2, #288]
}
  101d50:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  101d54:	002009ac 	eoreq	r0, r0, ip, lsr #19

00101d58 <DBGU_Configure>:
/// \param baudrate  Desired baudrate.
/// \param mck  Frequency of the system master clock.
//------------------------------------------------------------------------------
void DBGU_Configure(void)
{
  101d58:	e1a0c00d 	mov	ip, sp
  101d5c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101d60:	e24cb004 	sub	fp, ip, #4	; 0x4
  101d64:	e24dd004 	sub	sp, sp, #4	; 0x4

    AT91F_DBGU_CfgPIO();
  101d68:	eb00000d 	bl	101da4 <AT91F_DBGU_CfgPIO>
      AT91F_US_Configure ((AT91PS_USART) AT91C_BASE_DBGU,
  101d6c:	e3a03000 	mov	r3, #0	; 0x0
  101d70:	e58d3000 	str	r3, [sp]
  101d74:	e3a00209 	mov	r0, #-1879048192	; 0x90000000
  101d78:	e1a009c0 	mov	r0, r0, asr #19
  101d7c:	e59f101c 	ldr	r1, [pc, #28]	; 101da0 <.text+0x1da0>
  101d80:	e3a02d23 	mov	r2, #2240	; 0x8c0
  101d84:	e3a03907 	mov	r3, #114688	; 0x1c000
  101d88:	e2833c02 	add	r3, r3, #512	; 0x200
  101d8c:	eb000021 	bl	101e18 <AT91F_US_Configure>
						  MCK,
                          AT91C_US_ASYNC_MODE,  	// mode Register to be programmed
                          BR,	// baudrate to be programmed
                          0);                   	// timeguard to be programmed
      // Enable Transmitter
      AT91F_US_EnableTx((AT91PS_USART) AT91C_BASE_DBGU);
  101d90:	e3a00209 	mov	r0, #-1879048192	; 0x90000000
  101d94:	e1a009c0 	mov	r0, r0, asr #19
  101d98:	eb00010b 	bl	1021cc <AT91F_US_EnableTx>
}
  101d9c:	e89da808 	ldmia	sp, {r3, fp, sp, pc}
  101da0:	02dd4249 	sbceqs	r4, sp, #-1879048188	; 0x90000004

00101da4 <AT91F_DBGU_CfgPIO>:
//* \fn    AT91F_DBGU_CfgPIO
//* \brief Configure PIO controllers to drive DBGU signals
//*----------------------------------------------------------------------------
static __inline void AT91F_DBGU_CfgPIO (void)
{
  101da4:	e1a0c00d 	mov	ip, sp
  101da8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101dac:	e24cb004 	sub	fp, ip, #4	; 0x4
	// Configure PIO controllers to periph mode
	AT91F_PIO_CfgPeriph(
  101db0:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
  101db4:	e1a009c0 	mov	r0, r0, asr #19
  101db8:	e3a01c06 	mov	r1, #1536	; 0x600
  101dbc:	e3a02000 	mov	r2, #0	; 0x0
  101dc0:	eb000000 	bl	101dc8 <AT91F_PIO_CfgPeriph>
		AT91C_BASE_PIOA, // PIO controller base address
		((unsigned int) AT91C_PA9_DRXD    ) |
		((unsigned int) AT91C_PA10_DTXD    ), // Peripheral A
		0); // Peripheral B
}
  101dc4:	e89da800 	ldmia	sp, {fp, sp, pc}

00101dc8 <AT91F_PIO_CfgPeriph>:
  101dc8:	e1a0c00d 	mov	ip, sp
  101dcc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101dd0:	e24cb004 	sub	fp, ip, #4	; 0x4
  101dd4:	e24dd00c 	sub	sp, sp, #12	; 0xc
  101dd8:	e50b0010 	str	r0, [fp, #-16]
  101ddc:	e50b1014 	str	r1, [fp, #-20]
  101de0:	e50b2018 	str	r2, [fp, #-24]
  101de4:	e51b2010 	ldr	r2, [fp, #-16]
  101de8:	e51b3014 	ldr	r3, [fp, #-20]
  101dec:	e5823070 	str	r3, [r2, #112]
  101df0:	e51b2010 	ldr	r2, [fp, #-16]
  101df4:	e51b3018 	ldr	r3, [fp, #-24]
  101df8:	e5823074 	str	r3, [r2, #116]
  101dfc:	e51b2014 	ldr	r2, [fp, #-20]
  101e00:	e51b3018 	ldr	r3, [fp, #-24]
  101e04:	e1822003 	orr	r2, r2, r3
  101e08:	e51b3010 	ldr	r3, [fp, #-16]
  101e0c:	e5832004 	str	r2, [r3, #4]
  101e10:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101e14:	e89da800 	ldmia	sp, {fp, sp, pc}

00101e18 <AT91F_US_Configure>:
  101e18:	e1a0c00d 	mov	ip, sp
  101e1c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101e20:	e24cb004 	sub	fp, ip, #4	; 0x4
  101e24:	e24dd010 	sub	sp, sp, #16	; 0x10
  101e28:	e50b0010 	str	r0, [fp, #-16]
  101e2c:	e50b1014 	str	r1, [fp, #-20]
  101e30:	e50b2018 	str	r2, [fp, #-24]
  101e34:	e50b301c 	str	r3, [fp, #-28]
  101e38:	e51b2010 	ldr	r2, [fp, #-16]
  101e3c:	e3e03000 	mvn	r3, #0	; 0x0
  101e40:	e582300c 	str	r3, [r2, #12]
  101e44:	e51b2010 	ldr	r2, [fp, #-16]
  101e48:	e3a030ac 	mov	r3, #172	; 0xac
  101e4c:	e5823000 	str	r3, [r2]
  101e50:	e51b0010 	ldr	r0, [fp, #-16]
  101e54:	e51b1014 	ldr	r1, [fp, #-20]
  101e58:	e51b201c 	ldr	r2, [fp, #-28]
  101e5c:	eb00000b 	bl	101e90 <AT91F_US_SetBaudrate>
  101e60:	e51b0010 	ldr	r0, [fp, #-16]
  101e64:	e59b1004 	ldr	r1, [fp, #4]
  101e68:	eb00004a 	bl	101f98 <AT91F_US_SetTimeguard>
  101e6c:	e51b3010 	ldr	r3, [fp, #-16]
  101e70:	e2833c01 	add	r3, r3, #256	; 0x100
  101e74:	e1a00003 	mov	r0, r3
  101e78:	eb000051 	bl	101fc4 <AT91F_PDC_Open>
  101e7c:	e51b2010 	ldr	r2, [fp, #-16]
  101e80:	e51b3018 	ldr	r3, [fp, #-24]
  101e84:	e5823004 	str	r3, [r2, #4]
  101e88:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101e8c:	e89da800 	ldmia	sp, {fp, sp, pc}

00101e90 <AT91F_US_SetBaudrate>:
  101e90:	e1a0c00d 	mov	ip, sp
  101e94:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101e98:	e24cb004 	sub	fp, ip, #4	; 0x4
  101e9c:	e24dd00c 	sub	sp, sp, #12	; 0xc
  101ea0:	e50b0010 	str	r0, [fp, #-16]
  101ea4:	e50b1014 	str	r1, [fp, #-20]
  101ea8:	e50b2018 	str	r2, [fp, #-24]
  101eac:	e51b0014 	ldr	r0, [fp, #-20]
  101eb0:	e51b1018 	ldr	r1, [fp, #-24]
  101eb4:	eb000004 	bl	101ecc <AT91F_US_Baudrate>
  101eb8:	e1a02000 	mov	r2, r0
  101ebc:	e51b3010 	ldr	r3, [fp, #-16]
  101ec0:	e5832020 	str	r2, [r3, #32]
  101ec4:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101ec8:	e89da800 	ldmia	sp, {fp, sp, pc}

00101ecc <AT91F_US_Baudrate>:
  101ecc:	e1a0c00d 	mov	ip, sp
  101ed0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101ed4:	e24cb004 	sub	fp, ip, #4	; 0x4
  101ed8:	e24dd010 	sub	sp, sp, #16	; 0x10
  101edc:	e50b0014 	str	r0, [fp, #-20]
  101ee0:	e50b1018 	str	r1, [fp, #-24]
  101ee4:	e51b2014 	ldr	r2, [fp, #-20]
  101ee8:	e1a03002 	mov	r3, r2
  101eec:	e1a03103 	mov	r3, r3, lsl #2
  101ef0:	e0833002 	add	r3, r3, r2
  101ef4:	e1a03083 	mov	r3, r3, lsl #1
  101ef8:	e1a02003 	mov	r2, r3
  101efc:	e51b3018 	ldr	r3, [fp, #-24]
  101f00:	e1a03203 	mov	r3, r3, lsl #4
  101f04:	e1a00002 	mov	r0, r2
  101f08:	e1a01003 	mov	r1, r3
  101f0c:	eb000169 	bl	1024b8 <__aeabi_uidiv>
  101f10:	e1a03000 	mov	r3, r0
  101f14:	e50b3010 	str	r3, [fp, #-16]
  101f18:	e51b2010 	ldr	r2, [fp, #-16]
  101f1c:	e59f3070 	ldr	r3, [pc, #112]	; 101f94 <.text+0x1f94>
  101f20:	e0831392 	umull	r1, r3, r2, r3
  101f24:	e1a031a3 	mov	r3, r3, lsr #3
  101f28:	e50b301c 	str	r3, [fp, #-28]
  101f2c:	e51b301c 	ldr	r3, [fp, #-28]
  101f30:	e1a03103 	mov	r3, r3, lsl #2
  101f34:	e51b101c 	ldr	r1, [fp, #-28]
  101f38:	e0833001 	add	r3, r3, r1
  101f3c:	e1a03083 	mov	r3, r3, lsl #1
  101f40:	e0632002 	rsb	r2, r3, r2
  101f44:	e50b201c 	str	r2, [fp, #-28]
  101f48:	e51b301c 	ldr	r3, [fp, #-28]
  101f4c:	e3530004 	cmp	r3, #4	; 0x4
  101f50:	9a000006 	bls	101f70 <AT91F_US_Baudrate+0xa4>
  101f54:	e51b2010 	ldr	r2, [fp, #-16]
  101f58:	e59f3034 	ldr	r3, [pc, #52]	; 101f94 <.text+0x1f94>
  101f5c:	e0831392 	umull	r1, r3, r2, r3
  101f60:	e1a031a3 	mov	r3, r3, lsr #3
  101f64:	e2833001 	add	r3, r3, #1	; 0x1
  101f68:	e50b3010 	str	r3, [fp, #-16]
  101f6c:	ea000004 	b	101f84 <AT91F_US_Baudrate+0xb8>
  101f70:	e51b2010 	ldr	r2, [fp, #-16]
  101f74:	e59f3018 	ldr	r3, [pc, #24]	; 101f94 <.text+0x1f94>
  101f78:	e0831392 	umull	r1, r3, r2, r3
  101f7c:	e1a031a3 	mov	r3, r3, lsr #3
  101f80:	e50b3010 	str	r3, [fp, #-16]
  101f84:	e51b3010 	ldr	r3, [fp, #-16]
  101f88:	e1a00003 	mov	r0, r3
  101f8c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101f90:	e89da800 	ldmia	sp, {fp, sp, pc}
  101f94:	cccccccd 	stcgtl	12, cr12, [ip], {205}

00101f98 <AT91F_US_SetTimeguard>:
  101f98:	e1a0c00d 	mov	ip, sp
  101f9c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101fa0:	e24cb004 	sub	fp, ip, #4	; 0x4
  101fa4:	e24dd008 	sub	sp, sp, #8	; 0x8
  101fa8:	e50b0010 	str	r0, [fp, #-16]
  101fac:	e50b1014 	str	r1, [fp, #-20]
  101fb0:	e51b2010 	ldr	r2, [fp, #-16]
  101fb4:	e51b3014 	ldr	r3, [fp, #-20]
  101fb8:	e5823028 	str	r3, [r2, #40]
  101fbc:	e24bd00c 	sub	sp, fp, #12	; 0xc
  101fc0:	e89da800 	ldmia	sp, {fp, sp, pc}

00101fc4 <AT91F_PDC_Open>:
  101fc4:	e1a0c00d 	mov	ip, sp
  101fc8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  101fcc:	e24cb004 	sub	fp, ip, #4	; 0x4
  101fd0:	e24dd004 	sub	sp, sp, #4	; 0x4
  101fd4:	e50b0010 	str	r0, [fp, #-16]
  101fd8:	e51b0010 	ldr	r0, [fp, #-16]
  101fdc:	eb000016 	bl	10203c <AT91F_PDC_DisableRx>
  101fe0:	e51b0010 	ldr	r0, [fp, #-16]
  101fe4:	eb00001d 	bl	102060 <AT91F_PDC_DisableTx>
  101fe8:	e51b0010 	ldr	r0, [fp, #-16]
  101fec:	e3a01000 	mov	r1, #0	; 0x0
  101ff0:	e3a02000 	mov	r2, #0	; 0x0
  101ff4:	eb000022 	bl	102084 <AT91F_PDC_SetNextTx>
  101ff8:	e51b0010 	ldr	r0, [fp, #-16]
  101ffc:	e3a01000 	mov	r1, #0	; 0x0
  102000:	e3a02000 	mov	r2, #0	; 0x0
  102004:	eb00002e 	bl	1020c4 <AT91F_PDC_SetNextRx>
  102008:	e51b0010 	ldr	r0, [fp, #-16]
  10200c:	e3a01000 	mov	r1, #0	; 0x0
  102010:	e3a02000 	mov	r2, #0	; 0x0
  102014:	eb00003a 	bl	102104 <AT91F_PDC_SetTx>
  102018:	e51b0010 	ldr	r0, [fp, #-16]
  10201c:	e3a01000 	mov	r1, #0	; 0x0
  102020:	e3a02000 	mov	r2, #0	; 0x0
  102024:	eb000046 	bl	102144 <AT91F_PDC_SetRx>
  102028:	e51b0010 	ldr	r0, [fp, #-16]
  10202c:	eb000054 	bl	102184 <AT91F_PDC_EnableRx>
  102030:	e51b0010 	ldr	r0, [fp, #-16]
  102034:	eb00005b 	bl	1021a8 <AT91F_PDC_EnableTx>
  102038:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

0010203c <AT91F_PDC_DisableRx>:
  10203c:	e1a0c00d 	mov	ip, sp
  102040:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  102044:	e24cb004 	sub	fp, ip, #4	; 0x4
  102048:	e24dd004 	sub	sp, sp, #4	; 0x4
  10204c:	e50b0010 	str	r0, [fp, #-16]
  102050:	e51b2010 	ldr	r2, [fp, #-16]
  102054:	e3a03002 	mov	r3, #2	; 0x2
  102058:	e5823020 	str	r3, [r2, #32]
  10205c:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00102060 <AT91F_PDC_DisableTx>:
  102060:	e1a0c00d 	mov	ip, sp
  102064:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  102068:	e24cb004 	sub	fp, ip, #4	; 0x4
  10206c:	e24dd004 	sub	sp, sp, #4	; 0x4
  102070:	e50b0010 	str	r0, [fp, #-16]
  102074:	e51b2010 	ldr	r2, [fp, #-16]
  102078:	e3a03c02 	mov	r3, #512	; 0x200
  10207c:	e5823020 	str	r3, [r2, #32]
  102080:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00102084 <AT91F_PDC_SetNextTx>:
  102084:	e1a0c00d 	mov	ip, sp
  102088:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10208c:	e24cb004 	sub	fp, ip, #4	; 0x4
  102090:	e24dd00c 	sub	sp, sp, #12	; 0xc
  102094:	e50b0010 	str	r0, [fp, #-16]
  102098:	e50b1014 	str	r1, [fp, #-20]
  10209c:	e50b2018 	str	r2, [fp, #-24]
  1020a0:	e51b3014 	ldr	r3, [fp, #-20]
  1020a4:	e1a02003 	mov	r2, r3
  1020a8:	e51b3010 	ldr	r3, [fp, #-16]
  1020ac:	e5832018 	str	r2, [r3, #24]
  1020b0:	e51b2010 	ldr	r2, [fp, #-16]
  1020b4:	e51b3018 	ldr	r3, [fp, #-24]
  1020b8:	e582301c 	str	r3, [r2, #28]
  1020bc:	e24bd00c 	sub	sp, fp, #12	; 0xc
  1020c0:	e89da800 	ldmia	sp, {fp, sp, pc}

001020c4 <AT91F_PDC_SetNextRx>:
  1020c4:	e1a0c00d 	mov	ip, sp
  1020c8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1020cc:	e24cb004 	sub	fp, ip, #4	; 0x4
  1020d0:	e24dd00c 	sub	sp, sp, #12	; 0xc
  1020d4:	e50b0010 	str	r0, [fp, #-16]
  1020d8:	e50b1014 	str	r1, [fp, #-20]
  1020dc:	e50b2018 	str	r2, [fp, #-24]
  1020e0:	e51b3014 	ldr	r3, [fp, #-20]
  1020e4:	e1a02003 	mov	r2, r3
  1020e8:	e51b3010 	ldr	r3, [fp, #-16]
  1020ec:	e5832010 	str	r2, [r3, #16]
  1020f0:	e51b2010 	ldr	r2, [fp, #-16]
  1020f4:	e51b3018 	ldr	r3, [fp, #-24]
  1020f8:	e5823014 	str	r3, [r2, #20]
  1020fc:	e24bd00c 	sub	sp, fp, #12	; 0xc
  102100:	e89da800 	ldmia	sp, {fp, sp, pc}

00102104 <AT91F_PDC_SetTx>:
  102104:	e1a0c00d 	mov	ip, sp
  102108:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10210c:	e24cb004 	sub	fp, ip, #4	; 0x4
  102110:	e24dd00c 	sub	sp, sp, #12	; 0xc
  102114:	e50b0010 	str	r0, [fp, #-16]
  102118:	e50b1014 	str	r1, [fp, #-20]
  10211c:	e50b2018 	str	r2, [fp, #-24]
  102120:	e51b3014 	ldr	r3, [fp, #-20]
  102124:	e1a02003 	mov	r2, r3
  102128:	e51b3010 	ldr	r3, [fp, #-16]
  10212c:	e5832008 	str	r2, [r3, #8]
  102130:	e51b2010 	ldr	r2, [fp, #-16]
  102134:	e51b3018 	ldr	r3, [fp, #-24]
  102138:	e582300c 	str	r3, [r2, #12]
  10213c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  102140:	e89da800 	ldmia	sp, {fp, sp, pc}

00102144 <AT91F_PDC_SetRx>:
  102144:	e1a0c00d 	mov	ip, sp
  102148:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10214c:	e24cb004 	sub	fp, ip, #4	; 0x4
  102150:	e24dd00c 	sub	sp, sp, #12	; 0xc
  102154:	e50b0010 	str	r0, [fp, #-16]
  102158:	e50b1014 	str	r1, [fp, #-20]
  10215c:	e50b2018 	str	r2, [fp, #-24]
  102160:	e51b3014 	ldr	r3, [fp, #-20]
  102164:	e1a02003 	mov	r2, r3
  102168:	e51b3010 	ldr	r3, [fp, #-16]
  10216c:	e5832000 	str	r2, [r3]
  102170:	e51b2010 	ldr	r2, [fp, #-16]
  102174:	e51b3018 	ldr	r3, [fp, #-24]
  102178:	e5823004 	str	r3, [r2, #4]
  10217c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  102180:	e89da800 	ldmia	sp, {fp, sp, pc}

00102184 <AT91F_PDC_EnableRx>:
  102184:	e1a0c00d 	mov	ip, sp
  102188:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10218c:	e24cb004 	sub	fp, ip, #4	; 0x4
  102190:	e24dd004 	sub	sp, sp, #4	; 0x4
  102194:	e50b0010 	str	r0, [fp, #-16]
  102198:	e51b2010 	ldr	r2, [fp, #-16]
  10219c:	e3a03001 	mov	r3, #1	; 0x1
  1021a0:	e5823020 	str	r3, [r2, #32]
  1021a4:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

001021a8 <AT91F_PDC_EnableTx>:
  1021a8:	e1a0c00d 	mov	ip, sp
  1021ac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1021b0:	e24cb004 	sub	fp, ip, #4	; 0x4
  1021b4:	e24dd004 	sub	sp, sp, #4	; 0x4
  1021b8:	e50b0010 	str	r0, [fp, #-16]
  1021bc:	e51b2010 	ldr	r2, [fp, #-16]
  1021c0:	e3a03c01 	mov	r3, #256	; 0x100
  1021c4:	e5823020 	str	r3, [r2, #32]
  1021c8:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

001021cc <AT91F_US_EnableTx>:
  1021cc:	e1a0c00d 	mov	ip, sp
  1021d0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1021d4:	e24cb004 	sub	fp, ip, #4	; 0x4
  1021d8:	e24dd004 	sub	sp, sp, #4	; 0x4
  1021dc:	e50b0010 	str	r0, [fp, #-16]
  1021e0:	e51b2010 	ldr	r2, [fp, #-16]
  1021e4:	e3a03040 	mov	r3, #64	; 0x40
  1021e8:	e5823000 	str	r3, [r2]
  1021ec:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

001021f0 <DBGU_PutChar>:

//------------------------------------------------------------------------------
/// Outputs a character on the DBGU line.
/// \param c  Character to send.
//------------------------------------------------------------------------------
static void DBGU_PutChar(unsigned char c)
{
  1021f0:	e1a0c00d 	mov	ip, sp
  1021f4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1021f8:	e24cb004 	sub	fp, ip, #4	; 0x4
  1021fc:	e24dd004 	sub	sp, sp, #4	; 0x4
  102200:	e1a03000 	mov	r3, r0
  102204:	e54b3010 	strb	r3, [fp, #-16]
    // Wait for the transmitter to be ready
    while (!AT91F_US_TxReady((AT91PS_USART) AT91C_BASE_DBGU));
  102208:	e3a00209 	mov	r0, #-1879048192	; 0x90000000
  10220c:	e1a009c0 	mov	r0, r0, asr #19
  102210:	eb00001b 	bl	102284 <AT91F_US_TxReady>
  102214:	e1a03000 	mov	r3, r0
  102218:	e3530000 	cmp	r3, #0	; 0x0
  10221c:	0afffff9 	beq	102208 <DBGU_PutChar+0x18>
    // Send character
    AT91F_US_PutChar((AT91PS_USART) AT91C_BASE_DBGU , c );
  102220:	e55b3010 	ldrb	r3, [fp, #-16]
  102224:	e3a00209 	mov	r0, #-1879048192	; 0x90000000
  102228:	e1a009c0 	mov	r0, r0, asr #19
  10222c:	e1a01003 	mov	r1, r3
  102230:	eb000006 	bl	102250 <AT91F_US_PutChar>
    // Wait for the transfer to complete
    while (!AT91F_US_TxReady((AT91PS_USART) AT91C_BASE_DBGU));
  102234:	e3a00209 	mov	r0, #-1879048192	; 0x90000000
  102238:	e1a009c0 	mov	r0, r0, asr #19
  10223c:	eb000010 	bl	102284 <AT91F_US_TxReady>
  102240:	e1a03000 	mov	r3, r0
  102244:	e3530000 	cmp	r3, #0	; 0x0
  102248:	0afffff9 	beq	102234 <DBGU_PutChar+0x44>
}
  10224c:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

00102250 <AT91F_US_PutChar>:
//*----------------------------------------------------------------------------
static __inline void AT91F_US_PutChar (
	AT91PS_USART pUSART,
	int character )
{
  102250:	e1a0c00d 	mov	ip, sp
  102254:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  102258:	e24cb004 	sub	fp, ip, #4	; 0x4
  10225c:	e24dd008 	sub	sp, sp, #8	; 0x8
  102260:	e50b0010 	str	r0, [fp, #-16]
  102264:	e50b1014 	str	r1, [fp, #-20]
    pUSART->US_THR = (character & 0x1FF);
  102268:	e51b3014 	ldr	r3, [fp, #-20]
  10226c:	e1a03b83 	mov	r3, r3, lsl #23
  102270:	e1a03ba3 	mov	r3, r3, lsr #23
  102274:	e51b2010 	ldr	r2, [fp, #-16]
  102278:	e582301c 	str	r3, [r2, #28]
}
  10227c:	e24bd00c 	sub	sp, fp, #12	; 0xc
  102280:	e89da800 	ldmia	sp, {fp, sp, pc}

00102284 <AT91F_US_TxReady>:
  102284:	e1a0c00d 	mov	ip, sp
  102288:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  10228c:	e24cb004 	sub	fp, ip, #4	; 0x4
  102290:	e24dd004 	sub	sp, sp, #4	; 0x4
  102294:	e50b0010 	str	r0, [fp, #-16]
  102298:	e51b3010 	ldr	r3, [fp, #-16]
  10229c:	e5933014 	ldr	r3, [r3, #20]
  1022a0:	e2033002 	and	r3, r3, #2	; 0x2
  1022a4:	e1a00003 	mov	r0, r3
  1022a8:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

001022ac <DBGU_PutString>:


void DBGU_PutString( char *pString)
{
  1022ac:	e1a0c00d 	mov	ip, sp
  1022b0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1022b4:	e24cb004 	sub	fp, ip, #4	; 0x4
  1022b8:	e24dd004 	sub	sp, sp, #4	; 0x4
  1022bc:	e50b0010 	str	r0, [fp, #-16]
	while( *pString)
  1022c0:	ea000006 	b	1022e0 <DBGU_PutString+0x34>
	{
		DBGU_PutChar(*pString);
  1022c4:	e51b3010 	ldr	r3, [fp, #-16]
  1022c8:	e5d33000 	ldrb	r3, [r3]
  1022cc:	e1a00003 	mov	r0, r3
  1022d0:	ebffffc6 	bl	1021f0 <DBGU_PutChar>
		pString++;
  1022d4:	e51b3010 	ldr	r3, [fp, #-16]
  1022d8:	e2833001 	add	r3, r3, #1	; 0x1
  1022dc:	e50b3010 	str	r3, [fp, #-16]
  1022e0:	e51b3010 	ldr	r3, [fp, #-16]
  1022e4:	e5d33000 	ldrb	r3, [r3]
  1022e8:	e3530000 	cmp	r3, #0	; 0x0
  1022ec:	1afffff4 	bne	1022c4 <DBGU_PutString+0x18>
	}
}
  1022f0:	e89da808 	ldmia	sp, {r3, fp, sp, pc}

001022f4 <DBGU_GetChar>:
//------------------------------------------------------------------------------
/// Reads and returns a character from the DBGU.
//------------------------------------------------------------------------------
unsigned char DBGU_GetChar()
{
  1022f4:	e1a0c00d 	mov	ip, sp
  1022f8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
  1022fc:	e24cb004 	sub	fp, ip, #4	; 0x4
    while ((AT91C_BASE_DBGU->DBGU_CSR & AT91C_US_RXRDY) == 0);
  102300:	e3a03209 	mov	r3, #-1879048192	; 0x90000000
  102304:	e1a039c3 	mov	r3, r3, asr #19
  102308:	e5933014 	ldr	r3, [r3, #20]
  10230c:	e2033001 	and	r3, r3, #1	; 0x1
  102310:	e3530000 	cmp	r3, #0	; 0x0
  102314:	0afffff9 	beq	102300 <DBGU_GetChar+0xc>
    return AT91C_BASE_DBGU->DBGU_RHR;
  102318:	e3a03209 	mov	r3, #-1879048192	; 0x90000000
  10231c:	e1a039c3 	mov	r3, r3, asr #19
  102320:	e5933018 	ldr	r3, [r3, #24]
  102324:	e20330ff 	and	r3, r3, #255	; 0xff
}
  102328:	e1a00003 	mov	r0, r3
  10232c:	e89da800 	ldmia	sp, {fp, sp, pc}

00102330 <InitADC>:


void InitADC(void) {

	AT91C_BASE_PMC->PMC_PCER = 1 << AT91C_ID_ADC;
  102330:	e3a02010 	mov	r2, #16	; 0x10
  102334:	e3e03c03 	mvn	r3, #768	; 0x300
  102338:	e50320ef 	str	r2, [r3, #-239]
	AT91C_BASE_ADC->ADC_CR = 0x2;   // set Start Bit
  10233c:	e3e02b9f 	mvn	r2, #162816	; 0x27c00
  102340:	e3a03002 	mov	r3, #2	; 0x2
  102344:	e50233ff 	str	r3, [r2, #-1023]
	AT91C_BASE_ADC->ADC_MR = 0x3f00;   // set mode register, 10bit chanel, MCK/128
  102348:	e3a03c3f 	mov	r3, #16128	; 0x3f00
  10234c:	e50233fb 	str	r3, [r2, #-1019]
	AT91C_BASE_ADC->ADC_CHER = AT91C_ADC_CH4|AT91C_ADC_CH7; // enable chanel 4 and 7
  102350:	e3a03090 	mov	r3, #144	; 0x90
  102354:	e50233ef 	str	r3, [r2, #-1007]

}
  102358:	e12fff1e 	bx	lr

0010235c <GetValue_chanel4>:


unsigned int GetValue_chanel4() {
	AT91C_BASE_ADC->ADC_CR = 0x2; // set Start Bit
  10235c:	e3a02002 	mov	r2, #2	; 0x2
  102360:	e3e03b9f 	mvn	r3, #162816	; 0x27c00
  102364:	e50323ff 	str	r2, [r3, #-1023]
  102368:	e1a02003 	mov	r2, r3
  while(!(AT91C_BASE_ADC->ADC_SR&0x10)); //wait until conversion complete
  10236c:	e51233e3 	ldr	r3, [r2, #-995]
  102370:	e3130010 	tst	r3, #16	; 0x10
  102374:	0afffffc 	beq	10236c <GetValue_chanel4+0x10>
  return AT91C_BASE_ADC->ADC_CDR4;
  102378:	e51203bf 	ldr	r0, [r2, #-959]
}
  10237c:	e12fff1e 	bx	lr

00102380 <GetValue_chanel5>:

unsigned int GetValue_chanel5() {
	AT91C_BASE_ADC->ADC_CR = 0x2; // set Start Bit
  102380:	e3a02002 	mov	r2, #2	; 0x2
  102384:	e3e03b9f 	mvn	r3, #162816	; 0x27c00
  102388:	e50323ff 	str	r2, [r3, #-1023]
  10238c:	e1a02003 	mov	r2, r3
  while(!(AT91C_BASE_ADC->ADC_SR&0x20)); //wait until conversion complete
  102390:	e51233e3 	ldr	r3, [r2, #-995]
  102394:	e3130020 	tst	r3, #32	; 0x20
  102398:	0afffffc 	beq	102390 <GetValue_chanel5+0x10>
  return AT91C_BASE_ADC->ADC_CDR5;
  10239c:	e51203bb 	ldr	r0, [r2, #-955]
}
  1023a0:	e12fff1e 	bx	lr

001023a4 <vFappTest_init>:


void vFappTest_init( void )
{
  1023a4:	e52de004 	str	lr, [sp, #-4]!
	InitADC();
  1023a8:	ebffffe0 	bl	102330 <InitADC>
	DBGU_Configure();
  1023ac:	ebfffe69 	bl	101d58 <DBGU_Configure>

}
  1023b0:	e49df004 	ldr	pc, [sp], #4

001023b4 <vFPrintString>:
  1023b4:	e92d4010 	stmdb	sp!, {r4, lr}
  1023b8:	e1a04000 	mov	r4, r0
  1023bc:	eb00046d 	bl	103578 <strlen>
  1023c0:	e1a01000 	mov	r1, r0
  1023c4:	e1a00004 	mov	r0, r4
  1023c8:	ebfff85a 	bl	100538 <cFlibUart_SendBuff>
  1023cc:	e8bd8010 	ldmia	sp!, {r4, pc}

001023d0 <vFappTest>:

void vFappTest( void )
{
  1023d0:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  1023d4:	e24dd020 	sub	sp, sp, #32	; 0x20
	unsigned int uiAdc,uiAdcPred=0xffff,uiGyro;
	int iCorrection;
	char tcBuffOut[32];
	tPeriodicTimer *tTImer1;

	DBGU_PutString("debug\n");
  1023d8:	e59f00b4 	ldr	r0, [pc, #180]	; 102494 <.text+0x2494>
  1023dc:	ebffffb2 	bl	1022ac <DBGU_PutString>

	tTImer1 = ptFlibTimer_NewPeriodicTimer(1000);
  1023e0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
  1023e4:	ebfff8c8 	bl	10070c <ptFlibTimer_NewPeriodicTimer>
  1023e8:	e1a07000 	mov	r7, r0
  1023ec:	e3a03801 	mov	r3, #65536	; 0x10000
  1023f0:	e2434001 	sub	r4, r3, #1	; 0x1
  1023f4:	e3e06b9f 	mvn	r6, #162816	; 0x27c00
  1023f8:	e2433c01 	sub	r3, r3, #256	; 0x100
  1023fc:	e283a0f0 	add	sl, r3, #240	; 0xf0
  102400:	e3e08bcf 	mvn	r8, #211968	; 0x33c00
  102404:	e2488c03 	sub	r8, r8, #768	; 0x300
static __inline void AT91F_ADC_StartConversion (
	AT91PS_ADC pADC // pointer to a ADC controller
	)
{
	pADC->ADC_CR = AT91C_ADC_START;	
  102408:	e3a03002 	mov	r3, #2	; 0x2
  10240c:	e50633ff 	str	r3, [r6, #-1023]
  102410:	e51633e3 	ldr	r3, [r6, #-995]
	while(1)
	{
		AT91F_ADC_StartConversion((AT91PS_ADC)AT91C_BASE_ADC);
		if(AT91F_ADC_GetStatus((AT91PS_ADC)AT91C_BASE_ADC)&(AT91C_ADC_EOC4|AT91C_ADC_EOC7))
  102414:	e3130090 	tst	r3, #144	; 0x90
  102418:	0a000016 	beq	102478 <vFappTest+0xa8>
static __inline unsigned int AT91F_ADC_GetConvertedDataCH4 (
	AT91PS_ADC pADC // pointer to a ADC controller
	)
{
	return pADC->ADC_CDR4;	
  10241c:	e51653bf 	ldr	r5, [r6, #-959]
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_ADC_GetConvertedDataCH5
//* \brief Return the Channel 5 Converted Data
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_ADC_GetConvertedDataCH5 (
	AT91PS_ADC pADC // pointer to a ADC controller
	)
{
	return pADC->ADC_CDR5;	
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_ADC_GetConvertedDataCH6
//* \brief Return the Channel 6 Converted Data
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_ADC_GetConvertedDataCH6 (
	AT91PS_ADC pADC // pointer to a ADC controller
	)
{
	return pADC->ADC_CDR6;	
}

//*----------------------------------------------------------------------------
//* \fn    AT91F_ADC_GetConvertedDataCH7
//* \brief Return the Channel 7 Converted Data
//*----------------------------------------------------------------------------
static __inline unsigned int AT91F_ADC_GetConvertedDataCH7 (
	AT91PS_ADC pADC // pointer to a ADC controller
	)
{
	return pADC->ADC_CDR7;	
  102420:	e516c3b3 	ldr	ip, [r6, #-947]
		{

			uiAdc=AT91F_ADC_GetConvertedDataCH4((AT91PS_ADC)AT91C_BASE_ADC);
			uiGyro=AT91F_ADC_GetConvertedDataCH7((AT91PS_ADC)AT91C_BASE_ADC);
			// Initialize the Update register write only
			if ( (uiAdc&0xfff0) != (uiAdcPred&0xfff0) )
  102424:	e005200a 	and	r2, r5, sl
  102428:	e004300a 	and	r3, r4, sl
  10242c:	e1520003 	cmp	r2, r3
  102430:	0a000010 	beq	102478 <vFappTest+0xa8>
			{
				uiAdcPred = uiAdc;
				iCorrection = 512 - uiAdc;
  102434:	e2653c02 	rsb	r3, r5, #512	; 0x200
				iCorrection /=4;
  102438:	e2832003 	add	r2, r3, #3	; 0x3
  10243c:	e3530000 	cmp	r3, #0	; 0x0
  102440:	b1a03002 	movlt	r3, r2
  102444:	e1a03143 	mov	r3, r3, asr #2
				AT91F_PWMC_UpdateChannel( AT91C_BASE_PWMC , 0 , (unsigned int)((int)512-iCorrection));
  102448:	e2632c02 	rsb	r2, r3, #512	; 0x200
        AT91PS_PWMC pPWM,   // \arg  pointer to a PWM controller
        unsigned int channelId, // \arg PWM channel ID
        unsigned int update) // \arg  Channels IDs to be enabled
{
	pPWM->PWMC_CH[channelId].PWMC_CUPDR = update;
  10244c:	e5882111 	str	r2, [r8, #273]
				AT91F_PWMC_UpdateChannel( AT91C_BASE_PWMC , 1 , (unsigned int)((int)512+iCorrection));
  102450:	e2833c02 	add	r3, r3, #512	; 0x200
        AT91PS_PWMC pPWM,   // \arg  pointer to a PWM controller
        unsigned int channelId, // \arg PWM channel ID
        unsigned int update) // \arg  Channels IDs to be enabled
{
	pPWM->PWMC_CH[channelId].PWMC_CUPDR = update;
  102454:	e5883131 	str	r3, [r8, #305]
				sprintf(tcBuffOut,"Dac Value: 0x%X 0x%X\n",uiAdc,uiGyro);
  102458:	e1a0000d 	mov	r0, sp
  10245c:	e59f1034 	ldr	r1, [pc, #52]	; 102498 <.text+0x2498>
  102460:	e1a02005 	mov	r2, r5
  102464:	e1a0300c 	mov	r3, ip
  102468:	eb00040b 	bl	10349c <sprintf>
				DBGU_PutString(tcBuffOut);
  10246c:	e1a0000d 	mov	r0, sp
  102470:	ebffff8d 	bl	1022ac <DBGU_PutString>
  102474:	e1a04005 	mov	r4, r5
			}
		}
		if( vFlibTimer_GetCount(tTImer1))
  102478:	e1a00007 	mov	r0, r7
  10247c:	ebfff8cb 	bl	1007b0 <vFlibTimer_GetCount>
  102480:	e3500000 	cmp	r0, #0	; 0x0
  102484:	0affffdf 	beq	102408 <vFappTest+0x38>
		{
			DBGU_PutString("TicTac\n");
  102488:	e59f000c 	ldr	r0, [pc, #12]	; 10249c <.text+0x249c>
  10248c:	ebffff86 	bl	1022ac <DBGU_PutString>
  102490:	eaffffdc 	b	102408 <vFappTest+0x38>
  102494:	0010a6ec 	andeqs	sl, r0, ip, ror #13
  102498:	0010a6f4 	ldreqsh	sl, [r0], -r4
  10249c:	0010a70c 	andeqs	sl, r0, ip, lsl #14

001024a0 <vFappManager_Main>:
	//vFappIpStack_Init();
}

void vFappManager_Main( void)
{
  1024a0:	e52de004 	str	lr, [sp, #-4]!
	vFappTest();
  1024a4:	ebffffc9 	bl	1023d0 <vFappTest>
	//vFappIpStack();
}
  1024a8:	e49df004 	ldr	pc, [sp], #4

001024ac <vFappManager_Init>:
  1024ac:	e52de004 	str	lr, [sp, #-4]!
  1024b0:	ebffffbb 	bl	1023a4 <vFappTest_init>
  1024b4:	e49df004 	ldr	pc, [sp], #4

001024b8 <__aeabi_uidiv>:
  1024b8:	e2512001 	subs	r2, r1, #1	; 0x1
  1024bc:	012fff1e 	bxeq	lr
  1024c0:	3a000036 	bcc	1025a0 <__aeabi_uidiv+0xe8>
  1024c4:	e1500001 	cmp	r0, r1
  1024c8:	9a000022 	bls	102558 <__aeabi_uidiv+0xa0>
  1024cc:	e1110002 	tst	r1, r2
  1024d0:	0a000023 	beq	102564 <__aeabi_uidiv+0xac>
  1024d4:	e311020e 	tst	r1, #-536870912	; 0xe0000000
  1024d8:	01a01181 	moveq	r1, r1, lsl #3
  1024dc:	03a03008 	moveq	r3, #8	; 0x8
  1024e0:	13a03001 	movne	r3, #1	; 0x1
  1024e4:	e3510201 	cmp	r1, #268435456	; 0x10000000
  1024e8:	31510000 	cmpcc	r1, r0
  1024ec:	31a01201 	movcc	r1, r1, lsl #4
  1024f0:	31a03203 	movcc	r3, r3, lsl #4
  1024f4:	3afffffa 	bcc	1024e4 <__aeabi_uidiv+0x2c>
  1024f8:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
  1024fc:	31510000 	cmpcc	r1, r0
  102500:	31a01081 	movcc	r1, r1, lsl #1
  102504:	31a03083 	movcc	r3, r3, lsl #1
  102508:	3afffffa 	bcc	1024f8 <__aeabi_uidiv+0x40>
  10250c:	e3a02000 	mov	r2, #0	; 0x0
  102510:	e1500001 	cmp	r0, r1
  102514:	20400001 	subcs	r0, r0, r1
  102518:	21822003 	orrcs	r2, r2, r3
  10251c:	e15000a1 	cmp	r0, r1, lsr #1
  102520:	204000a1 	subcs	r0, r0, r1, lsr #1
  102524:	218220a3 	orrcs	r2, r2, r3, lsr #1
  102528:	e1500121 	cmp	r0, r1, lsr #2
  10252c:	20400121 	subcs	r0, r0, r1, lsr #2
  102530:	21822123 	orrcs	r2, r2, r3, lsr #2
  102534:	e15001a1 	cmp	r0, r1, lsr #3
  102538:	204001a1 	subcs	r0, r0, r1, lsr #3
  10253c:	218221a3 	orrcs	r2, r2, r3, lsr #3
  102540:	e3500000 	cmp	r0, #0	; 0x0
  102544:	11b03223 	movnes	r3, r3, lsr #4
  102548:	11a01221 	movne	r1, r1, lsr #4
  10254c:	1affffef 	bne	102510 <__aeabi_uidiv+0x58>
  102550:	e1a00002 	mov	r0, r2
  102554:	e12fff1e 	bx	lr
  102558:	03a00001 	moveq	r0, #1	; 0x1
  10255c:	13a00000 	movne	r0, #0	; 0x0
  102560:	e12fff1e 	bx	lr
  102564:	e3510801 	cmp	r1, #65536	; 0x10000
  102568:	21a01821 	movcs	r1, r1, lsr #16
  10256c:	23a02010 	movcs	r2, #16	; 0x10
  102570:	33a02000 	movcc	r2, #0	; 0x0
  102574:	e3510c01 	cmp	r1, #256	; 0x100
  102578:	21a01421 	movcs	r1, r1, lsr #8
  10257c:	22822008 	addcs	r2, r2, #8	; 0x8
  102580:	e3510010 	cmp	r1, #16	; 0x10
  102584:	21a01221 	movcs	r1, r1, lsr #4
  102588:	22822004 	addcs	r2, r2, #4	; 0x4
  10258c:	e3510004 	cmp	r1, #4	; 0x4
  102590:	82822003 	addhi	r2, r2, #3	; 0x3
  102594:	908220a1 	addls	r2, r2, r1, lsr #1
  102598:	e1a00230 	mov	r0, r0, lsr r2
  10259c:	e12fff1e 	bx	lr
  1025a0:	e52de008 	str	lr, [sp, #-8]!
  1025a4:	eb000007 	bl	1025c8 <__aeabi_idiv0>
  1025a8:	e3a00000 	mov	r0, #0	; 0x0
  1025ac:	e49df008 	ldr	pc, [sp], #8

001025b0 <__aeabi_uidivmod>:
  1025b0:	e92d4003 	stmdb	sp!, {r0, r1, lr}
  1025b4:	ebffffbf 	bl	1024b8 <__aeabi_uidiv>
  1025b8:	e8bd4006 	ldmia	sp!, {r1, r2, lr}
  1025bc:	e0030092 	mul	r3, r2, r0
  1025c0:	e0411003 	sub	r1, r1, r3
  1025c4:	e12fff1e 	bx	lr

001025c8 <__aeabi_idiv0>:
  1025c8:	e12fff1e 	bx	lr

001025cc <atexit>:
  1025cc:	e1a01000 	mov	r1, r0
  1025d0:	e3a00000 	mov	r0, #0	; 0x0
  1025d4:	e1a02000 	mov	r2, r0
  1025d8:	e1a03000 	mov	r3, r0
  1025dc:	ea000f72 	b	1063ac <__register_exitproc>

001025e0 <exit>:
  1025e0:	e3a01000 	mov	r1, #0	; 0x0
  1025e4:	e1a04000 	mov	r4, r0
  1025e8:	eb000fa7 	bl	10648c <__call_exitprocs>
  1025ec:	e59f3018 	ldr	r3, [pc, #24]	; 10260c <.text+0x260c>
  1025f0:	e5930000 	ldr	r0, [r3]
  1025f4:	e590203c 	ldr	r2, [r0, #60]
  1025f8:	e3520000 	cmp	r2, #0	; 0x0
  1025fc:	11a0e00f 	movne	lr, pc
  102600:	112fff12 	bxne	r2
  102604:	e1a00004 	mov	r0, r4
  102608:	eb0005b8 	bl	103cf0 <_exit>
  10260c:	0010a714 	andeqs	sl, r0, r4, lsl r7

00102610 <free>:
  102610:	e59f3008 	ldr	r3, [pc, #8]	; 102620 <.text+0x2620>
  102614:	e1a01000 	mov	r1, r0
  102618:	e5930000 	ldr	r0, [r3]
  10261c:	ea001697 	b	108080 <_free_r>
  102620:	00200184 	eoreq	r0, r0, r4, lsl #3

00102624 <malloc>:
  102624:	e59f3008 	ldr	r3, [pc, #8]	; 102634 <.text+0x2634>
  102628:	e1a01000 	mov	r1, r0
  10262c:	e5930000 	ldr	r0, [r3]
  102630:	ea000000 	b	102638 <_malloc_r>
  102634:	00200184 	eoreq	r0, r0, r4, lsl #3

00102638 <_malloc_r>:
  102638:	e281300b 	add	r3, r1, #11	; 0xb
  10263c:	e3530016 	cmp	r3, #22	; 0x16
  102640:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  102644:	83c35007 	bichi	r5, r3, #7	; 0x7
  102648:	93a05010 	movls	r5, #16	; 0x10
  10264c:	93a03000 	movls	r3, #0	; 0x0
  102650:	81a03fa5 	movhi	r3, r5, lsr #31
  102654:	e1550001 	cmp	r5, r1
  102658:	33833001 	orrcc	r3, r3, #1	; 0x1
  10265c:	e3530000 	cmp	r3, #0	; 0x0
  102660:	e1a07000 	mov	r7, r0
  102664:	13a0300c 	movne	r3, #12	; 0xc
  102668:	e24dd004 	sub	sp, sp, #4	; 0x4
  10266c:	13a00000 	movne	r0, #0	; 0x0
  102670:	15873000 	strne	r3, [r7]
  102674:	1a000017 	bne	1026d8 <_malloc_r+0xa0>
  102678:	e1a00007 	mov	r0, r7
  10267c:	eb0001ef 	bl	102e40 <__malloc_lock>
  102680:	e3550f7e 	cmp	r5, #504	; 0x1f8
  102684:	2a000015 	bcs	1026e0 <_malloc_r+0xa8>
  102688:	e59f86fc 	ldr	r8, [pc, #1788]	; 102d8c <.text+0x2d8c>
  10268c:	e1a021a5 	mov	r2, r5, lsr #3
  102690:	e0883182 	add	r3, r8, r2, lsl #3
  102694:	e593400c 	ldr	r4, [r3, #12]
  102698:	e1530004 	cmp	r3, r4
  10269c:	e1a0a008 	mov	sl, r8
  1026a0:	0a0000cd 	beq	1029dc <_malloc_r+0x3a4>
  1026a4:	e5943004 	ldr	r3, [r4, #4]
  1026a8:	e3c33003 	bic	r3, r3, #3	; 0x3
  1026ac:	e0843003 	add	r3, r4, r3
  1026b0:	e5932004 	ldr	r2, [r3, #4]
  1026b4:	e594000c 	ldr	r0, [r4, #12]
  1026b8:	e5941008 	ldr	r1, [r4, #8]
  1026bc:	e3822001 	orr	r2, r2, #1	; 0x1
  1026c0:	e5801008 	str	r1, [r0, #8]
  1026c4:	e581000c 	str	r0, [r1, #12]
  1026c8:	e5832004 	str	r2, [r3, #4]
  1026cc:	e1a00007 	mov	r0, r7
  1026d0:	eb0001db 	bl	102e44 <__malloc_unlock>
  1026d4:	e2840008 	add	r0, r4, #8	; 0x8
  1026d8:	e28dd004 	add	sp, sp, #4	; 0x4
  1026dc:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  1026e0:	e1b024a5 	movs	r2, r5, lsr #9
  1026e4:	01a001a5 	moveq	r0, r5, lsr #3
  1026e8:	01a03180 	moveq	r3, r0, lsl #3
  1026ec:	1a000027 	bne	102790 <_malloc_r+0x158>
  1026f0:	e59f8694 	ldr	r8, [pc, #1684]	; 102d8c <.text+0x2d8c>
  1026f4:	e0831008 	add	r1, r3, r8
  1026f8:	e591400c 	ldr	r4, [r1, #12]
  1026fc:	e1510004 	cmp	r1, r4
  102700:	e1a0a008 	mov	sl, r8
  102704:	1a000005 	bne	102720 <_malloc_r+0xe8>
  102708:	ea00000a 	b	102738 <_malloc_r+0x100>
  10270c:	e3520000 	cmp	r2, #0	; 0x0
  102710:	aa000047 	bge	102834 <_malloc_r+0x1fc>
  102714:	e594400c 	ldr	r4, [r4, #12]
  102718:	e1510004 	cmp	r1, r4
  10271c:	0a000005 	beq	102738 <_malloc_r+0x100>
  102720:	e5943004 	ldr	r3, [r4, #4]
  102724:	e3c33003 	bic	r3, r3, #3	; 0x3
  102728:	e0652003 	rsb	r2, r5, r3
  10272c:	e352000f 	cmp	r2, #15	; 0xf
  102730:	dafffff5 	ble	10270c <_malloc_r+0xd4>
  102734:	e2400001 	sub	r0, r0, #1	; 0x1
  102738:	e280e001 	add	lr, r0, #1	; 0x1
  10273c:	e59f664c 	ldr	r6, [pc, #1612]	; 102d90 <.text+0x2d90>
  102740:	e5964008 	ldr	r4, [r6, #8]
  102744:	e1560004 	cmp	r6, r4
  102748:	0a000076 	beq	102928 <_malloc_r+0x2f0>
  10274c:	e5943004 	ldr	r3, [r4, #4]
  102750:	e3c32003 	bic	r2, r3, #3	; 0x3
  102754:	e0650002 	rsb	r0, r5, r2
  102758:	e350000f 	cmp	r0, #15	; 0xf
  10275c:	ca000027 	bgt	102800 <_malloc_r+0x1c8>
  102760:	e3500000 	cmp	r0, #0	; 0x0
  102764:	e586600c 	str	r6, [r6, #12]
  102768:	e5866008 	str	r6, [r6, #8]
  10276c:	ba00003c 	blt	102864 <_malloc_r+0x22c>
  102770:	e0842002 	add	r2, r4, r2
  102774:	e5923004 	ldr	r3, [r2, #4]
  102778:	e3833001 	orr	r3, r3, #1	; 0x1
  10277c:	e1a00007 	mov	r0, r7
  102780:	e5823004 	str	r3, [r2, #4]
  102784:	eb0001ae 	bl	102e44 <__malloc_unlock>
  102788:	e2840008 	add	r0, r4, #8	; 0x8
  10278c:	eaffffd1 	b	1026d8 <_malloc_r+0xa0>
  102790:	e3520004 	cmp	r2, #4	; 0x4
  102794:	91a03325 	movls	r3, r5, lsr #6
  102798:	92830038 	addls	r0, r3, #56	; 0x38
  10279c:	91a03180 	movls	r3, r0, lsl #3
  1027a0:	9affffd2 	bls	1026f0 <_malloc_r+0xb8>
  1027a4:	e3520014 	cmp	r2, #20	; 0x14
  1027a8:	9282005b 	addls	r0, r2, #91	; 0x5b
  1027ac:	91a03180 	movls	r3, r0, lsl #3
  1027b0:	9affffce 	bls	1026f0 <_malloc_r+0xb8>
  1027b4:	e3520054 	cmp	r2, #84	; 0x54
  1027b8:	91a03625 	movls	r3, r5, lsr #12
  1027bc:	9283006e 	addls	r0, r3, #110	; 0x6e
  1027c0:	91a03180 	movls	r3, r0, lsl #3
  1027c4:	9affffc9 	bls	1026f0 <_malloc_r+0xb8>
  1027c8:	e3520f55 	cmp	r2, #340	; 0x154
  1027cc:	91a037a5 	movls	r3, r5, lsr #15
  1027d0:	92830077 	addls	r0, r3, #119	; 0x77
  1027d4:	91a03180 	movls	r3, r0, lsl #3
  1027d8:	9affffc4 	bls	1026f0 <_malloc_r+0xb8>
  1027dc:	e3a03e55 	mov	r3, #1360	; 0x550
  1027e0:	e2833004 	add	r3, r3, #4	; 0x4
  1027e4:	e1520003 	cmp	r2, r3
  1027e8:	91a03925 	movls	r3, r5, lsr #18
  1027ec:	9283007c 	addls	r0, r3, #124	; 0x7c
  1027f0:	83a0007e 	movhi	r0, #126	; 0x7e
  1027f4:	82433f59 	subhi	r3, r3, #356	; 0x164
  1027f8:	91a03180 	movls	r3, r0, lsl #3
  1027fc:	eaffffbb 	b	1026f0 <_malloc_r+0xb8>
  102800:	e0842005 	add	r2, r4, r5
  102804:	e3801001 	orr	r1, r0, #1	; 0x1
  102808:	e3853001 	orr	r3, r5, #1	; 0x1
  10280c:	e7820000 	str	r0, [r2, r0]
  102810:	e5843004 	str	r3, [r4, #4]
  102814:	e586200c 	str	r2, [r6, #12]
  102818:	e5862008 	str	r2, [r6, #8]
  10281c:	e1a00007 	mov	r0, r7
  102820:	e9820042 	stmib	r2, {r1, r6}
  102824:	e582600c 	str	r6, [r2, #12]
  102828:	eb000185 	bl	102e44 <__malloc_unlock>
  10282c:	e2840008 	add	r0, r4, #8	; 0x8
  102830:	eaffffa8 	b	1026d8 <_malloc_r+0xa0>
  102834:	e0840003 	add	r0, r4, r3
  102838:	e5903004 	ldr	r3, [r0, #4]
  10283c:	e594100c 	ldr	r1, [r4, #12]
  102840:	e5942008 	ldr	r2, [r4, #8]
  102844:	e3833001 	orr	r3, r3, #1	; 0x1
  102848:	e5803004 	str	r3, [r0, #4]
  10284c:	e5812008 	str	r2, [r1, #8]
  102850:	e1a00007 	mov	r0, r7
  102854:	e582100c 	str	r1, [r2, #12]
  102858:	eb000179 	bl	102e44 <__malloc_unlock>
  10285c:	e2840008 	add	r0, r4, #8	; 0x8
  102860:	eaffff9c 	b	1026d8 <_malloc_r+0xa0>
  102864:	e3520c02 	cmp	r2, #512	; 0x200
  102868:	3a0000a0 	bcc	102af0 <_malloc_r+0x4b8>
  10286c:	e1b014a2 	movs	r1, r2, lsr #9
  102870:	01a011a2 	moveq	r1, r2, lsr #3
  102874:	01a03181 	moveq	r3, r1, lsl #3
  102878:	0a00001a 	beq	1028e8 <_malloc_r+0x2b0>
  10287c:	e3510004 	cmp	r1, #4	; 0x4
  102880:	91a03322 	movls	r3, r2, lsr #6
  102884:	92831038 	addls	r1, r3, #56	; 0x38
  102888:	91a03181 	movls	r3, r1, lsl #3
  10288c:	9a000015 	bls	1028e8 <_malloc_r+0x2b0>
  102890:	e3510014 	cmp	r1, #20	; 0x14
  102894:	9281105b 	addls	r1, r1, #91	; 0x5b
  102898:	91a03181 	movls	r3, r1, lsl #3
  10289c:	9a000011 	bls	1028e8 <_malloc_r+0x2b0>
  1028a0:	e3510054 	cmp	r1, #84	; 0x54
  1028a4:	91a03622 	movls	r3, r2, lsr #12
  1028a8:	9283106e 	addls	r1, r3, #110	; 0x6e
  1028ac:	91a03181 	movls	r3, r1, lsl #3
  1028b0:	9a00000c 	bls	1028e8 <_malloc_r+0x2b0>
  1028b4:	e3510f55 	cmp	r1, #340	; 0x154
  1028b8:	91a037a2 	movls	r3, r2, lsr #15
  1028bc:	92831077 	addls	r1, r3, #119	; 0x77
  1028c0:	91a03181 	movls	r3, r1, lsl #3
  1028c4:	9a000007 	bls	1028e8 <_malloc_r+0x2b0>
  1028c8:	e3a03e55 	mov	r3, #1360	; 0x550
  1028cc:	e2833004 	add	r3, r3, #4	; 0x4
  1028d0:	e1510003 	cmp	r1, r3
  1028d4:	91a03922 	movls	r3, r2, lsr #18
  1028d8:	9283107c 	addls	r1, r3, #124	; 0x7c
  1028dc:	83a0107e 	movhi	r1, #126	; 0x7e
  1028e0:	82433f59 	subhi	r3, r3, #356	; 0x164
  1028e4:	91a03181 	movls	r3, r1, lsl #3
  1028e8:	e088c003 	add	ip, r8, r3
  1028ec:	e59c0008 	ldr	r0, [ip, #8]
  1028f0:	e15c0000 	cmp	ip, r0
  1028f4:	0a0000eb 	beq	102ca8 <_malloc_r+0x670>
  1028f8:	e5903004 	ldr	r3, [r0, #4]
  1028fc:	e3c33003 	bic	r3, r3, #3	; 0x3
  102900:	e1520003 	cmp	r2, r3
  102904:	2a000002 	bcs	102914 <_malloc_r+0x2dc>
  102908:	e5900008 	ldr	r0, [r0, #8]
  10290c:	e15c0000 	cmp	ip, r0
  102910:	1afffff8 	bne	1028f8 <_malloc_r+0x2c0>
  102914:	e590c00c 	ldr	ip, [r0, #12]
  102918:	e584c00c 	str	ip, [r4, #12]
  10291c:	e5840008 	str	r0, [r4, #8]
  102920:	e580400c 	str	r4, [r0, #12]
  102924:	e58c4008 	str	r4, [ip, #8]
  102928:	e59a0004 	ldr	r0, [sl, #4]
  10292c:	e35e0000 	cmp	lr, #0	; 0x0
  102930:	e28e3003 	add	r3, lr, #3	; 0x3
  102934:	a1a0300e 	movge	r3, lr
  102938:	e1a03143 	mov	r3, r3, asr #2
  10293c:	e3a02001 	mov	r2, #1	; 0x1
  102940:	e1a02312 	mov	r2, r2, lsl r3
  102944:	e1520000 	cmp	r2, r0
  102948:	8a000029 	bhi	1029f4 <_malloc_r+0x3bc>
  10294c:	e1120000 	tst	r2, r0
  102950:	0a000073 	beq	102b24 <_malloc_r+0x4ec>
  102954:	e088918e 	add	r9, r8, lr, lsl #3
  102958:	e1a0a00e 	mov	sl, lr
  10295c:	e1a01009 	mov	r1, r9
  102960:	e591400c 	ldr	r4, [r1, #12]
  102964:	e1510004 	cmp	r1, r4
  102968:	1a000005 	bne	102984 <_malloc_r+0x34c>
  10296c:	ea000076 	b	102b4c <_malloc_r+0x514>
  102970:	e35c0000 	cmp	ip, #0	; 0x0
  102974:	aa000079 	bge	102b60 <_malloc_r+0x528>
  102978:	e594400c 	ldr	r4, [r4, #12]
  10297c:	e1510004 	cmp	r1, r4
  102980:	0a000071 	beq	102b4c <_malloc_r+0x514>
  102984:	e5943004 	ldr	r3, [r4, #4]
  102988:	e3c33003 	bic	r3, r3, #3	; 0x3
  10298c:	e065c003 	rsb	ip, r5, r3
  102990:	e35c000f 	cmp	ip, #15	; 0xf
  102994:	dafffff5 	ble	102970 <_malloc_r+0x338>
  102998:	e3853001 	orr	r3, r5, #1	; 0x1
  10299c:	e0842005 	add	r2, r4, r5
  1029a0:	e594000c 	ldr	r0, [r4, #12]
  1029a4:	e5843004 	str	r3, [r4, #4]
  1029a8:	e5b41008 	ldr	r1, [r4, #8]!
  1029ac:	e38c3001 	orr	r3, ip, #1	; 0x1
  1029b0:	e5801008 	str	r1, [r0, #8]
  1029b4:	e581000c 	str	r0, [r1, #12]
  1029b8:	e5862008 	str	r2, [r6, #8]
  1029bc:	e586200c 	str	r2, [r6, #12]
  1029c0:	e1a00007 	mov	r0, r7
  1029c4:	e782c00c 	str	ip, [r2, ip]
  1029c8:	e9820048 	stmib	r2, {r3, r6}
  1029cc:	e582600c 	str	r6, [r2, #12]
  1029d0:	eb00011b 	bl	102e44 <__malloc_unlock>
  1029d4:	e1a00004 	mov	r0, r4
  1029d8:	eaffff3e 	b	1026d8 <_malloc_r+0xa0>
  1029dc:	e2843008 	add	r3, r4, #8	; 0x8
  1029e0:	e593400c 	ldr	r4, [r3, #12]
  1029e4:	e1530004 	cmp	r3, r4
  1029e8:	1affff2d 	bne	1026a4 <_malloc_r+0x6c>
  1029ec:	e282e002 	add	lr, r2, #2	; 0x2
  1029f0:	eaffff51 	b	10273c <_malloc_r+0x104>
  1029f4:	e59f2390 	ldr	r2, [pc, #912]	; 102d8c <.text+0x2d8c>
  1029f8:	e5924008 	ldr	r4, [r2, #8]
  1029fc:	e5943004 	ldr	r3, [r4, #4]
  102a00:	e3c38003 	bic	r8, r3, #3	; 0x3
  102a04:	e0650008 	rsb	r0, r5, r8
  102a08:	e350000f 	cmp	r0, #15	; 0xf
  102a0c:	c3a03000 	movgt	r3, #0	; 0x0
  102a10:	d3a03001 	movle	r3, #1	; 0x1
  102a14:	e1550008 	cmp	r5, r8
  102a18:	83833001 	orrhi	r3, r3, #1	; 0x1
  102a1c:	e3530000 	cmp	r3, #0	; 0x0
  102a20:	e1a09004 	mov	r9, r4
  102a24:	0a000026 	beq	102ac4 <_malloc_r+0x48c>
  102a28:	e59f3364 	ldr	r3, [pc, #868]	; 102d94 <.text+0x2d94>
  102a2c:	e59fb364 	ldr	fp, [pc, #868]	; 102d98 <.text+0x2d98>
  102a30:	e5932000 	ldr	r2, [r3]
  102a34:	e59b1000 	ldr	r1, [fp]
  102a38:	e2822010 	add	r2, r2, #16	; 0x10
  102a3c:	e3710001 	cmn	r1, #1	; 0x1
  102a40:	e0856002 	add	r6, r5, r2
  102a44:	12863eff 	addne	r3, r6, #4080	; 0xff0
  102a48:	1283300f 	addne	r3, r3, #15	; 0xf
  102a4c:	13c36eff 	bicne	r6, r3, #4080	; 0xff0
  102a50:	13c6600f 	bicne	r6, r6, #15	; 0xf
  102a54:	e1a00007 	mov	r0, r7
  102a58:	e1a01006 	mov	r1, r6
  102a5c:	ebfff667 	bl	100400 <_sbrk_r>
  102a60:	e3700001 	cmn	r0, #1	; 0x1
  102a64:	0a00008c 	beq	102c9c <_malloc_r+0x664>
  102a68:	e0841008 	add	r1, r4, r8
  102a6c:	e1510000 	cmp	r1, r0
  102a70:	e1a0a000 	mov	sl, r0
  102a74:	9a000045 	bls	102b90 <_malloc_r+0x558>
  102a78:	e59f330c 	ldr	r3, [pc, #780]	; 102d8c <.text+0x2d8c>
  102a7c:	e1540003 	cmp	r4, r3
  102a80:	0a0000a5 	beq	102d1c <_malloc_r+0x6e4>
  102a84:	e59f3300 	ldr	r3, [pc, #768]	; 102d8c <.text+0x2d8c>
  102a88:	e5934008 	ldr	r4, [r3, #8]
  102a8c:	e5942004 	ldr	r2, [r4, #4]
  102a90:	e3c22003 	bic	r2, r2, #3	; 0x3
  102a94:	e0650002 	rsb	r0, r5, r2
  102a98:	e350000f 	cmp	r0, #15	; 0xf
  102a9c:	c3a03000 	movgt	r3, #0	; 0x0
  102aa0:	d3a03001 	movle	r3, #1	; 0x1
  102aa4:	e1550002 	cmp	r5, r2
  102aa8:	83833001 	orrhi	r3, r3, #1	; 0x1
  102aac:	e3530000 	cmp	r3, #0	; 0x0
  102ab0:	0a000003 	beq	102ac4 <_malloc_r+0x48c>
  102ab4:	e1a00007 	mov	r0, r7
  102ab8:	eb0000e1 	bl	102e44 <__malloc_unlock>
  102abc:	e3a00000 	mov	r0, #0	; 0x0
  102ac0:	eaffff04 	b	1026d8 <_malloc_r+0xa0>
  102ac4:	e0841005 	add	r1, r4, r5
  102ac8:	e3802001 	orr	r2, r0, #1	; 0x1
  102acc:	e3853001 	orr	r3, r5, #1	; 0x1
  102ad0:	e5843004 	str	r3, [r4, #4]
  102ad4:	e5812004 	str	r2, [r1, #4]
  102ad8:	e59f22ac 	ldr	r2, [pc, #684]	; 102d8c <.text+0x2d8c>
  102adc:	e1a00007 	mov	r0, r7
  102ae0:	e5821008 	str	r1, [r2, #8]
  102ae4:	eb0000d6 	bl	102e44 <__malloc_unlock>
  102ae8:	e2840008 	add	r0, r4, #8	; 0x8
  102aec:	eafffef9 	b	1026d8 <_malloc_r+0xa0>
  102af0:	e1a021a2 	mov	r2, r2, lsr #3
  102af4:	e59a0004 	ldr	r0, [sl, #4]
  102af8:	e1a01122 	mov	r1, r2, lsr #2
  102afc:	e3a03001 	mov	r3, #1	; 0x1
  102b00:	e1800113 	orr	r0, r0, r3, lsl r1
  102b04:	e0882182 	add	r2, r8, r2, lsl #3
  102b08:	e5923008 	ldr	r3, [r2, #8]
  102b0c:	e584200c 	str	r2, [r4, #12]
  102b10:	e5843008 	str	r3, [r4, #8]
  102b14:	e58a0004 	str	r0, [sl, #4]
  102b18:	e583400c 	str	r4, [r3, #12]
  102b1c:	e5824008 	str	r4, [r2, #8]
  102b20:	eaffff81 	b	10292c <_malloc_r+0x2f4>
  102b24:	e1a02082 	mov	r2, r2, lsl #1
  102b28:	e3ce3003 	bic	r3, lr, #3	; 0x3
  102b2c:	e1100002 	tst	r0, r2
  102b30:	e283e004 	add	lr, r3, #4	; 0x4
  102b34:	1affff86 	bne	102954 <_malloc_r+0x31c>
  102b38:	e1a02082 	mov	r2, r2, lsl #1
  102b3c:	e1100002 	tst	r0, r2
  102b40:	e28ee004 	add	lr, lr, #4	; 0x4
  102b44:	0afffffb 	beq	102b38 <_malloc_r+0x500>
  102b48:	eaffff81 	b	102954 <_malloc_r+0x31c>
  102b4c:	e28aa001 	add	sl, sl, #1	; 0x1
  102b50:	e31a0003 	tst	sl, #3	; 0x3
  102b54:	0a000059 	beq	102cc0 <_malloc_r+0x688>
  102b58:	e2811008 	add	r1, r1, #8	; 0x8
  102b5c:	eaffff7f 	b	102960 <_malloc_r+0x328>
  102b60:	e0841003 	add	r1, r4, r3
  102b64:	e5913004 	ldr	r3, [r1, #4]
  102b68:	e594000c 	ldr	r0, [r4, #12]
  102b6c:	e5b42008 	ldr	r2, [r4, #8]!
  102b70:	e3833001 	orr	r3, r3, #1	; 0x1
  102b74:	e5802008 	str	r2, [r0, #8]
  102b78:	e582000c 	str	r0, [r2, #12]
  102b7c:	e5813004 	str	r3, [r1, #4]
  102b80:	e1a00007 	mov	r0, r7
  102b84:	eb0000ae 	bl	102e44 <__malloc_unlock>
  102b88:	e1a00004 	mov	r0, r4
  102b8c:	eafffed1 	b	1026d8 <_malloc_r+0xa0>
  102b90:	e59fc204 	ldr	ip, [pc, #516]	; 102d9c <.text+0x2d9c>
  102b94:	e59c3000 	ldr	r3, [ip]
  102b98:	e0862003 	add	r2, r6, r3
  102b9c:	e58c2000 	str	r2, [ip]
  102ba0:	0a000062 	beq	102d30 <_malloc_r+0x6f8>
  102ba4:	e59b3000 	ldr	r3, [fp]
  102ba8:	e3730001 	cmn	r3, #1	; 0x1
  102bac:	10613000 	rsbne	r3, r1, r0
  102bb0:	059f31e0 	ldreq	r3, [pc, #480]	; 102d98 <.text+0x2d98>
  102bb4:	10823003 	addne	r3, r2, r3
  102bb8:	05830000 	streq	r0, [r3]
  102bbc:	158c3000 	strne	r3, [ip]
  102bc0:	e2103007 	ands	r3, r0, #7	; 0x7
  102bc4:	12631008 	rsbne	r1, r3, #8	; 0x8
  102bc8:	1080a001 	addne	sl, r0, r1
  102bcc:	01a01003 	moveq	r1, r3
  102bd0:	e08a3006 	add	r3, sl, r6
  102bd4:	e1a03a03 	mov	r3, r3, lsl #20
  102bd8:	e1a03a23 	mov	r3, r3, lsr #20
  102bdc:	e2633a01 	rsb	r3, r3, #4096	; 0x1000
  102be0:	e0814003 	add	r4, r1, r3
  102be4:	e1a01004 	mov	r1, r4
  102be8:	e1a00007 	mov	r0, r7
  102bec:	e58dc000 	str	ip, [sp]
  102bf0:	ebfff602 	bl	100400 <_sbrk_r>
  102bf4:	e3700001 	cmn	r0, #1	; 0x1
  102bf8:	106a3000 	rsbne	r3, sl, r0
  102bfc:	e59dc000 	ldr	ip, [sp]
  102c00:	10833004 	addne	r3, r3, r4
  102c04:	13830001 	orrne	r0, r3, #1	; 0x1
  102c08:	e59f217c 	ldr	r2, [pc, #380]	; 102d8c <.text+0x2d8c>
  102c0c:	e59c3000 	ldr	r3, [ip]
  102c10:	03a04000 	moveq	r4, #0	; 0x0
  102c14:	02800002 	addeq	r0, r0, #2	; 0x2
  102c18:	e0843003 	add	r3, r4, r3
  102c1c:	e1590002 	cmp	r9, r2
  102c20:	e1a0400a 	mov	r4, sl
  102c24:	e58c3000 	str	r3, [ip]
  102c28:	e58a0004 	str	r0, [sl, #4]
  102c2c:	e582a008 	str	sl, [r2, #8]
  102c30:	0a00000f 	beq	102c74 <_malloc_r+0x63c>
  102c34:	e358000f 	cmp	r8, #15	; 0xf
  102c38:	93a03001 	movls	r3, #1	; 0x1
  102c3c:	958a3004 	strls	r3, [sl, #4]
  102c40:	9affff91 	bls	102a8c <_malloc_r+0x454>
  102c44:	e5993004 	ldr	r3, [r9, #4]
  102c48:	e248200c 	sub	r2, r8, #12	; 0xc
  102c4c:	e3c22007 	bic	r2, r2, #7	; 0x7
  102c50:	e2033001 	and	r3, r3, #1	; 0x1
  102c54:	e1823003 	orr	r3, r2, r3
  102c58:	e3a01005 	mov	r1, #5	; 0x5
  102c5c:	e352000f 	cmp	r2, #15	; 0xf
  102c60:	e0892002 	add	r2, r9, r2
  102c64:	e5893004 	str	r3, [r9, #4]
  102c68:	e5821008 	str	r1, [r2, #8]
  102c6c:	e5821004 	str	r1, [r2, #4]
  102c70:	8a000038 	bhi	102d58 <_malloc_r+0x720>
  102c74:	e59f1124 	ldr	r1, [pc, #292]	; 102da0 <.text+0x2da0>
  102c78:	e59c2000 	ldr	r2, [ip]
  102c7c:	e5913000 	ldr	r3, [r1]
  102c80:	e1520003 	cmp	r2, r3
  102c84:	85812000 	strhi	r2, [r1]
  102c88:	e59f1114 	ldr	r1, [pc, #276]	; 102da4 <.text+0x2da4>
  102c8c:	e5913000 	ldr	r3, [r1]
  102c90:	e1520003 	cmp	r2, r3
  102c94:	85812000 	strhi	r2, [r1]
  102c98:	eaffff7b 	b	102a8c <_malloc_r+0x454>
  102c9c:	e59f20e8 	ldr	r2, [pc, #232]	; 102d8c <.text+0x2d8c>
  102ca0:	e5924008 	ldr	r4, [r2, #8]
  102ca4:	eaffff78 	b	102a8c <_malloc_r+0x454>
  102ca8:	e59a3004 	ldr	r3, [sl, #4]
  102cac:	e1a01121 	mov	r1, r1, lsr #2
  102cb0:	e3a02001 	mov	r2, #1	; 0x1
  102cb4:	e1833112 	orr	r3, r3, r2, lsl r1
  102cb8:	e58a3004 	str	r3, [sl, #4]
  102cbc:	eaffff15 	b	102918 <_malloc_r+0x2e0>
  102cc0:	e1a0c00e 	mov	ip, lr
  102cc4:	e1a01009 	mov	r1, r9
  102cc8:	e31c0003 	tst	ip, #3	; 0x3
  102ccc:	e2411008 	sub	r1, r1, #8	; 0x8
  102cd0:	e24cc001 	sub	ip, ip, #1	; 0x1
  102cd4:	0a000027 	beq	102d78 <_malloc_r+0x740>
  102cd8:	e5913008 	ldr	r3, [r1, #8]
  102cdc:	e1530001 	cmp	r3, r1
  102ce0:	0afffff8 	beq	102cc8 <_malloc_r+0x690>
  102ce4:	e1a02082 	mov	r2, r2, lsl #1
  102ce8:	e1520000 	cmp	r2, r0
  102cec:	8affff40 	bhi	1029f4 <_malloc_r+0x3bc>
  102cf0:	e3520000 	cmp	r2, #0	; 0x0
  102cf4:	0affff3e 	beq	1029f4 <_malloc_r+0x3bc>
  102cf8:	e1120000 	tst	r2, r0
  102cfc:	11a0e00a 	movne	lr, sl
  102d00:	1affff13 	bne	102954 <_malloc_r+0x31c>
  102d04:	e1a02082 	mov	r2, r2, lsl #1
  102d08:	e1100002 	tst	r0, r2
  102d0c:	e28aa004 	add	sl, sl, #4	; 0x4
  102d10:	0afffffb 	beq	102d04 <_malloc_r+0x6cc>
  102d14:	e1a0e00a 	mov	lr, sl
  102d18:	eaffff0d 	b	102954 <_malloc_r+0x31c>
  102d1c:	e59fc078 	ldr	ip, [pc, #120]	; 102d9c <.text+0x2d9c>
  102d20:	e59c3000 	ldr	r3, [ip]
  102d24:	e0862003 	add	r2, r6, r3
  102d28:	e58c2000 	str	r2, [ip]
  102d2c:	eaffff9c 	b	102ba4 <_malloc_r+0x56c>
  102d30:	e1a03a00 	mov	r3, r0, lsl #20
  102d34:	e1a03a23 	mov	r3, r3, lsr #20
  102d38:	e3530000 	cmp	r3, #0	; 0x0
  102d3c:	1affff98 	bne	102ba4 <_malloc_r+0x56c>
  102d40:	e59f2044 	ldr	r2, [pc, #68]	; 102d8c <.text+0x2d8c>
  102d44:	e0863008 	add	r3, r6, r8
  102d48:	e5924008 	ldr	r4, [r2, #8]
  102d4c:	e3833001 	orr	r3, r3, #1	; 0x1
  102d50:	e5843004 	str	r3, [r4, #4]
  102d54:	eaffffc6 	b	102c74 <_malloc_r+0x63c>
  102d58:	e2891008 	add	r1, r9, #8	; 0x8
  102d5c:	e1a00007 	mov	r0, r7
  102d60:	e58dc000 	str	ip, [sp]
  102d64:	eb0014c5 	bl	108080 <_free_r>
  102d68:	e59f301c 	ldr	r3, [pc, #28]	; 102d8c <.text+0x2d8c>
  102d6c:	e59dc000 	ldr	ip, [sp]
  102d70:	e5934008 	ldr	r4, [r3, #8]
  102d74:	eaffffbe 	b	102c74 <_malloc_r+0x63c>
  102d78:	e1e03002 	mvn	r3, r2
  102d7c:	e0000003 	and	r0, r0, r3
  102d80:	e59f3004 	ldr	r3, [pc, #4]	; 102d8c <.text+0x2d8c>
  102d84:	e5830004 	str	r0, [r3, #4]
  102d88:	eaffffd5 	b	102ce4 <_malloc_r+0x6ac>
  102d8c:	00200588 	eoreq	r0, r0, r8, lsl #11
  102d90:	00200590 	mlaeq	r0, r0, r5, r0
  102d94:	00200af8 	streqd	r0, [r0], -r8
  102d98:	00200994 	mlaeq	r0, r4, r9, r0
  102d9c:	00200b04 	eoreq	r0, r0, r4, lsl #22
  102da0:	00200afc 	streqd	r0, [r0], -ip
  102da4:	00200b00 	eoreq	r0, r0, r0, lsl #22

00102da8 <memset>:
  102da8:	e3520003 	cmp	r2, #3	; 0x3
  102dac:	e20110ff 	and	r1, r1, #255	; 0xff
  102db0:	e1a0c000 	mov	ip, r0
  102db4:	9a000001 	bls	102dc0 <memset+0x18>
  102db8:	e3100003 	tst	r0, #3	; 0x3
  102dbc:	0a000008 	beq	102de4 <memset+0x3c>
  102dc0:	e3520000 	cmp	r2, #0	; 0x0
  102dc4:	012fff1e 	bxeq	lr
  102dc8:	e20110ff 	and	r1, r1, #255	; 0xff
  102dcc:	e3a03000 	mov	r3, #0	; 0x0
  102dd0:	e7c3100c 	strb	r1, [r3, ip]
  102dd4:	e2833001 	add	r3, r3, #1	; 0x1
  102dd8:	e1530002 	cmp	r3, r2
  102ddc:	1afffffb 	bne	102dd0 <memset+0x28>
  102de0:	e12fff1e 	bx	lr
  102de4:	e1813401 	orr	r3, r1, r1, lsl #8
  102de8:	e352000f 	cmp	r2, #15	; 0xf
  102dec:	e183c803 	orr	ip, r3, r3, lsl #16
  102df0:	e1a03000 	mov	r3, r0
  102df4:	9a000009 	bls	102e20 <memset+0x78>
  102df8:	e2422010 	sub	r2, r2, #16	; 0x10
  102dfc:	e352000f 	cmp	r2, #15	; 0xf
  102e00:	e583c000 	str	ip, [r3]
  102e04:	e583c004 	str	ip, [r3, #4]
  102e08:	e583c008 	str	ip, [r3, #8]
  102e0c:	e583c00c 	str	ip, [r3, #12]
  102e10:	e2833010 	add	r3, r3, #16	; 0x10
  102e14:	8afffff7 	bhi	102df8 <memset+0x50>
  102e18:	e3520003 	cmp	r2, #3	; 0x3
  102e1c:	9a000003 	bls	102e30 <memset+0x88>
  102e20:	e2422004 	sub	r2, r2, #4	; 0x4
  102e24:	e3520003 	cmp	r2, #3	; 0x3
  102e28:	e483c004 	str	ip, [r3], #4
  102e2c:	8afffffb 	bhi	102e20 <memset+0x78>
  102e30:	e3520000 	cmp	r2, #0	; 0x0
  102e34:	e1a0c003 	mov	ip, r3
  102e38:	1affffe2 	bne	102dc8 <memset+0x20>
  102e3c:	e12fff1e 	bx	lr

00102e40 <__malloc_lock>:
  102e40:	e12fff1e 	bx	lr

00102e44 <__malloc_unlock>:
  102e44:	e12fff1e 	bx	lr

00102e48 <realloc>:
  102e48:	e1a02001 	mov	r2, r1
  102e4c:	e59f100c 	ldr	r1, [pc, #12]	; 102e60 <.text+0x2e60>
  102e50:	e1a03000 	mov	r3, r0
  102e54:	e5910000 	ldr	r0, [r1]
  102e58:	e1a01003 	mov	r1, r3
  102e5c:	ea000000 	b	102e64 <_realloc_r>
  102e60:	00200184 	eoreq	r0, r0, r4, lsl #3

00102e64 <_realloc_r>:
  102e64:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  102e68:	e251a000 	subs	sl, r1, #0	; 0x0
  102e6c:	e24dd00c 	sub	sp, sp, #12	; 0xc
  102e70:	e1a06002 	mov	r6, r2
  102e74:	e58d0000 	str	r0, [sp]
  102e78:	0a00008d 	beq	1030b4 <_realloc_r+0x250>
  102e7c:	ebffffef 	bl	102e40 <__malloc_lock>
  102e80:	e286300b 	add	r3, r6, #11	; 0xb
  102e84:	e3530016 	cmp	r3, #22	; 0x16
  102e88:	83c3e007 	bichi	lr, r3, #7	; 0x7
  102e8c:	93a0e010 	movls	lr, #16	; 0x10
  102e90:	958de004 	strls	lr, [sp, #4]
  102e94:	858de004 	strhi	lr, [sp, #4]
  102e98:	e59d0004 	ldr	r0, [sp, #4]
  102e9c:	93a03000 	movls	r3, #0	; 0x0
  102ea0:	81a03fae 	movhi	r3, lr, lsr #31
  102ea4:	e1500006 	cmp	r0, r6
  102ea8:	33833001 	orrcc	r3, r3, #1	; 0x1
  102eac:	e24a5008 	sub	r5, sl, #8	; 0x8
  102eb0:	e3530000 	cmp	r3, #0	; 0x0
  102eb4:	e5959004 	ldr	r9, [r5, #4]
  102eb8:	1a0000d0 	bne	103200 <_realloc_r+0x39c>
  102ebc:	e3c94003 	bic	r4, r9, #3	; 0x3
  102ec0:	e154000e 	cmp	r4, lr
  102ec4:	a1a08005 	movge	r8, r5
  102ec8:	a1a07004 	movge	r7, r4
  102ecc:	a1a0c008 	movge	ip, r8
  102ed0:	a2884008 	addge	r4, r8, #8	; 0x8
  102ed4:	aa00004a 	bge	103004 <_realloc_r+0x1a0>
  102ed8:	e59f25b8 	ldr	r2, [pc, #1464]	; 103498 <.text+0x3498>
  102edc:	e592b008 	ldr	fp, [r2, #8]
  102ee0:	e0850004 	add	r0, r5, r4
  102ee4:	e150000b 	cmp	r0, fp
  102ee8:	e1a08005 	mov	r8, r5
  102eec:	0a0000c8 	beq	103214 <_realloc_r+0x3b0>
  102ef0:	e5901004 	ldr	r1, [r0, #4]
  102ef4:	e3c13001 	bic	r3, r1, #1	; 0x1
  102ef8:	e0833000 	add	r3, r3, r0
  102efc:	e5932004 	ldr	r2, [r3, #4]
  102f00:	e3120001 	tst	r2, #1	; 0x1
  102f04:	0a00005f 	beq	103088 <_realloc_r+0x224>
  102f08:	e3a0c000 	mov	ip, #0	; 0x0
  102f0c:	e1a0000c 	mov	r0, ip
  102f10:	e3190001 	tst	r9, #1	; 0x1
  102f14:	1a00006a 	bne	1030c4 <_realloc_r+0x260>
  102f18:	e5953000 	ldr	r3, [r5]
  102f1c:	e0633005 	rsb	r3, r3, r5
  102f20:	e5932004 	ldr	r2, [r3, #4]
  102f24:	e3500000 	cmp	r0, #0	; 0x0
  102f28:	e58d3008 	str	r3, [sp, #8]
  102f2c:	e3c22003 	bic	r2, r2, #3	; 0x3
  102f30:	0a000083 	beq	103144 <_realloc_r+0x2e0>
  102f34:	e150000b 	cmp	r0, fp
  102f38:	0a0000f9 	beq	103324 <_realloc_r+0x4c0>
  102f3c:	e0849002 	add	r9, r4, r2
  102f40:	e08c7009 	add	r7, ip, r9
  102f44:	e157000e 	cmp	r7, lr
  102f48:	ba00007e 	blt	103148 <_realloc_r+0x2e4>
  102f4c:	e2802008 	add	r2, r0, #8	; 0x8
  102f50:	e892000c 	ldmia	r2, {r2, r3}
  102f54:	e5832008 	str	r2, [r3, #8]
  102f58:	e582300c 	str	r3, [r2, #12]
  102f5c:	e59d3008 	ldr	r3, [sp, #8]
  102f60:	e2444004 	sub	r4, r4, #4	; 0x4
  102f64:	e593200c 	ldr	r2, [r3, #12]
  102f68:	e59d8008 	ldr	r8, [sp, #8]
  102f6c:	e5933008 	ldr	r3, [r3, #8]
  102f70:	e3540024 	cmp	r4, #36	; 0x24
  102f74:	e5823008 	str	r3, [r2, #8]
  102f78:	e583200c 	str	r2, [r3, #12]
  102f7c:	e2885008 	add	r5, r8, #8	; 0x8
  102f80:	8a0000d4 	bhi	1032d8 <_realloc_r+0x474>
  102f84:	e3540013 	cmp	r4, #19	; 0x13
  102f88:	e1a0c00a 	mov	ip, sl
  102f8c:	e1a0e005 	mov	lr, r5
  102f90:	9a000011 	bls	102fdc <_realloc_r+0x178>
  102f94:	e1a0000a 	mov	r0, sl
  102f98:	e4903004 	ldr	r3, [r0], #4
  102f9c:	e5883008 	str	r3, [r8, #8]
  102fa0:	e59a2004 	ldr	r2, [sl, #4]
  102fa4:	e354001b 	cmp	r4, #27	; 0x1b
  102fa8:	e588200c 	str	r2, [r8, #12]
  102fac:	e288e010 	add	lr, r8, #16	; 0x10
  102fb0:	e280c004 	add	ip, r0, #4	; 0x4
  102fb4:	9a000008 	bls	102fdc <_realloc_r+0x178>
  102fb8:	e5903004 	ldr	r3, [r0, #4]
  102fbc:	e5883010 	str	r3, [r8, #16]
  102fc0:	e59c2004 	ldr	r2, [ip, #4]
  102fc4:	e28c3004 	add	r3, ip, #4	; 0x4
  102fc8:	e3540024 	cmp	r4, #36	; 0x24
  102fcc:	e5882014 	str	r2, [r8, #20]
  102fd0:	e288e018 	add	lr, r8, #24	; 0x18
  102fd4:	e283c004 	add	ip, r3, #4	; 0x4
  102fd8:	0a000119 	beq	103444 <_realloc_r+0x5e0>
  102fdc:	e1a0200c 	mov	r2, ip
  102fe0:	e4920004 	ldr	r0, [r2], #4
  102fe4:	e1a0100e 	mov	r1, lr
  102fe8:	e4810004 	str	r0, [r1], #4
  102fec:	e59c3004 	ldr	r3, [ip, #4]
  102ff0:	e58e3004 	str	r3, [lr, #4]
  102ff4:	e5920004 	ldr	r0, [r2, #4]
  102ff8:	e59dc008 	ldr	ip, [sp, #8]
  102ffc:	e5810004 	str	r0, [r1, #4]
  103000:	e1a04005 	mov	r4, r5
  103004:	e59d1004 	ldr	r1, [sp, #4]
  103008:	e0610007 	rsb	r0, r1, r7
  10300c:	e350000f 	cmp	r0, #15	; 0xf
  103010:	8a00000d 	bhi	10304c <_realloc_r+0x1e8>
  103014:	e59c3004 	ldr	r3, [ip, #4]
  103018:	e2033001 	and	r3, r3, #1	; 0x1
  10301c:	e1873003 	orr	r3, r7, r3
  103020:	e58c3004 	str	r3, [ip, #4]
  103024:	e0872008 	add	r2, r7, r8
  103028:	e5923004 	ldr	r3, [r2, #4]
  10302c:	e3833001 	orr	r3, r3, #1	; 0x1
  103030:	e5823004 	str	r3, [r2, #4]
  103034:	e59d0000 	ldr	r0, [sp]
  103038:	ebffff81 	bl	102e44 <__malloc_unlock>
  10303c:	e1a06004 	mov	r6, r4
  103040:	e1a00006 	mov	r0, r6
  103044:	e28dd00c 	add	sp, sp, #12	; 0xc
  103048:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  10304c:	e59c3004 	ldr	r3, [ip, #4]
  103050:	e2033001 	and	r3, r3, #1	; 0x1
  103054:	e1813003 	orr	r3, r1, r3
  103058:	e3802001 	orr	r2, r0, #1	; 0x1
  10305c:	e0811008 	add	r1, r1, r8
  103060:	e58c3004 	str	r3, [ip, #4]
  103064:	e5812004 	str	r2, [r1, #4]
  103068:	e0810000 	add	r0, r1, r0
  10306c:	e5903004 	ldr	r3, [r0, #4]
  103070:	e3833001 	orr	r3, r3, #1	; 0x1
  103074:	e5803004 	str	r3, [r0, #4]
  103078:	e2811008 	add	r1, r1, #8	; 0x8
  10307c:	e59d0000 	ldr	r0, [sp]
  103080:	eb0013fe 	bl	108080 <_free_r>
  103084:	eaffffea 	b	103034 <_realloc_r+0x1d0>
  103088:	e3c1c003 	bic	ip, r1, #3	; 0x3
  10308c:	e084700c 	add	r7, r4, ip
  103090:	e15e0007 	cmp	lr, r7
  103094:	caffff9d 	bgt	102f10 <_realloc_r+0xac>
  103098:	e2802008 	add	r2, r0, #8	; 0x8
  10309c:	e892000c 	ldmia	r2, {r2, r3}
  1030a0:	e1a0c005 	mov	ip, r5
  1030a4:	e2854008 	add	r4, r5, #8	; 0x8
  1030a8:	e5832008 	str	r2, [r3, #8]
  1030ac:	e582300c 	str	r3, [r2, #12]
  1030b0:	eaffffd3 	b	103004 <_realloc_r+0x1a0>
  1030b4:	e1a01002 	mov	r1, r2
  1030b8:	e28dd00c 	add	sp, sp, #12	; 0xc
  1030bc:	e8bd4ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  1030c0:	eafffd5c 	b	102638 <_malloc_r>
  1030c4:	e1a01006 	mov	r1, r6
  1030c8:	e59d0000 	ldr	r0, [sp]
  1030cc:	ebfffd59 	bl	102638 <_malloc_r>
  1030d0:	e2506000 	subs	r6, r0, #0	; 0x0
  1030d4:	0a000017 	beq	103138 <_realloc_r+0x2d4>
  1030d8:	e5953004 	ldr	r3, [r5, #4]
  1030dc:	e3c33001 	bic	r3, r3, #1	; 0x1
  1030e0:	e0853003 	add	r3, r5, r3
  1030e4:	e2462008 	sub	r2, r6, #8	; 0x8
  1030e8:	e1520003 	cmp	r2, r3
  1030ec:	0a0000c9 	beq	103418 <_realloc_r+0x5b4>
  1030f0:	e2441004 	sub	r1, r4, #4	; 0x4
  1030f4:	e3510024 	cmp	r1, #36	; 0x24
  1030f8:	8a000085 	bhi	103314 <_realloc_r+0x4b0>
  1030fc:	e3510013 	cmp	r1, #19	; 0x13
  103100:	e1a0c00a 	mov	ip, sl
  103104:	e1a0e006 	mov	lr, r6
  103108:	8a000057 	bhi	10326c <_realloc_r+0x408>
  10310c:	e1a0000c 	mov	r0, ip
  103110:	e4902004 	ldr	r2, [r0], #4
  103114:	e1a0100e 	mov	r1, lr
  103118:	e4812004 	str	r2, [r1], #4
  10311c:	e59c3004 	ldr	r3, [ip, #4]
  103120:	e58e3004 	str	r3, [lr, #4]
  103124:	e5902004 	ldr	r2, [r0, #4]
  103128:	e5812004 	str	r2, [r1, #4]
  10312c:	e1a0100a 	mov	r1, sl
  103130:	e59d0000 	ldr	r0, [sp]
  103134:	eb0013d1 	bl	108080 <_free_r>
  103138:	e59d0000 	ldr	r0, [sp]
  10313c:	ebffff40 	bl	102e44 <__malloc_unlock>
  103140:	eaffffbe 	b	103040 <_realloc_r+0x1dc>
  103144:	e0849002 	add	r9, r4, r2
  103148:	e159000e 	cmp	r9, lr
  10314c:	baffffdc 	blt	1030c4 <_realloc_r+0x260>
  103150:	e59d0008 	ldr	r0, [sp, #8]
  103154:	e2444004 	sub	r4, r4, #4	; 0x4
  103158:	e590200c 	ldr	r2, [r0, #12]
  10315c:	e5903008 	ldr	r3, [r0, #8]
  103160:	e3540024 	cmp	r4, #36	; 0x24
  103164:	e1a08000 	mov	r8, r0
  103168:	e5823008 	str	r3, [r2, #8]
  10316c:	e583200c 	str	r2, [r3, #12]
  103170:	e2805008 	add	r5, r0, #8	; 0x8
  103174:	8a00005e 	bhi	1032f4 <_realloc_r+0x490>
  103178:	e3540013 	cmp	r4, #19	; 0x13
  10317c:	e1a0c00a 	mov	ip, sl
  103180:	e1a0e005 	mov	lr, r5
  103184:	9a000011 	bls	1031d0 <_realloc_r+0x36c>
  103188:	e1a0000a 	mov	r0, sl
  10318c:	e4903004 	ldr	r3, [r0], #4
  103190:	e5883008 	str	r3, [r8, #8]
  103194:	e59a2004 	ldr	r2, [sl, #4]
  103198:	e354001b 	cmp	r4, #27	; 0x1b
  10319c:	e588200c 	str	r2, [r8, #12]
  1031a0:	e288e010 	add	lr, r8, #16	; 0x10
  1031a4:	e280c004 	add	ip, r0, #4	; 0x4
  1031a8:	9a000008 	bls	1031d0 <_realloc_r+0x36c>
  1031ac:	e5903004 	ldr	r3, [r0, #4]
  1031b0:	e5883010 	str	r3, [r8, #16]
  1031b4:	e59c2004 	ldr	r2, [ip, #4]
  1031b8:	e28c3004 	add	r3, ip, #4	; 0x4
  1031bc:	e3540024 	cmp	r4, #36	; 0x24
  1031c0:	e5882014 	str	r2, [r8, #20]
  1031c4:	e288e018 	add	lr, r8, #24	; 0x18
  1031c8:	e283c004 	add	ip, r3, #4	; 0x4
  1031cc:	0a0000a3 	beq	103460 <_realloc_r+0x5fc>
  1031d0:	e1a0200c 	mov	r2, ip
  1031d4:	e4921004 	ldr	r1, [r2], #4
  1031d8:	e1a0000e 	mov	r0, lr
  1031dc:	e4801004 	str	r1, [r0], #4
  1031e0:	e59c3004 	ldr	r3, [ip, #4]
  1031e4:	e58e3004 	str	r3, [lr, #4]
  1031e8:	e59dc008 	ldr	ip, [sp, #8]
  1031ec:	e5921004 	ldr	r1, [r2, #4]
  1031f0:	e1a07009 	mov	r7, r9
  1031f4:	e1a04005 	mov	r4, r5
  1031f8:	e5801004 	str	r1, [r0, #4]
  1031fc:	eaffff80 	b	103004 <_realloc_r+0x1a0>
  103200:	e59d1000 	ldr	r1, [sp]
  103204:	e3a0300c 	mov	r3, #12	; 0xc
  103208:	e3a06000 	mov	r6, #0	; 0x0
  10320c:	e5813000 	str	r3, [r1]
  103210:	eaffff8a 	b	103040 <_realloc_r+0x1dc>
  103214:	e5903004 	ldr	r3, [r0, #4]
  103218:	e59d1004 	ldr	r1, [sp, #4]
  10321c:	e3c3c003 	bic	ip, r3, #3	; 0x3
  103220:	e084200c 	add	r2, r4, ip
  103224:	e2813010 	add	r3, r1, #16	; 0x10
  103228:	e1520003 	cmp	r2, r3
  10322c:	baffff37 	blt	102f10 <_realloc_r+0xac>
  103230:	e0613002 	rsb	r3, r1, r2
  103234:	e3833001 	orr	r3, r3, #1	; 0x1
  103238:	e0851001 	add	r1, r5, r1
  10323c:	e5813004 	str	r3, [r1, #4]
  103240:	e5952004 	ldr	r2, [r5, #4]
  103244:	e59d3004 	ldr	r3, [sp, #4]
  103248:	e2022001 	and	r2, r2, #1	; 0x1
  10324c:	e1832002 	orr	r2, r3, r2
  103250:	e5852004 	str	r2, [r5, #4]
  103254:	e59f223c 	ldr	r2, [pc, #572]	; 103498 <.text+0x3498>
  103258:	e59d0000 	ldr	r0, [sp]
  10325c:	e5821008 	str	r1, [r2, #8]
  103260:	ebfffef7 	bl	102e44 <__malloc_unlock>
  103264:	e2856008 	add	r6, r5, #8	; 0x8
  103268:	eaffff74 	b	103040 <_realloc_r+0x1dc>
  10326c:	e1a0400a 	mov	r4, sl
  103270:	e4943004 	ldr	r3, [r4], #4
  103274:	e1a00006 	mov	r0, r6
  103278:	e4803004 	str	r3, [r0], #4
  10327c:	e59a2004 	ldr	r2, [sl, #4]
  103280:	e351001b 	cmp	r1, #27	; 0x1b
  103284:	e5862004 	str	r2, [r6, #4]
  103288:	e280e004 	add	lr, r0, #4	; 0x4
  10328c:	e284c004 	add	ip, r4, #4	; 0x4
  103290:	9affff9d 	bls	10310c <_realloc_r+0x2a8>
  103294:	e5943004 	ldr	r3, [r4, #4]
  103298:	e5803004 	str	r3, [r0, #4]
  10329c:	e59c2004 	ldr	r2, [ip, #4]
  1032a0:	e3510024 	cmp	r1, #36	; 0x24
  1032a4:	e28c3004 	add	r3, ip, #4	; 0x4
  1032a8:	e28e1004 	add	r1, lr, #4	; 0x4
  1032ac:	e58e2004 	str	r2, [lr, #4]
  1032b0:	e283c004 	add	ip, r3, #4	; 0x4
  1032b4:	e281e004 	add	lr, r1, #4	; 0x4
  1032b8:	1affff93 	bne	10310c <_realloc_r+0x2a8>
  1032bc:	e5933004 	ldr	r3, [r3, #4]
  1032c0:	e5813004 	str	r3, [r1, #4]
  1032c4:	e59c2004 	ldr	r2, [ip, #4]
  1032c8:	e28cc008 	add	ip, ip, #8	; 0x8
  1032cc:	e58e2004 	str	r2, [lr, #4]
  1032d0:	e28ee008 	add	lr, lr, #8	; 0x8
  1032d4:	eaffff8c 	b	10310c <_realloc_r+0x2a8>
  1032d8:	e1a02004 	mov	r2, r4
  1032dc:	e1a0100a 	mov	r1, sl
  1032e0:	e1a00005 	mov	r0, r5
  1032e4:	eb001635 	bl	108bc0 <memmove>
  1032e8:	e1a04005 	mov	r4, r5
  1032ec:	e1a0c008 	mov	ip, r8
  1032f0:	eaffff43 	b	103004 <_realloc_r+0x1a0>
  1032f4:	e1a02004 	mov	r2, r4
  1032f8:	e1a0100a 	mov	r1, sl
  1032fc:	e1a00005 	mov	r0, r5
  103300:	eb00162e 	bl	108bc0 <memmove>
  103304:	e1a07009 	mov	r7, r9
  103308:	e1a04005 	mov	r4, r5
  10330c:	e1a0c008 	mov	ip, r8
  103310:	eaffff3b 	b	103004 <_realloc_r+0x1a0>
  103314:	e1a02001 	mov	r2, r1
  103318:	e1a0100a 	mov	r1, sl
  10331c:	eb001627 	bl	108bc0 <memmove>
  103320:	eaffff81 	b	10312c <_realloc_r+0x2c8>
  103324:	e59d0004 	ldr	r0, [sp, #4]
  103328:	e0849002 	add	r9, r4, r2
  10332c:	e08c7009 	add	r7, ip, r9
  103330:	e2803010 	add	r3, r0, #16	; 0x10
  103334:	e1570003 	cmp	r7, r3
  103338:	baffff82 	blt	103148 <_realloc_r+0x2e4>
  10333c:	e59d1008 	ldr	r1, [sp, #8]
  103340:	e2444004 	sub	r4, r4, #4	; 0x4
  103344:	e591200c 	ldr	r2, [r1, #12]
  103348:	e5913008 	ldr	r3, [r1, #8]
  10334c:	e3540024 	cmp	r4, #36	; 0x24
  103350:	e5823008 	str	r3, [r2, #8]
  103354:	e583200c 	str	r2, [r3, #12]
  103358:	e2816008 	add	r6, r1, #8	; 0x8
  10335c:	8a000033 	bhi	103430 <_realloc_r+0x5cc>
  103360:	e3540013 	cmp	r4, #19	; 0x13
  103364:	e1a0c00a 	mov	ip, sl
  103368:	e1a0e006 	mov	lr, r6
  10336c:	9a000011 	bls	1033b8 <_realloc_r+0x554>
  103370:	e1a0000a 	mov	r0, sl
  103374:	e4903004 	ldr	r3, [r0], #4
  103378:	e5813008 	str	r3, [r1, #8]
  10337c:	e59a2004 	ldr	r2, [sl, #4]
  103380:	e354001b 	cmp	r4, #27	; 0x1b
  103384:	e581200c 	str	r2, [r1, #12]
  103388:	e281e010 	add	lr, r1, #16	; 0x10
  10338c:	e280c004 	add	ip, r0, #4	; 0x4
  103390:	9a000008 	bls	1033b8 <_realloc_r+0x554>
  103394:	e5903004 	ldr	r3, [r0, #4]
  103398:	e5813010 	str	r3, [r1, #16]
  10339c:	e59c2004 	ldr	r2, [ip, #4]
  1033a0:	e28c3004 	add	r3, ip, #4	; 0x4
  1033a4:	e3540024 	cmp	r4, #36	; 0x24
  1033a8:	e5812014 	str	r2, [r1, #20]
  1033ac:	e281e018 	add	lr, r1, #24	; 0x18
  1033b0:	e283c004 	add	ip, r3, #4	; 0x4
  1033b4:	0a000030 	beq	10347c <_realloc_r+0x618>
  1033b8:	e1a0000c 	mov	r0, ip
  1033bc:	e4902004 	ldr	r2, [r0], #4
  1033c0:	e1a0100e 	mov	r1, lr
  1033c4:	e4812004 	str	r2, [r1], #4
  1033c8:	e59c3004 	ldr	r3, [ip, #4]
  1033cc:	e58e3004 	str	r3, [lr, #4]
  1033d0:	e5902004 	ldr	r2, [r0, #4]
  1033d4:	e5812004 	str	r2, [r1, #4]
  1033d8:	e59d2004 	ldr	r2, [sp, #4]
  1033dc:	e59d0008 	ldr	r0, [sp, #8]
  1033e0:	e0623007 	rsb	r3, r2, r7
  1033e4:	e0801002 	add	r1, r0, r2
  1033e8:	e3833001 	orr	r3, r3, #1	; 0x1
  1033ec:	e5813004 	str	r3, [r1, #4]
  1033f0:	e5902004 	ldr	r2, [r0, #4]
  1033f4:	e59d3004 	ldr	r3, [sp, #4]
  1033f8:	e2022001 	and	r2, r2, #1	; 0x1
  1033fc:	e1832002 	orr	r2, r3, r2
  103400:	e5802004 	str	r2, [r0, #4]
  103404:	e59f208c 	ldr	r2, [pc, #140]	; 103498 <.text+0x3498>
  103408:	e59d0000 	ldr	r0, [sp]
  10340c:	e5821008 	str	r1, [r2, #8]
  103410:	ebfffe8b 	bl	102e44 <__malloc_unlock>
  103414:	eaffff09 	b	103040 <_realloc_r+0x1dc>
  103418:	e5923004 	ldr	r3, [r2, #4]
  10341c:	e3c33003 	bic	r3, r3, #3	; 0x3
  103420:	e0847003 	add	r7, r4, r3
  103424:	e1a0c005 	mov	ip, r5
  103428:	e2854008 	add	r4, r5, #8	; 0x8
  10342c:	eafffef4 	b	103004 <_realloc_r+0x1a0>
  103430:	e1a0100a 	mov	r1, sl
  103434:	e1a02004 	mov	r2, r4
  103438:	e1a00006 	mov	r0, r6
  10343c:	eb0015df 	bl	108bc0 <memmove>
  103440:	eaffffe4 	b	1033d8 <_realloc_r+0x574>
  103444:	e5933004 	ldr	r3, [r3, #4]
  103448:	e5883018 	str	r3, [r8, #24]
  10344c:	e59c2004 	ldr	r2, [ip, #4]
  103450:	e288e020 	add	lr, r8, #32	; 0x20
  103454:	e28cc008 	add	ip, ip, #8	; 0x8
  103458:	e588201c 	str	r2, [r8, #28]
  10345c:	eafffede 	b	102fdc <_realloc_r+0x178>
  103460:	e5933004 	ldr	r3, [r3, #4]
  103464:	e5883018 	str	r3, [r8, #24]
  103468:	e59c2004 	ldr	r2, [ip, #4]
  10346c:	e288e020 	add	lr, r8, #32	; 0x20
  103470:	e28cc008 	add	ip, ip, #8	; 0x8
  103474:	e588201c 	str	r2, [r8, #28]
  103478:	eaffff54 	b	1031d0 <_realloc_r+0x36c>
  10347c:	e5933004 	ldr	r3, [r3, #4]
  103480:	e5813018 	str	r3, [r1, #24]
  103484:	e59c2004 	ldr	r2, [ip, #4]
  103488:	e281e020 	add	lr, r1, #32	; 0x20
  10348c:	e28cc008 	add	ip, ip, #8	; 0x8
  103490:	e581201c 	str	r2, [r1, #28]
  103494:	eaffffc7 	b	1033b8 <_realloc_r+0x554>
  103498:	00200588 	eoreq	r0, r0, r8, lsl #11

0010349c <sprintf>:
  10349c:	e92d000e 	stmdb	sp!, {r1, r2, r3}
  1034a0:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  1034a4:	e59f2060 	ldr	r2, [pc, #96]	; 10350c <.text+0x350c>
  1034a8:	e24dd060 	sub	sp, sp, #96	; 0x60
  1034ac:	e28d4070 	add	r4, sp, #112	; 0x70
  1034b0:	e3e0c102 	mvn	ip, #-2147483648	; 0x80000000
  1034b4:	e1a0e000 	mov	lr, r0
  1034b8:	e1a03004 	mov	r3, r4
  1034bc:	e58dc014 	str	ip, [sp, #20]
  1034c0:	e58dc008 	str	ip, [sp, #8]
  1034c4:	e5920000 	ldr	r0, [r2]
  1034c8:	e3e0c000 	mvn	ip, #0	; 0x0
  1034cc:	e59d206c 	ldr	r2, [sp, #108]
  1034d0:	e1a0100d 	mov	r1, sp
  1034d4:	e3a05f82 	mov	r5, #520	; 0x208
  1034d8:	e58de010 	str	lr, [sp, #16]
  1034dc:	e1cd50bc 	strh	r5, [sp, #12]
  1034e0:	e58de000 	str	lr, [sp]
  1034e4:	e1cdc0be 	strh	ip, [sp, #14]
  1034e8:	e58d405c 	str	r4, [sp, #92]
  1034ec:	eb000217 	bl	103d50 <_vfprintf_r>
  1034f0:	e59d3000 	ldr	r3, [sp]
  1034f4:	e3a02000 	mov	r2, #0	; 0x0
  1034f8:	e5c32000 	strb	r2, [r3]
  1034fc:	e28dd060 	add	sp, sp, #96	; 0x60
  103500:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
  103504:	e28dd00c 	add	sp, sp, #12	; 0xc
  103508:	e12fff1e 	bx	lr
  10350c:	00200184 	eoreq	r0, r0, r4, lsl #3

00103510 <_sprintf_r>:
  103510:	e92d000c 	stmdb	sp!, {r2, r3}
  103514:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  103518:	e24dd060 	sub	sp, sp, #96	; 0x60
  10351c:	e28d4070 	add	r4, sp, #112	; 0x70
  103520:	e3e0c102 	mvn	ip, #-2147483648	; 0x80000000
  103524:	e1a0e001 	mov	lr, r1
  103528:	e1a03004 	mov	r3, r4
  10352c:	e59d206c 	ldr	r2, [sp, #108]
  103530:	e58dc014 	str	ip, [sp, #20]
  103534:	e58dc008 	str	ip, [sp, #8]
  103538:	e1a0100d 	mov	r1, sp
  10353c:	e3e0c000 	mvn	ip, #0	; 0x0
  103540:	e3a05f82 	mov	r5, #520	; 0x208
  103544:	e58de010 	str	lr, [sp, #16]
  103548:	e1cd50bc 	strh	r5, [sp, #12]
  10354c:	e58de000 	str	lr, [sp]
  103550:	e1cdc0be 	strh	ip, [sp, #14]
  103554:	e58d405c 	str	r4, [sp, #92]
  103558:	eb0001fc 	bl	103d50 <_vfprintf_r>
  10355c:	e59d3000 	ldr	r3, [sp]
  103560:	e3a02000 	mov	r2, #0	; 0x0
  103564:	e5c32000 	strb	r2, [r3]
  103568:	e28dd060 	add	sp, sp, #96	; 0x60
  10356c:	e8bd4030 	ldmia	sp!, {r4, r5, lr}
  103570:	e28dd008 	add	sp, sp, #8	; 0x8
  103574:	e12fff1e 	bx	lr

00103578 <strlen>:
  103578:	e3100003 	tst	r0, #3	; 0x3
  10357c:	e1a01000 	mov	r1, r0
  103580:	1a000018 	bne	1035e8 <strlen+0x70>
  103584:	e5902000 	ldr	r2, [r0]
  103588:	e28234ff 	add	r3, r2, #-16777216	; 0xff000000
  10358c:	e2433801 	sub	r3, r3, #65536	; 0x10000
  103590:	e2433c01 	sub	r3, r3, #256	; 0x100
  103594:	e2433001 	sub	r3, r3, #1	; 0x1
  103598:	e3c3347f 	bic	r3, r3, #2130706432	; 0x7f000000
  10359c:	e3c3387f 	bic	r3, r3, #8323072	; 0x7f0000
  1035a0:	e3c33c7f 	bic	r3, r3, #32512	; 0x7f00
  1035a4:	e3c3307f 	bic	r3, r3, #127	; 0x7f
  1035a8:	e1d32002 	bics	r2, r3, r2
  1035ac:	e1a02000 	mov	r2, r0
  1035b0:	1a00000b 	bne	1035e4 <strlen+0x6c>
  1035b4:	e5b02004 	ldr	r2, [r0, #4]!
  1035b8:	e28234ff 	add	r3, r2, #-16777216	; 0xff000000
  1035bc:	e2433801 	sub	r3, r3, #65536	; 0x10000
  1035c0:	e2433c01 	sub	r3, r3, #256	; 0x100
  1035c4:	e2433001 	sub	r3, r3, #1	; 0x1
  1035c8:	e3c3347f 	bic	r3, r3, #2130706432	; 0x7f000000
  1035cc:	e3c3387f 	bic	r3, r3, #8323072	; 0x7f0000
  1035d0:	e3c33c7f 	bic	r3, r3, #32512	; 0x7f00
  1035d4:	e3c3307f 	bic	r3, r3, #127	; 0x7f
  1035d8:	e1d32002 	bics	r2, r3, r2
  1035dc:	0afffff4 	beq	1035b4 <strlen+0x3c>
  1035e0:	e1a02000 	mov	r2, r0
  1035e4:	e1a00002 	mov	r0, r2
  1035e8:	e5d03000 	ldrb	r3, [r0]
  1035ec:	e3530000 	cmp	r3, #0	; 0x0
  1035f0:	0a000002 	beq	103600 <strlen+0x88>
  1035f4:	e5f03001 	ldrb	r3, [r0, #1]!
  1035f8:	e3530000 	cmp	r3, #0	; 0x0
  1035fc:	1afffffc 	bne	1035f4 <strlen+0x7c>
  103600:	e0610000 	rsb	r0, r1, r0
  103604:	e12fff1e 	bx	lr

00103608 <findslot>:
  103608:	e59f2024 	ldr	r2, [pc, #36]	; 103634 <.text+0x3634>
  10360c:	e1a01000 	mov	r1, r0
  103610:	e3a00000 	mov	r0, #0	; 0x0
  103614:	e5923000 	ldr	r3, [r2]
  103618:	e1530001 	cmp	r3, r1
  10361c:	e2822008 	add	r2, r2, #8	; 0x8
  103620:	012fff1e 	bxeq	lr
  103624:	e2800001 	add	r0, r0, #1	; 0x1
  103628:	e3500014 	cmp	r0, #20	; 0x14
  10362c:	1afffff8 	bne	103614 <findslot+0xc>
  103630:	e12fff1e 	bx	lr
  103634:	00200b3c 	eoreq	r0, r0, ip, lsr fp

00103638 <_getpid>:
  103638:	e3a00001 	mov	r0, #1	; 0x1
  10363c:	e12fff1e 	bx	lr

00103640 <_link>:
  103640:	e3e00000 	mvn	r0, #0	; 0x0
  103644:	e12fff1e 	bx	lr

00103648 <_unlink>:
  103648:	e3e00000 	mvn	r0, #0	; 0x0
  10364c:	e12fff1e 	bx	lr

00103650 <_raise>:
  103650:	e12fff1e 	bx	lr

00103654 <isatty>:
  103654:	e3a00001 	mov	r0, #1	; 0x1
  103658:	e12fff1e 	bx	lr

0010365c <_rename>:
  10365c:	e52de004 	str	lr, [sp, #-4]!
  103660:	eb001170 	bl	107c28 <__errno>
  103664:	e3a03058 	mov	r3, #88	; 0x58
  103668:	e5803000 	str	r3, [r0]
  10366c:	e3e00000 	mvn	r0, #0	; 0x0
  103670:	e49df004 	ldr	pc, [sp], #4

00103674 <_system>:
  103674:	e3500000 	cmp	r0, #0	; 0x0
  103678:	e52de004 	str	lr, [sp, #-4]!
  10367c:	049df004 	ldreq	pc, [sp], #4
  103680:	eb001168 	bl	107c28 <__errno>
  103684:	e3a03058 	mov	r3, #88	; 0x58
  103688:	e5803000 	str	r3, [r0]
  10368c:	e3e00000 	mvn	r0, #0	; 0x0
  103690:	e49df004 	ldr	pc, [sp], #4

00103694 <_sbrk>:
  103694:	e59f1044 	ldr	r1, [pc, #68]	; 1036e0 <.text+0x36e0>
  103698:	e5913000 	ldr	r3, [r1]
  10369c:	e52de004 	str	lr, [sp, #-4]!
  1036a0:	e3530000 	cmp	r3, #0	; 0x0
  1036a4:	059f3038 	ldreq	r3, [pc, #56]	; 1036e4 <.text+0x36e4>
  1036a8:	e0830000 	add	r0, r3, r0
  1036ac:	05813000 	streq	r3, [r1]
  1036b0:	e150000d 	cmp	r0, sp
  1036b4:	e1a02003 	mov	r2, r3
  1036b8:	95810000 	strls	r0, [r1]
  1036bc:	8a000001 	bhi	1036c8 <_sbrk+0x34>
  1036c0:	e1a00002 	mov	r0, r2
  1036c4:	e49df004 	ldr	pc, [sp], #4
  1036c8:	eb001156 	bl	107c28 <__errno>
  1036cc:	e3e02000 	mvn	r2, #0	; 0x0
  1036d0:	e3a0300c 	mov	r3, #12	; 0xc
  1036d4:	e5803000 	str	r3, [r0]
  1036d8:	e1a00002 	mov	r0, r2
  1036dc:	e49df004 	ldr	pc, [sp], #4
  1036e0:	00200b2c 	eoreq	r0, r0, ip, lsr #22
  1036e4:	00200df8 	streqd	r0, [r0], -r8

001036e8 <error>:
  1036e8:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  1036ec:	e1a07000 	mov	r7, r0
  1036f0:	eb00114c 	bl	107c28 <__errno>
  1036f4:	e3a04013 	mov	r4, #19	; 0x13
  1036f8:	e1a06000 	mov	r6, r0
  1036fc:	e3a05000 	mov	r5, #0	; 0x0
  103700:	e1a00004 	mov	r0, r4
  103704:	e1a01005 	mov	r1, r5
  103708:	ef123456 	svc	0x00123456
  10370c:	e1a04000 	mov	r4, r0
  103710:	e1a00007 	mov	r0, r7
  103714:	e5864000 	str	r4, [r6]
  103718:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}

0010371c <wrap>:
  10371c:	e3700001 	cmn	r0, #1	; 0x1
  103720:	112fff1e 	bxne	lr
  103724:	eaffffef 	b	1036e8 <error>

00103728 <_fstat>:
  103728:	e92d4010 	stmdb	sp!, {r4, lr}
  10372c:	e1a00001 	mov	r0, r1
  103730:	e1a04001 	mov	r4, r1
  103734:	e3a0203c 	mov	r2, #60	; 0x3c
  103738:	e3a01000 	mov	r1, #0	; 0x0
  10373c:	ebfffd99 	bl	102da8 <memset>
  103740:	e3a03b01 	mov	r3, #1024	; 0x400
  103744:	e3a02a02 	mov	r2, #8192	; 0x2000
  103748:	e3a00000 	mov	r0, #0	; 0x0
  10374c:	e584302c 	str	r3, [r4, #44]
  103750:	e5842004 	str	r2, [r4, #4]
  103754:	e8bd8010 	ldmia	sp!, {r4, pc}

00103758 <remap_handle>:
  103758:	e59f3064 	ldr	r3, [pc, #100]	; 1037c4 <.text+0x37c4>
  10375c:	e5932000 	ldr	r2, [r3]
  103760:	e3520000 	cmp	r2, #0	; 0x0
  103764:	e92d4010 	stmdb	sp!, {r4, lr}
  103768:	e1a04000 	mov	r4, r0
  10376c:	0a000002 	beq	10377c <remap_handle+0x24>
  103770:	e5923038 	ldr	r3, [r2, #56]
  103774:	e3530000 	cmp	r3, #0	; 0x0
  103778:	0a00000b 	beq	1037ac <remap_handle+0x54>
  10377c:	e3540000 	cmp	r4, #0	; 0x0
  103780:	1a000002 	bne	103790 <remap_handle+0x38>
  103784:	e59f303c 	ldr	r3, [pc, #60]	; 1037c8 <.text+0x37c8>
  103788:	e5930000 	ldr	r0, [r3]
  10378c:	e8bd8010 	ldmia	sp!, {r4, pc}
  103790:	e3540001 	cmp	r4, #1	; 0x1
  103794:	0a000007 	beq	1037b8 <remap_handle+0x60>
  103798:	e3540002 	cmp	r4, #2	; 0x2
  10379c:	059f3028 	ldreq	r3, [pc, #40]	; 1037cc <.text+0x37cc>
  1037a0:	05930000 	ldreq	r0, [r3]
  1037a4:	12440020 	subne	r0, r4, #32	; 0x20
  1037a8:	e8bd8010 	ldmia	sp!, {r4, pc}
  1037ac:	e1a00002 	mov	r0, r2
  1037b0:	eb001173 	bl	107d84 <__sinit>
  1037b4:	eafffff0 	b	10377c <remap_handle+0x24>
  1037b8:	e59f3010 	ldr	r3, [pc, #16]	; 1037d0 <.text+0x37d0>
  1037bc:	e5930000 	ldr	r0, [r3]
  1037c0:	e8bd8010 	ldmia	sp!, {r4, pc}
  1037c4:	00200184 	eoreq	r0, r0, r4, lsl #3
  1037c8:	00200b30 	eoreq	r0, r0, r0, lsr fp
  1037cc:	00200b38 	eoreq	r0, r0, r8, lsr fp
  1037d0:	00200b34 	eoreq	r0, r0, r4, lsr fp

001037d4 <_swiclose>:
  1037d4:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  1037d8:	e24dd004 	sub	sp, sp, #4	; 0x4
  1037dc:	ebffffdd 	bl	103758 <remap_handle>
  1037e0:	e58d0000 	str	r0, [sp]
  1037e4:	ebffff87 	bl	103608 <findslot>
  1037e8:	e3500014 	cmp	r0, #20	; 0x14
  1037ec:	159f3028 	ldrne	r3, [pc, #40]	; 10381c <.text+0x381c>
  1037f0:	13e02000 	mvnne	r2, #0	; 0x0
  1037f4:	17832180 	strne	r2, [r3, r0, lsl #3]
  1037f8:	e3a04002 	mov	r4, #2	; 0x2
  1037fc:	e1a0500d 	mov	r5, sp
  103800:	e1a00004 	mov	r0, r4
  103804:	e1a0100d 	mov	r1, sp
  103808:	ef123456 	svc	0x00123456
  10380c:	e1a04000 	mov	r4, r0
  103810:	e1a00004 	mov	r0, r4
  103814:	e28dd004 	add	sp, sp, #4	; 0x4
  103818:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  10381c:	00200b3c 	eoreq	r0, r0, ip, lsr fp

00103820 <_close>:
  103820:	e52de004 	str	lr, [sp, #-4]!
  103824:	ebffffea 	bl	1037d4 <_swiclose>
  103828:	e49de004 	ldr	lr, [sp], #4
  10382c:	eaffffba 	b	10371c <wrap>

00103830 <_swiwrite>:
  103830:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  103834:	e24dd00c 	sub	sp, sp, #12	; 0xc
  103838:	e1a04001 	mov	r4, r1
  10383c:	e1a05002 	mov	r5, r2
  103840:	ebffffc4 	bl	103758 <remap_handle>
  103844:	e88d0031 	stmia	sp, {r0, r4, r5}
  103848:	e3a04005 	mov	r4, #5	; 0x5
  10384c:	e1a0500d 	mov	r5, sp
  103850:	e1a00004 	mov	r0, r4
  103854:	e1a0100d 	mov	r1, sp
  103858:	ef123456 	svc	0x00123456
  10385c:	e1a04000 	mov	r4, r0
  103860:	e1a00004 	mov	r0, r4
  103864:	e28dd00c 	add	sp, sp, #12	; 0xc
  103868:	e8bd8030 	ldmia	sp!, {r4, r5, pc}

0010386c <_write>:
  10386c:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  103870:	e1a06002 	mov	r6, r2
  103874:	e1a05001 	mov	r5, r1
  103878:	e1a04000 	mov	r4, r0
  10387c:	ebffffb5 	bl	103758 <remap_handle>
  103880:	ebffff60 	bl	103608 <findslot>
  103884:	e1a02006 	mov	r2, r6
  103888:	e1a07000 	mov	r7, r0
  10388c:	e1a01005 	mov	r1, r5
  103890:	e1a00004 	mov	r0, r4
  103894:	ebffffe5 	bl	103830 <_swiwrite>
  103898:	e1a02000 	mov	r2, r0
  10389c:	e3e00000 	mvn	r0, #0	; 0x0
  1038a0:	e1520000 	cmp	r2, r0
  1038a4:	11560002 	cmpne	r6, r2
  1038a8:	0a000008 	beq	1038d0 <_write+0x64>
  1038ac:	e59f3024 	ldr	r3, [pc, #36]	; 1038d8 <.text+0x38d8>
  1038b0:	e3570014 	cmp	r7, #20	; 0x14
  1038b4:	e0831187 	add	r1, r3, r7, lsl #3
  1038b8:	e0620006 	rsb	r0, r2, r6
  1038bc:	08bd80f0 	ldmeqia	sp!, {r4, r5, r6, r7, pc}
  1038c0:	e5913004 	ldr	r3, [r1, #4]
  1038c4:	e0833000 	add	r3, r3, r0
  1038c8:	e5813004 	str	r3, [r1, #4]
  1038cc:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  1038d0:	e8bd40f0 	ldmia	sp!, {r4, r5, r6, r7, lr}
  1038d4:	eaffff83 	b	1036e8 <error>
  1038d8:	00200b3c 	eoreq	r0, r0, ip, lsr fp

001038dc <_swilseek>:
  1038dc:	e92d41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1038e0:	e24dd008 	sub	sp, sp, #8	; 0x8
  1038e4:	e1a04002 	mov	r4, r2
  1038e8:	e1a05001 	mov	r5, r1
  1038ec:	e1a08000 	mov	r8, r0
  1038f0:	ebffff98 	bl	103758 <remap_handle>
  1038f4:	e1a07000 	mov	r7, r0
  1038f8:	ebffff42 	bl	103608 <findslot>
  1038fc:	e3540001 	cmp	r4, #1	; 0x1
  103900:	e1a06000 	mov	r6, r0
  103904:	0a00001a 	beq	103974 <_swilseek+0x98>
  103908:	e3540002 	cmp	r4, #2	; 0x2
  10390c:	11a0700d 	movne	r7, sp
  103910:	0a00001f 	beq	103994 <_swilseek+0xb8>
  103914:	e1a00008 	mov	r0, r8
  103918:	ebffff8e 	bl	103758 <remap_handle>
  10391c:	e3a0400a 	mov	r4, #10	; 0xa
  103920:	e88d0021 	stmia	sp, {r0, r5}
  103924:	e1a00004 	mov	r0, r4
  103928:	e1a01007 	mov	r1, r7
  10392c:	ef123456 	svc	0x00123456
  103930:	e1a04000 	mov	r4, r0
  103934:	e2744001 	rsbs	r4, r4, #1	; 0x1
  103938:	33a04000 	movcc	r4, #0	; 0x0
  10393c:	e3560014 	cmp	r6, #20	; 0x14
  103940:	03a03000 	moveq	r3, #0	; 0x0
  103944:	12043001 	andne	r3, r4, #1	; 0x1
  103948:	e3530000 	cmp	r3, #0	; 0x0
  10394c:	159f3064 	ldrne	r3, [pc, #100]	; 1039b8 <.text+0x39b8>
  103950:	10833186 	addne	r3, r3, r6, lsl #3
  103954:	15835004 	strne	r5, [r3, #4]
  103958:	e3540000 	cmp	r4, #0	; 0x0
  10395c:	0a000002 	beq	10396c <_swilseek+0x90>
  103960:	e1a00005 	mov	r0, r5
  103964:	e28dd008 	add	sp, sp, #8	; 0x8
  103968:	e8bd81f0 	ldmia	sp!, {r4, r5, r6, r7, r8, pc}
  10396c:	e3e05000 	mvn	r5, #0	; 0x0
  103970:	eafffffa 	b	103960 <_swilseek+0x84>
  103974:	e3500014 	cmp	r0, #20	; 0x14
  103978:	0afffffb 	beq	10396c <_swilseek+0x90>
  10397c:	e59f3034 	ldr	r3, [pc, #52]	; 1039b8 <.text+0x39b8>
  103980:	e0833180 	add	r3, r3, r0, lsl #3
  103984:	e5932004 	ldr	r2, [r3, #4]
  103988:	e1a0700d 	mov	r7, sp
  10398c:	e0855002 	add	r5, r5, r2
  103990:	eaffffdf 	b	103914 <_swilseek+0x38>
  103994:	e58d7000 	str	r7, [sp]
  103998:	e284400a 	add	r4, r4, #10	; 0xa
  10399c:	e1a0700d 	mov	r7, sp
  1039a0:	e1a00004 	mov	r0, r4
  1039a4:	e1a0100d 	mov	r1, sp
  1039a8:	ef123456 	svc	0x00123456
  1039ac:	e1a04000 	mov	r4, r0
  1039b0:	e0855004 	add	r5, r5, r4
  1039b4:	eaffffd6 	b	103914 <_swilseek+0x38>
  1039b8:	00200b3c 	eoreq	r0, r0, ip, lsr fp

001039bc <_lseek>:
  1039bc:	e52de004 	str	lr, [sp, #-4]!
  1039c0:	ebffffc5 	bl	1038dc <_swilseek>
  1039c4:	e49de004 	ldr	lr, [sp], #4
  1039c8:	eaffff53 	b	10371c <wrap>

001039cc <_swiread>:
  1039cc:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  1039d0:	e24dd00c 	sub	sp, sp, #12	; 0xc
  1039d4:	e1a04001 	mov	r4, r1
  1039d8:	e1a05002 	mov	r5, r2
  1039dc:	ebffff5d 	bl	103758 <remap_handle>
  1039e0:	e88d0031 	stmia	sp, {r0, r4, r5}
  1039e4:	e3a04006 	mov	r4, #6	; 0x6
  1039e8:	e1a0500d 	mov	r5, sp
  1039ec:	e1a00004 	mov	r0, r4
  1039f0:	e1a0100d 	mov	r1, sp
  1039f4:	ef123456 	svc	0x00123456
  1039f8:	e1a04000 	mov	r4, r0
  1039fc:	e1a00004 	mov	r0, r4
  103a00:	e28dd00c 	add	sp, sp, #12	; 0xc
  103a04:	e8bd8030 	ldmia	sp!, {r4, r5, pc}

00103a08 <_read>:
  103a08:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  103a0c:	e1a06002 	mov	r6, r2
  103a10:	e1a05001 	mov	r5, r1
  103a14:	e1a04000 	mov	r4, r0
  103a18:	ebffff4e 	bl	103758 <remap_handle>
  103a1c:	ebfffef9 	bl	103608 <findslot>
  103a20:	e1a01005 	mov	r1, r5
  103a24:	e1a07000 	mov	r7, r0
  103a28:	e1a02006 	mov	r2, r6
  103a2c:	e1a00004 	mov	r0, r4
  103a30:	ebffffe5 	bl	1039cc <_swiread>
  103a34:	e2501000 	subs	r1, r0, #0	; 0x0
  103a38:	e3e00000 	mvn	r0, #0	; 0x0
  103a3c:	ba000008 	blt	103a64 <_read+0x5c>
  103a40:	e59f3024 	ldr	r3, [pc, #36]	; 103a6c <.text+0x3a6c>
  103a44:	e3570014 	cmp	r7, #20	; 0x14
  103a48:	e0832187 	add	r2, r3, r7, lsl #3
  103a4c:	e0610006 	rsb	r0, r1, r6
  103a50:	08bd80f0 	ldmeqia	sp!, {r4, r5, r6, r7, pc}
  103a54:	e5923004 	ldr	r3, [r2, #4]
  103a58:	e0833000 	add	r3, r3, r0
  103a5c:	e5823004 	str	r3, [r2, #4]
  103a60:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  103a64:	e8bd40f0 	ldmia	sp!, {r4, r5, r6, r7, lr}
  103a68:	eaffff1e 	b	1036e8 <error>
  103a6c:	00200b3c 	eoreq	r0, r0, ip, lsr fp

00103a70 <_swiopen>:
  103a70:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  103a74:	e1a07000 	mov	r7, r0
  103a78:	e24dd00c 	sub	sp, sp, #12	; 0xc
  103a7c:	e3e00000 	mvn	r0, #0	; 0x0
  103a80:	e1a05001 	mov	r5, r1
  103a84:	ebfffedf 	bl	103608 <findslot>
  103a88:	e3500014 	cmp	r0, #20	; 0x14
  103a8c:	e1a06000 	mov	r6, r0
  103a90:	03e00000 	mvneq	r0, #0	; 0x0
  103a94:	0a000019 	beq	103b00 <_swiopen+0x90>
  103a98:	e2054002 	and	r4, r5, #2	; 0x2
  103a9c:	e3150c02 	tst	r5, #512	; 0x200
  103aa0:	13844004 	orrne	r4, r4, #4	; 0x4
  103aa4:	e3150b01 	tst	r5, #1024	; 0x400
  103aa8:	13844004 	orrne	r4, r4, #4	; 0x4
  103aac:	e3150008 	tst	r5, #8	; 0x8
  103ab0:	13c43004 	bicne	r3, r4, #4	; 0x4
  103ab4:	e1a00007 	mov	r0, r7
  103ab8:	13834008 	orrne	r4, r3, #8	; 0x8
  103abc:	e58d7000 	str	r7, [sp]
  103ac0:	ebfffeac 	bl	103578 <strlen>
  103ac4:	e3a05001 	mov	r5, #1	; 0x1
  103ac8:	e58d4004 	str	r4, [sp, #4]
  103acc:	e58d0008 	str	r0, [sp, #8]
  103ad0:	e1a00005 	mov	r0, r5
  103ad4:	e1a0100d 	mov	r1, sp
  103ad8:	ef123456 	svc	0x00123456
  103adc:	e1a04000 	mov	r4, r0
  103ae0:	e3540000 	cmp	r4, #0	; 0x0
  103ae4:	ba000007 	blt	103b08 <_swiopen+0x98>
  103ae8:	e59f1024 	ldr	r1, [pc, #36]	; 103b14 <.text+0x3b14>
  103aec:	e3a03000 	mov	r3, #0	; 0x0
  103af0:	e0812186 	add	r2, r1, r6, lsl #3
  103af4:	e5823004 	str	r3, [r2, #4]
  103af8:	e7814186 	str	r4, [r1, r6, lsl #3]
  103afc:	e2840020 	add	r0, r4, #32	; 0x20
  103b00:	e28dd00c 	add	sp, sp, #12	; 0xc
  103b04:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  103b08:	e1a00004 	mov	r0, r4
  103b0c:	ebfffef5 	bl	1036e8 <error>
  103b10:	eafffffa 	b	103b00 <_swiopen+0x90>
  103b14:	00200b3c 	eoreq	r0, r0, ip, lsr fp

00103b18 <_open>:
  103b18:	e92d000e 	stmdb	sp!, {r1, r2, r3}
  103b1c:	e52de004 	str	lr, [sp, #-4]!
  103b20:	e59d1004 	ldr	r1, [sp, #4]
  103b24:	ebffffd1 	bl	103a70 <_swiopen>
  103b28:	ebfffefb 	bl	10371c <wrap>
  103b2c:	e49de004 	ldr	lr, [sp], #4
  103b30:	e28dd00c 	add	sp, sp, #12	; 0xc
  103b34:	e12fff1e 	bx	lr

00103b38 <_stat>:
  103b38:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  103b3c:	e1a04001 	mov	r4, r1
  103b40:	e3a01000 	mov	r1, #0	; 0x0
  103b44:	ebfffff3 	bl	103b18 <_open>
  103b48:	e2505000 	subs	r5, r0, #0	; 0x0
  103b4c:	e3a01000 	mov	r1, #0	; 0x0
  103b50:	e3a0203c 	mov	r2, #60	; 0x3c
  103b54:	e1a00004 	mov	r0, r4
  103b58:	e3e03000 	mvn	r3, #0	; 0x0
  103b5c:	ba000007 	blt	103b80 <_stat+0x48>
  103b60:	ebfffc90 	bl	102da8 <memset>
  103b64:	e3a03b01 	mov	r3, #1024	; 0x400
  103b68:	e3a02c81 	mov	r2, #33024	; 0x8100
  103b6c:	e584302c 	str	r3, [r4, #44]
  103b70:	e5842004 	str	r2, [r4, #4]
  103b74:	e1a00005 	mov	r0, r5
  103b78:	ebffff15 	bl	1037d4 <_swiclose>
  103b7c:	e3a03000 	mov	r3, #0	; 0x0
  103b80:	e1a00003 	mov	r0, r3
  103b84:	e8bd8030 	ldmia	sp!, {r4, r5, pc}

00103b88 <initialise_monitor_handles>:
  103b88:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  103b8c:	e59f709c 	ldr	r7, [pc, #156]	; 103c30 <.text+0x3c30>
  103b90:	e24dd00c 	sub	sp, sp, #12	; 0xc
  103b94:	e3a08003 	mov	r8, #3	; 0x3
  103b98:	e3a03000 	mov	r3, #0	; 0x0
  103b9c:	e58d7000 	str	r7, [sp]
  103ba0:	e3a06001 	mov	r6, #1	; 0x1
  103ba4:	e58d8008 	str	r8, [sp, #8]
  103ba8:	e1a0500d 	mov	r5, sp
  103bac:	e58d3004 	str	r3, [sp, #4]
  103bb0:	e1a00006 	mov	r0, r6
  103bb4:	e1a0100d 	mov	r1, sp
  103bb8:	ef123456 	svc	0x00123456
  103bbc:	e1a04000 	mov	r4, r0
  103bc0:	e59fa06c 	ldr	sl, [pc, #108]	; 103c34 <.text+0x3c34>
  103bc4:	e58a4000 	str	r4, [sl]
  103bc8:	e3a04004 	mov	r4, #4	; 0x4
  103bcc:	e58d7000 	str	r7, [sp]
  103bd0:	e58d8008 	str	r8, [sp, #8]
  103bd4:	e58d4004 	str	r4, [sp, #4]
  103bd8:	e1a00006 	mov	r0, r6
  103bdc:	e1a0100d 	mov	r1, sp
  103be0:	ef123456 	svc	0x00123456
  103be4:	e1a04000 	mov	r4, r0
  103be8:	e59f3048 	ldr	r3, [pc, #72]	; 103c38 <.text+0x3c38>
  103bec:	e59f2048 	ldr	r2, [pc, #72]	; 103c3c <.text+0x3c3c>
  103bf0:	e59f0048 	ldr	r0, [pc, #72]	; 103c40 <.text+0x3c40>
  103bf4:	e5834000 	str	r4, [r3]
  103bf8:	e5824000 	str	r4, [r2]
  103bfc:	e3e03000 	mvn	r3, #0	; 0x0
  103c00:	e28020a0 	add	r2, r0, #160	; 0xa0
  103c04:	e4803008 	str	r3, [r0], #8
  103c08:	e1500002 	cmp	r0, r2
  103c0c:	1afffffc 	bne	103c04 <initialise_monitor_handles+0x7c>
  103c10:	e59a3000 	ldr	r3, [sl]
  103c14:	e24020a0 	sub	r2, r0, #160	; 0xa0
  103c18:	e3a01000 	mov	r1, #0	; 0x0
  103c1c:	e50030a0 	str	r3, [r0, #-160]
  103c20:	e582100c 	str	r1, [r2, #12]
  103c24:	e9820012 	stmib	r2, {r1, r4}
  103c28:	e28dd00c 	add	sp, sp, #12	; 0xc
  103c2c:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}
  103c30:	0010a71c 	andeqs	sl, r0, ip, lsl r7
  103c34:	00200b30 	eoreq	r0, r0, r0, lsr fp
  103c38:	00200b38 	eoreq	r0, r0, r8, lsr fp
  103c3c:	00200b34 	eoreq	r0, r0, r4, lsr fp
  103c40:	00200b3c 	eoreq	r0, r0, ip, lsr fp

00103c44 <_times>:
  103c44:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  103c48:	e1a05000 	mov	r5, r0
  103c4c:	e3a04010 	mov	r4, #16	; 0x10
  103c50:	e3a06000 	mov	r6, #0	; 0x0
  103c54:	e1a00004 	mov	r0, r4
  103c58:	e1a01006 	mov	r1, r6
  103c5c:	ef123456 	svc	0x00123456
  103c60:	e1a04000 	mov	r4, r0
  103c64:	e1550006 	cmp	r5, r6
  103c68:	e1a00004 	mov	r0, r4
  103c6c:	1585600c 	strne	r6, [r5, #12]
  103c70:	15854000 	strne	r4, [r5]
  103c74:	15856004 	strne	r6, [r5, #4]
  103c78:	15856008 	strne	r6, [r5, #8]
  103c7c:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}

00103c80 <_gettimeofday>:
  103c80:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  103c84:	e2507000 	subs	r7, r0, #0	; 0x0
  103c88:	e1a06001 	mov	r6, r1
  103c8c:	0a000007 	beq	103cb0 <_gettimeofday+0x30>
  103c90:	e3a05011 	mov	r5, #17	; 0x11
  103c94:	e3a04000 	mov	r4, #0	; 0x0
  103c98:	e1a00005 	mov	r0, r5
  103c9c:	e1a01004 	mov	r1, r4
  103ca0:	ef123456 	svc	0x00123456
  103ca4:	e1a05000 	mov	r5, r0
  103ca8:	e5874004 	str	r4, [r7, #4]
  103cac:	e5875000 	str	r5, [r7]
  103cb0:	e3a03000 	mov	r3, #0	; 0x0
  103cb4:	e1560003 	cmp	r6, r3
  103cb8:	e3a00000 	mov	r0, #0	; 0x0
  103cbc:	15863004 	strne	r3, [r6, #4]
  103cc0:	15863000 	strne	r3, [r6]
  103cc4:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}

00103cc8 <_kill>:
  103cc8:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  103ccc:	e3a05802 	mov	r5, #131072	; 0x20000
  103cd0:	e2855026 	add	r5, r5, #38	; 0x26
  103cd4:	e3a04018 	mov	r4, #24	; 0x18
  103cd8:	e1a00004 	mov	r0, r4
  103cdc:	e1a01005 	mov	r1, r5
  103ce0:	ef123456 	svc	0x00123456
  103ce4:	e1a04000 	mov	r4, r0
  103ce8:	e1a00004 	mov	r0, r4
  103cec:	e8bd8030 	ldmia	sp!, {r4, r5, pc}

00103cf0 <_exit>:
  103cf0:	e3a05802 	mov	r5, #131072	; 0x20000
  103cf4:	e2855026 	add	r5, r5, #38	; 0x26
  103cf8:	e3a04018 	mov	r4, #24	; 0x18
  103cfc:	e1a00004 	mov	r0, r4
  103d00:	e1a01005 	mov	r1, r5
  103d04:	ef123456 	svc	0x00123456
  103d08:	e1a04000 	mov	r4, r0
  103d0c:	e12fff1e 	bx	lr

00103d10 <__sprint>:
  103d10:	e5913008 	ldr	r3, [r1, #8]
  103d14:	e3530000 	cmp	r3, #0	; 0x0
  103d18:	e92d4010 	stmdb	sp!, {r4, lr}
  103d1c:	e1a02003 	mov	r2, r3
  103d20:	e1a04001 	mov	r4, r1
  103d24:	05813004 	streq	r3, [r1, #4]
  103d28:	1a000001 	bne	103d34 <__sprint+0x24>
  103d2c:	e1a00002 	mov	r0, r2
  103d30:	e8bd8010 	ldmia	sp!, {r4, pc}
  103d34:	eb001179 	bl	108320 <__sfvwrite>
  103d38:	e1a02000 	mov	r2, r0
  103d3c:	e3a03000 	mov	r3, #0	; 0x0
  103d40:	e1a00002 	mov	r0, r2
  103d44:	e5843004 	str	r3, [r4, #4]
  103d48:	e5843008 	str	r3, [r4, #8]
  103d4c:	e8bd8010 	ldmia	sp!, {r4, pc}

00103d50 <_vfprintf_r>:
  103d50:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  103d54:	e24dde6b 	sub	sp, sp, #1712	; 0x6b0
  103d58:	e1a0a001 	mov	sl, r1
  103d5c:	e58d0010 	str	r0, [sp, #16]
  103d60:	e1a04002 	mov	r4, r2
  103d64:	e1a09003 	mov	r9, r3
  103d68:	eb0012b4 	bl	108840 <localeconv>
  103d6c:	e59d1010 	ldr	r1, [sp, #16]
  103d70:	e5900000 	ldr	r0, [r0]
  103d74:	e3510000 	cmp	r1, #0	; 0x0
  103d78:	e58d0028 	str	r0, [sp, #40]
  103d7c:	0a000002 	beq	103d8c <_vfprintf_r+0x3c>
  103d80:	e5913038 	ldr	r3, [r1, #56]
  103d84:	e3530000 	cmp	r3, #0	; 0x0
  103d88:	0a0000cf 	beq	1040cc <.text+0x40cc>
  103d8c:	e1dac0bc 	ldrh	ip, [sl, #12]
  103d90:	e31c0008 	tst	ip, #8	; 0x8
  103d94:	0a0000cf 	beq	1040d8 <.text+0x40d8>
  103d98:	e59a3010 	ldr	r3, [sl, #16]
  103d9c:	e3530000 	cmp	r3, #0	; 0x0
  103da0:	0a0000cc 	beq	1040d8 <.text+0x40d8>
  103da4:	e20c301a 	and	r3, ip, #26	; 0x1a
  103da8:	e353000a 	cmp	r3, #10	; 0xa
  103dac:	1a00002d 	bne	103e68 <_vfprintf_r+0x118>
  103db0:	e1da30fe 	ldrsh	r3, [sl, #14]
  103db4:	e3530000 	cmp	r3, #0	; 0x0
  103db8:	ba00002a 	blt	103e68 <_vfprintf_r+0x118>
  103dbc:	e3ccc002 	bic	ip, ip, #2	; 0x2
  103dc0:	e28d8c05 	add	r8, sp, #1280	; 0x500
  103dc4:	e1c8ccb0 	strh	ip, [r8, #192]
  103dc8:	e3a0c000 	mov	ip, #0	; 0x0
  103dcc:	e58dc5cc 	str	ip, [sp, #1484]
  103dd0:	e28d7e5b 	add	r7, sp, #1456	; 0x5b0
  103dd4:	e1dac0be 	ldrh	ip, [sl, #14]
  103dd8:	e59a501c 	ldr	r5, [sl, #28]
  103ddc:	e59a6024 	ldr	r6, [sl, #36]
  103de0:	e28de060 	add	lr, sp, #96	; 0x60
  103de4:	e2877004 	add	r7, r7, #4	; 0x4
  103de8:	e24ee008 	sub	lr, lr, #8	; 0x8
  103dec:	e1a02004 	mov	r2, r4
  103df0:	e59d0010 	ldr	r0, [sp, #16]
  103df4:	e3a04b01 	mov	r4, #1024	; 0x400
  103df8:	e1a03009 	mov	r3, r9
  103dfc:	e1a01007 	mov	r1, r7
  103e00:	e1c8ccb2 	strh	ip, [r8, #194]
  103e04:	e58d55d0 	str	r5, [sp, #1488]
  103e08:	e58d65d8 	str	r6, [sp, #1496]
  103e0c:	e58de5c4 	str	lr, [sp, #1476]
  103e10:	e58d45c8 	str	r4, [sp, #1480]
  103e14:	e58de5b4 	str	lr, [sp, #1460]
  103e18:	e58d45bc 	str	r4, [sp, #1468]
  103e1c:	ebffffcb 	bl	103d50 <_vfprintf_r>
  103e20:	e3500000 	cmp	r0, #0	; 0x0
  103e24:	e58d0020 	str	r0, [sp, #32]
  103e28:	ba000005 	blt	103e44 <_vfprintf_r+0xf4>
  103e2c:	e1a00007 	mov	r0, r7
  103e30:	eb000f80 	bl	107c38 <fflush>
  103e34:	e59d1020 	ldr	r1, [sp, #32]
  103e38:	e3500000 	cmp	r0, #0	; 0x0
  103e3c:	13e01000 	mvnne	r1, #0	; 0x0
  103e40:	e58d1020 	str	r1, [sp, #32]
  103e44:	e28d2c05 	add	r2, sp, #1280	; 0x500
  103e48:	e1d23cb0 	ldrh	r3, [r2, #192]
  103e4c:	e3130040 	tst	r3, #64	; 0x40
  103e50:	11da30bc 	ldrneh	r3, [sl, #12]
  103e54:	13833040 	orrne	r3, r3, #64	; 0x40
  103e58:	11ca30bc 	strneh	r3, [sl, #12]
  103e5c:	e59d0020 	ldr	r0, [sp, #32]
  103e60:	e28dde6b 	add	sp, sp, #1712	; 0x6b0
  103e64:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  103e68:	e58d4018 	str	r4, [sp, #24]
  103e6c:	e3a03000 	mov	r3, #0	; 0x0
  103e70:	e3a04000 	mov	r4, #0	; 0x0
  103e74:	e3a06000 	mov	r6, #0	; 0x0
  103e78:	e28d8e61 	add	r8, sp, #1552	; 0x610
  103e7c:	e58d3048 	str	r3, [sp, #72]
  103e80:	e58d404c 	str	r4, [sp, #76]
  103e84:	e58d6020 	str	r6, [sp, #32]
  103e88:	e58d6030 	str	r6, [sp, #48]
  103e8c:	e58d6040 	str	r6, [sp, #64]
  103e90:	e58d6044 	str	r6, [sp, #68]
  103e94:	e58d8678 	str	r8, [sp, #1656]
  103e98:	e58d6680 	str	r6, [sp, #1664]
  103e9c:	e58d667c 	str	r6, [sp, #1660]
  103ea0:	e1a05006 	mov	r5, r6
  103ea4:	e59d4018 	ldr	r4, [sp, #24]
  103ea8:	e5d43000 	ldrb	r3, [r4]
  103eac:	e3530000 	cmp	r3, #0	; 0x0
  103eb0:	13530025 	cmpne	r3, #37	; 0x25
  103eb4:	0a000017 	beq	103f18 <_vfprintf_r+0x1c8>
  103eb8:	e59d2018 	ldr	r2, [sp, #24]
  103ebc:	e5f23001 	ldrb	r3, [r2, #1]!
  103ec0:	e3530000 	cmp	r3, #0	; 0x0
  103ec4:	13530025 	cmpne	r3, #37	; 0x25
  103ec8:	1afffffb 	bne	103ebc <_vfprintf_r+0x16c>
  103ecc:	e59d5018 	ldr	r5, [sp, #24]
  103ed0:	e0527005 	subs	r7, r2, r5
  103ed4:	e1a04002 	mov	r4, r2
  103ed8:	0a00000e 	beq	103f18 <_vfprintf_r+0x1c8>
  103edc:	e59d567c 	ldr	r5, [sp, #1660]
  103ee0:	e59d6680 	ldr	r6, [sp, #1664]
  103ee4:	e2855001 	add	r5, r5, #1	; 0x1
  103ee8:	e59dc018 	ldr	ip, [sp, #24]
  103eec:	e3550007 	cmp	r5, #7	; 0x7
  103ef0:	e0866007 	add	r6, r6, r7
  103ef4:	e588c000 	str	ip, [r8]
  103ef8:	e5887004 	str	r7, [r8, #4]
  103efc:	e58d6680 	str	r6, [sp, #1664]
  103f00:	e58d567c 	str	r5, [sp, #1660]
  103f04:	d2888008 	addle	r8, r8, #8	; 0x8
  103f08:	ca00041d 	bgt	104f84 <.text+0x4f84>
  103f0c:	e59d1020 	ldr	r1, [sp, #32]
  103f10:	e0811007 	add	r1, r1, r7
  103f14:	e58d1020 	str	r1, [sp, #32]
  103f18:	e5d43000 	ldrb	r3, [r4]
  103f1c:	e3530000 	cmp	r3, #0	; 0x0
  103f20:	0a0006ef 	beq	105ae4 <.text+0x5ae4>
  103f24:	e3a03000 	mov	r3, #0	; 0x0
  103f28:	e5cd36af 	strb	r3, [sp, #1711]
  103f2c:	e58d3024 	str	r3, [sp, #36]
  103f30:	e3a02000 	mov	r2, #0	; 0x0
  103f34:	e5d43001 	ldrb	r3, [r4, #1]
  103f38:	e2844001 	add	r4, r4, #1	; 0x1
  103f3c:	e58d4018 	str	r4, [sp, #24]
  103f40:	e58d2054 	str	r2, [sp, #84]
  103f44:	e3e06000 	mvn	r6, #0	; 0x0
  103f48:	e59dc018 	ldr	ip, [sp, #24]
  103f4c:	e28cc001 	add	ip, ip, #1	; 0x1
  103f50:	e58dc018 	str	ip, [sp, #24]
  103f54:	e1a07003 	mov	r7, r3
  103f58:	e2473020 	sub	r3, r7, #32	; 0x20
  103f5c:	e3530058 	cmp	r3, #88	; 0x58
  103f60:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
  103f64:	ea000198 	b	1045cc <.text+0x45cc>
  103f68:	001043e4 	andeqs	r4, r0, r4, ror #7
  103f6c:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f70:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f74:	001043fc 	ldreqsh	r4, [r0], -ip
  103f78:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f7c:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f80:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f84:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f88:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f8c:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f90:	00104414 	andeqs	r4, r0, r4, lsl r4
  103f94:	00104438 	andeqs	r4, r0, r8, lsr r4
  103f98:	001045cc 	andeqs	r4, r0, ip, asr #11
  103f9c:	001043cc 	andeqs	r4, r0, ip, asr #7
  103fa0:	00104af8 	ldreqsh	r4, [r0], -r8
  103fa4:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fa8:	00104ab0 	ldreqh	r4, [r0], -r0
  103fac:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fb0:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fb4:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fb8:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fbc:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fc0:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fc4:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fc8:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fcc:	00104ac8 	andeqs	r4, r0, r8, asr #21
  103fd0:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fd4:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fd8:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fdc:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fe0:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fe4:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fe8:	001045cc 	andeqs	r4, r0, ip, asr #11
  103fec:	001045cc 	andeqs	r4, r0, ip, asr #11
  103ff0:	001045cc 	andeqs	r4, r0, ip, asr #11
  103ff4:	001044a0 	andeqs	r4, r0, r0, lsr #9
  103ff8:	00104138 	andeqs	r4, r0, r8, lsr r1
  103ffc:	0010451c 	andeqs	r4, r0, ip, lsl r5
  104000:	0010451c 	andeqs	r4, r0, ip, lsl r5
  104004:	0010451c 	andeqs	r4, r0, ip, lsl r5
  104008:	001045cc 	andeqs	r4, r0, ip, asr #11
  10400c:	001045cc 	andeqs	r4, r0, ip, asr #11
  104010:	001045cc 	andeqs	r4, r0, ip, asr #11
  104014:	001045cc 	andeqs	r4, r0, ip, asr #11
  104018:	00104a98 	muleqs	r0, r8, sl
  10401c:	001045cc 	andeqs	r4, r0, ip, asr #11
  104020:	001045cc 	andeqs	r4, r0, ip, asr #11
  104024:	001041d0 	ldreqsb	r4, [r0], -r0
  104028:	001045cc 	andeqs	r4, r0, ip, asr #11
  10402c:	001045cc 	andeqs	r4, r0, ip, asr #11
  104030:	001045cc 	andeqs	r4, r0, ip, asr #11
  104034:	001048f0 	ldreqsh	r4, [r0], -r0
  104038:	001045cc 	andeqs	r4, r0, ip, asr #11
  10403c:	00104388 	andeqs	r4, r0, r8, lsl #7
  104040:	001045cc 	andeqs	r4, r0, ip, asr #11
  104044:	001045cc 	andeqs	r4, r0, ip, asr #11
  104048:	0010444c 	andeqs	r4, r0, ip, asr #8
  10404c:	001045cc 	andeqs	r4, r0, ip, asr #11
  104050:	001045cc 	andeqs	r4, r0, ip, asr #11
  104054:	001045cc 	andeqs	r4, r0, ip, asr #11
  104058:	001045cc 	andeqs	r4, r0, ip, asr #11
  10405c:	001045cc 	andeqs	r4, r0, ip, asr #11
  104060:	001045cc 	andeqs	r4, r0, ip, asr #11
  104064:	001045cc 	andeqs	r4, r0, ip, asr #11
  104068:	001045cc 	andeqs	r4, r0, ip, asr #11
  10406c:	001045cc 	andeqs	r4, r0, ip, asr #11
  104070:	001045cc 	andeqs	r4, r0, ip, asr #11
  104074:	001044a0 	andeqs	r4, r0, r0, lsr #9
  104078:	00104144 	andeqs	r4, r0, r4, asr #2
  10407c:	0010451c 	andeqs	r4, r0, ip, lsl r5
  104080:	0010451c 	andeqs	r4, r0, ip, lsl r5
  104084:	0010451c 	andeqs	r4, r0, ip, lsl r5
  104088:	001045b4 	ldreqh	r4, [r0], -r4
  10408c:	00104144 	andeqs	r4, r0, r4, asr #2
  104090:	001045cc 	andeqs	r4, r0, ip, asr #11
  104094:	001045cc 	andeqs	r4, r0, ip, asr #11
  104098:	00104a24 	andeqs	r4, r0, r4, lsr #20
  10409c:	001045cc 	andeqs	r4, r0, ip, asr #11
  1040a0:	00104a54 	andeqs	r4, r0, r4, asr sl
  1040a4:	001041dc 	ldreqsb	r4, [r0], -ip
  1040a8:	001048ac 	andeqs	r4, r0, ip, lsr #17
  1040ac:	001048d8 	ldreqsb	r4, [r0], -r8
  1040b0:	001045cc 	andeqs	r4, r0, ip, asr #11
  1040b4:	001048f0 	ldreqsh	r4, [r0], -r0
  1040b8:	001045cc 	andeqs	r4, r0, ip, asr #11
  1040bc:	00104394 	muleqs	r0, r4, r3
  1040c0:	001045cc 	andeqs	r4, r0, ip, asr #11
  1040c4:	001045cc 	andeqs	r4, r0, ip, asr #11
  1040c8:	001048a0 	andeqs	r4, r0, r0, lsr #17
  1040cc:	e1a00001 	mov	r0, r1
  1040d0:	eb000f2b 	bl	107d84 <__sinit>
  1040d4:	eaffff2c 	b	103d8c <_vfprintf_r+0x3c>
  1040d8:	e1a0000a 	mov	r0, sl
  1040dc:	eb000873 	bl	1062b0 <__swsetup>
  1040e0:	e3500000 	cmp	r0, #0	; 0x0
  1040e4:	1a000010 	bne	10412c <.text+0x412c>
  1040e8:	e1dac0bc 	ldrh	ip, [sl, #12]
  1040ec:	eaffff2c 	b	103da4 <_vfprintf_r+0x54>
  1040f0:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1040f4:	e1a0000a 	mov	r0, sl
  1040f8:	e2811008 	add	r1, r1, #8	; 0x8
  1040fc:	ebffff03 	bl	103d10 <__sprint>
  104100:	e3500000 	cmp	r0, #0	; 0x0
  104104:	0a0001d8 	beq	10486c <.text+0x486c>
  104108:	e59d1044 	ldr	r1, [sp, #68]
  10410c:	e3510000 	cmp	r1, #0	; 0x0
  104110:	0a000002 	beq	104120 <.text+0x4120>
  104114:	e59d0010 	ldr	r0, [sp, #16]
  104118:	e59d1044 	ldr	r1, [sp, #68]
  10411c:	eb000fd7 	bl	108080 <_free_r>
  104120:	e1da30bc 	ldrh	r3, [sl, #12]
  104124:	e3130040 	tst	r3, #64	; 0x40
  104128:	0affff4b 	beq	103e5c <_vfprintf_r+0x10c>
  10412c:	e3e02000 	mvn	r2, #0	; 0x0
  104130:	e58d2020 	str	r2, [sp, #32]
  104134:	eaffff48 	b	103e5c <_vfprintf_r+0x10c>
  104138:	e59d3054 	ldr	r3, [sp, #84]
  10413c:	e3833010 	orr	r3, r3, #16	; 0x10
  104140:	e58d3054 	str	r3, [sp, #84]
  104144:	e59d4054 	ldr	r4, [sp, #84]
  104148:	e3140010 	tst	r4, #16	; 0x10
  10414c:	1a000002 	bne	10415c <.text+0x415c>
  104150:	e59d5054 	ldr	r5, [sp, #84]
  104154:	e3150040 	tst	r5, #64	; 0x40
  104158:	1a000414 	bne	1051b0 <.text+0x51b0>
  10415c:	e5991000 	ldr	r1, [r9]
  104160:	e2899004 	add	r9, r9, #4	; 0x4
  104164:	e58d9050 	str	r9, [sp, #80]
  104168:	e3510000 	cmp	r1, #0	; 0x0
  10416c:	b3a0302d 	movlt	r3, #45	; 0x2d
  104170:	a3a02001 	movge	r2, #1	; 0x1
  104174:	b2611000 	rsblt	r1, r1, #0	; 0x0
  104178:	b3a02001 	movlt	r2, #1	; 0x1
  10417c:	b5cd36af 	strltb	r3, [sp, #1711]
  104180:	e3560000 	cmp	r6, #0	; 0x0
  104184:	aa00001f 	bge	104208 <.text+0x4208>
  104188:	e3520001 	cmp	r2, #1	; 0x1
  10418c:	0a000384 	beq	104fa4 <.text+0x4fa4>
  104190:	328d0e5b 	addcc	r0, sp, #1456	; 0x5b0
  104194:	32800004 	addcc	r0, r0, #4	; 0x4
  104198:	3a0002c1 	bcc	104ca4 <.text+0x4ca4>
  10419c:	e3520002 	cmp	r2, #2	; 0x2
  1041a0:	0a00047e 	beq	1053a0 <.text+0x53a0>
  1041a4:	e59f0fcc 	ldr	r0, [pc, #4044]	; 105178 <.text+0x5178>
  1041a8:	ebfffcf2 	bl	103578 <strlen>
  1041ac:	e59fcfc4 	ldr	ip, [pc, #4036]	; 105178 <.text+0x5178>
  1041b0:	e1560000 	cmp	r6, r0
  1041b4:	a1a01006 	movge	r1, r6
  1041b8:	b1a01000 	movlt	r1, r0
  1041bc:	e1a0b000 	mov	fp, r0
  1041c0:	e58dc01c 	str	ip, [sp, #28]
  1041c4:	e58d103c 	str	r1, [sp, #60]
  1041c8:	e58d6038 	str	r6, [sp, #56]
  1041cc:	ea00002c 	b	104284 <.text+0x4284>
  1041d0:	e59d2054 	ldr	r2, [sp, #84]
  1041d4:	e3822010 	orr	r2, r2, #16	; 0x10
  1041d8:	e58d2054 	str	r2, [sp, #84]
  1041dc:	e59d3054 	ldr	r3, [sp, #84]
  1041e0:	e2132010 	ands	r2, r3, #16	; 0x10
  1041e4:	0a0003a4 	beq	10507c <.text+0x507c>
  1041e8:	e5991000 	ldr	r1, [r9]
  1041ec:	e2899004 	add	r9, r9, #4	; 0x4
  1041f0:	e58d9050 	str	r9, [sp, #80]
  1041f4:	e3a02000 	mov	r2, #0	; 0x0
  1041f8:	e3a03000 	mov	r3, #0	; 0x0
  1041fc:	e3560000 	cmp	r6, #0	; 0x0
  104200:	e5cd36af 	strb	r3, [sp, #1711]
  104204:	baffffdf 	blt	104188 <.text+0x4188>
  104208:	e59d3054 	ldr	r3, [sp, #84]
  10420c:	e3560000 	cmp	r6, #0	; 0x0
  104210:	03510000 	cmpeq	r1, #0	; 0x0
  104214:	e3c33080 	bic	r3, r3, #128	; 0x80
  104218:	e58d3054 	str	r3, [sp, #84]
  10421c:	1affffd9 	bne	104188 <.text+0x4188>
  104220:	e3520000 	cmp	r2, #0	; 0x0
  104224:	128d2e5b 	addne	r2, sp, #1456	; 0x5b0
  104228:	12822004 	addne	r2, r2, #4	; 0x4
  10422c:	158d201c 	strne	r2, [sp, #28]
  104230:	1a000009 	bne	10425c <.text+0x425c>
  104234:	e59d3054 	ldr	r3, [sp, #84]
  104238:	e3130001 	tst	r3, #1	; 0x1
  10423c:	028d4e5b 	addeq	r4, sp, #1456	; 0x5b0
  104240:	128d5e5b 	addne	r5, sp, #1456	; 0x5b0
  104244:	02844004 	addeq	r4, r4, #4	; 0x4
  104248:	13a03030 	movne	r3, #48	; 0x30
  10424c:	12855003 	addne	r5, r5, #3	; 0x3
  104250:	058d401c 	streq	r4, [sp, #28]
  104254:	15cd35b3 	strneb	r3, [sp, #1459]
  104258:	158d501c 	strne	r5, [sp, #28]
  10425c:	e28d5e45 	add	r5, sp, #1104	; 0x450
  104260:	e59dc01c 	ldr	ip, [sp, #28]
  104264:	e2855008 	add	r5, r5, #8	; 0x8
  104268:	e06c3005 	rsb	r3, ip, r5
  10426c:	e283bf57 	add	fp, r3, #348	; 0x15c
  104270:	e156000b 	cmp	r6, fp
  104274:	a1a01006 	movge	r1, r6
  104278:	b1a0100b 	movlt	r1, fp
  10427c:	e58d103c 	str	r1, [sp, #60]
  104280:	e58d6038 	str	r6, [sp, #56]
  104284:	e5dd36af 	ldrb	r3, [sp, #1711]
  104288:	e3530000 	cmp	r3, #0	; 0x0
  10428c:	0a0000dc 	beq	104604 <.text+0x4604>
  104290:	e59d103c 	ldr	r1, [sp, #60]
  104294:	e59d4054 	ldr	r4, [sp, #84]
  104298:	e2811001 	add	r1, r1, #1	; 0x1
  10429c:	e2144084 	ands	r4, r4, #132	; 0x84
  1042a0:	e58d103c 	str	r1, [sp, #60]
  1042a4:	e58d4014 	str	r4, [sp, #20]
  1042a8:	1a0000de 	bne	104628 <.text+0x4628>
  1042ac:	e59d5024 	ldr	r5, [sp, #36]
  1042b0:	e59dc03c 	ldr	ip, [sp, #60]
  1042b4:	e06c4005 	rsb	r4, ip, r5
  1042b8:	e3540000 	cmp	r4, #0	; 0x0
  1042bc:	da0000d9 	ble	104628 <.text+0x4628>
  1042c0:	e3540010 	cmp	r4, #16	; 0x10
  1042c4:	da000484 	ble	1054dc <.text+0x54dc>
  1042c8:	e59d6680 	ldr	r6, [sp, #1664]
  1042cc:	e59d567c 	ldr	r5, [sp, #1660]
  1042d0:	e59f9ec8 	ldr	r9, [pc, #3784]	; 1051a0 <.text+0x51a0>
  1042d4:	ea000002 	b	1042e4 <.text+0x42e4>
  1042d8:	e2444010 	sub	r4, r4, #16	; 0x10
  1042dc:	e3540010 	cmp	r4, #16	; 0x10
  1042e0:	da000015 	ble	10433c <.text+0x433c>
  1042e4:	e2855001 	add	r5, r5, #1	; 0x1
  1042e8:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1042ec:	e2866010 	add	r6, r6, #16	; 0x10
  1042f0:	e3a03010 	mov	r3, #16	; 0x10
  1042f4:	e3550007 	cmp	r5, #7	; 0x7
  1042f8:	e5883004 	str	r3, [r8, #4]
  1042fc:	e5889000 	str	r9, [r8]
  104300:	e1a0000a 	mov	r0, sl
  104304:	e2811008 	add	r1, r1, #8	; 0x8
  104308:	e2888008 	add	r8, r8, #8	; 0x8
  10430c:	e58d6680 	str	r6, [sp, #1664]
  104310:	e58d567c 	str	r5, [sp, #1660]
  104314:	daffffef 	ble	1042d8 <.text+0x42d8>
  104318:	ebfffe7c 	bl	103d10 <__sprint>
  10431c:	e3500000 	cmp	r0, #0	; 0x0
  104320:	1affff78 	bne	104108 <.text+0x4108>
  104324:	e2444010 	sub	r4, r4, #16	; 0x10
  104328:	e3540010 	cmp	r4, #16	; 0x10
  10432c:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104330:	e59d6680 	ldr	r6, [sp, #1664]
  104334:	e59d567c 	ldr	r5, [sp, #1660]
  104338:	caffffe9 	bgt	1042e4 <.text+0x42e4>
  10433c:	e2855001 	add	r5, r5, #1	; 0x1
  104340:	e0866004 	add	r6, r6, r4
  104344:	e3550007 	cmp	r5, #7	; 0x7
  104348:	e5889000 	str	r9, [r8]
  10434c:	e5884004 	str	r4, [r8, #4]
  104350:	e58d6680 	str	r6, [sp, #1664]
  104354:	e58d567c 	str	r5, [sp, #1660]
  104358:	d2888008 	addle	r8, r8, #8	; 0x8
  10435c:	da0000b3 	ble	104630 <.text+0x4630>
  104360:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104364:	e1a0000a 	mov	r0, sl
  104368:	e2811008 	add	r1, r1, #8	; 0x8
  10436c:	ebfffe67 	bl	103d10 <__sprint>
  104370:	e3500000 	cmp	r0, #0	; 0x0
  104374:	1affff63 	bne	104108 <.text+0x4108>
  104378:	e59d6680 	ldr	r6, [sp, #1664]
  10437c:	e59d567c 	ldr	r5, [sp, #1660]
  104380:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104384:	ea0000a9 	b	104630 <.text+0x4630>
  104388:	e59d1054 	ldr	r1, [sp, #84]
  10438c:	e3811010 	orr	r1, r1, #16	; 0x10
  104390:	e58d1054 	str	r1, [sp, #84]
  104394:	e59d2054 	ldr	r2, [sp, #84]
  104398:	e3120010 	tst	r2, #16	; 0x10
  10439c:	1a000002 	bne	1043ac <.text+0x43ac>
  1043a0:	e59d3054 	ldr	r3, [sp, #84]
  1043a4:	e3130040 	tst	r3, #64	; 0x40
  1043a8:	1a00036b 	bne	10515c <.text+0x515c>
  1043ac:	e5991000 	ldr	r1, [r9]
  1043b0:	e3a02001 	mov	r2, #1	; 0x1
  1043b4:	e2899004 	add	r9, r9, #4	; 0x4
  1043b8:	e58d9050 	str	r9, [sp, #80]
  1043bc:	eaffff8d 	b	1041f8 <.text+0x41f8>
  1043c0:	e26cc000 	rsb	ip, ip, #0	; 0x0
  1043c4:	e58dc024 	str	ip, [sp, #36]
  1043c8:	e1a09002 	mov	r9, r2
  1043cc:	e59d1018 	ldr	r1, [sp, #24]
  1043d0:	e59d2054 	ldr	r2, [sp, #84]
  1043d4:	e5d13000 	ldrb	r3, [r1]
  1043d8:	e3822004 	orr	r2, r2, #4	; 0x4
  1043dc:	e58d2054 	str	r2, [sp, #84]
  1043e0:	eafffed8 	b	103f48 <_vfprintf_r+0x1f8>
  1043e4:	e5dd36af 	ldrb	r3, [sp, #1711]
  1043e8:	e3530000 	cmp	r3, #0	; 0x0
  1043ec:	0a000355 	beq	105148 <.text+0x5148>
  1043f0:	e59d5018 	ldr	r5, [sp, #24]
  1043f4:	e5d53000 	ldrb	r3, [r5]
  1043f8:	eafffed2 	b	103f48 <_vfprintf_r+0x1f8>
  1043fc:	e59d4018 	ldr	r4, [sp, #24]
  104400:	e59d5054 	ldr	r5, [sp, #84]
  104404:	e5d43000 	ldrb	r3, [r4]
  104408:	e3855001 	orr	r5, r5, #1	; 0x1
  10440c:	e58d5054 	str	r5, [sp, #84]
  104410:	eafffecc 	b	103f48 <_vfprintf_r+0x1f8>
  104414:	e599c000 	ldr	ip, [r9]
  104418:	e35c0000 	cmp	ip, #0	; 0x0
  10441c:	e58dc024 	str	ip, [sp, #36]
  104420:	e2892004 	add	r2, r9, #4	; 0x4
  104424:	baffffe5 	blt	1043c0 <.text+0x43c0>
  104428:	e59d4018 	ldr	r4, [sp, #24]
  10442c:	e5d43000 	ldrb	r3, [r4]
  104430:	e1a09002 	mov	r9, r2
  104434:	eafffec3 	b	103f48 <_vfprintf_r+0x1f8>
  104438:	e3a0302b 	mov	r3, #43	; 0x2b
  10443c:	e5cd36af 	strb	r3, [sp, #1711]
  104440:	e59d4018 	ldr	r4, [sp, #24]
  104444:	e5d43000 	ldrb	r3, [r4]
  104448:	eafffebe 	b	103f48 <_vfprintf_r+0x1f8>
  10444c:	e59f4d28 	ldr	r4, [pc, #3368]	; 10517c <.text+0x517c>
  104450:	e58d4040 	str	r4, [sp, #64]
  104454:	e59d5054 	ldr	r5, [sp, #84]
  104458:	e3150010 	tst	r5, #16	; 0x10
  10445c:	1a000002 	bne	10446c <.text+0x446c>
  104460:	e59dc054 	ldr	ip, [sp, #84]
  104464:	e31c0040 	tst	ip, #64	; 0x40
  104468:	1a000356 	bne	1051c8 <.text+0x51c8>
  10446c:	e5991000 	ldr	r1, [r9]
  104470:	e2899004 	add	r9, r9, #4	; 0x4
  104474:	e58d9050 	str	r9, [sp, #80]
  104478:	e59d3054 	ldr	r3, [sp, #84]
  10447c:	e3510000 	cmp	r1, #0	; 0x0
  104480:	03a03000 	moveq	r3, #0	; 0x0
  104484:	12033001 	andne	r3, r3, #1	; 0x1
  104488:	e3530000 	cmp	r3, #0	; 0x0
  10448c:	159d2054 	ldrne	r2, [sp, #84]
  104490:	13822002 	orrne	r2, r2, #2	; 0x2
  104494:	158d2054 	strne	r2, [sp, #84]
  104498:	e3a02002 	mov	r2, #2	; 0x2
  10449c:	eaffff55 	b	1041f8 <.text+0x41f8>
  1044a0:	e3570043 	cmp	r7, #67	; 0x43
  1044a4:	0a000002 	beq	1044b4 <.text+0x44b4>
  1044a8:	e59d1054 	ldr	r1, [sp, #84]
  1044ac:	e3110010 	tst	r1, #16	; 0x10
  1044b0:	0a00037a 	beq	1052a0 <.text+0x52a0>
  1044b4:	e28d4d1a 	add	r4, sp, #1664	; 0x680
  1044b8:	e284400c 	add	r4, r4, #12	; 0xc
  1044bc:	e28d5e45 	add	r5, sp, #1104	; 0x450
  1044c0:	e3a01000 	mov	r1, #0	; 0x0
  1044c4:	e3a02008 	mov	r2, #8	; 0x8
  1044c8:	e1a00004 	mov	r0, r4
  1044cc:	e2855008 	add	r5, r5, #8	; 0x8
  1044d0:	ebfffa34 	bl	102da8 <memset>
  1044d4:	e1a03004 	mov	r3, r4
  1044d8:	e59d0010 	ldr	r0, [sp, #16]
  1044dc:	e1a01005 	mov	r1, r5
  1044e0:	e5992000 	ldr	r2, [r9]
  1044e4:	eb0005eb 	bl	105c98 <_wcrtomb_r>
  1044e8:	e3700001 	cmn	r0, #1	; 0x1
  1044ec:	e1a0b000 	mov	fp, r0
  1044f0:	0a000565 	beq	105a8c <.text+0x5a8c>
  1044f4:	e2899004 	add	r9, r9, #4	; 0x4
  1044f8:	e58d9050 	str	r9, [sp, #80]
  1044fc:	e35b0000 	cmp	fp, #0	; 0x0
  104500:	a1a0200b 	movge	r2, fp
  104504:	b3a02000 	movlt	r2, #0	; 0x0
  104508:	e3a03000 	mov	r3, #0	; 0x0
  10450c:	e58d203c 	str	r2, [sp, #60]
  104510:	e58d501c 	str	r5, [sp, #28]
  104514:	e5cd36af 	strb	r3, [sp, #1711]
  104518:	ea000037 	b	1045fc <.text+0x45fc>
  10451c:	e3760001 	cmn	r6, #1	; 0x1
  104520:	02866007 	addeq	r6, r6, #7	; 0x7
  104524:	0a000002 	beq	104534 <.text+0x4534>
  104528:	e3570047 	cmp	r7, #71	; 0x47
  10452c:	13570067 	cmpne	r7, #103	; 0x67
  104530:	0a000362 	beq	1052c0 <.text+0x52c0>
  104534:	e59dc054 	ldr	ip, [sp, #84]
  104538:	e31c0008 	tst	ip, #8	; 0x8
  10453c:	0a0002fb 	beq	105130 <.text+0x5130>
  104540:	e8990006 	ldmia	r9, {r1, r2}
  104544:	e2899008 	add	r9, r9, #8	; 0x8
  104548:	e58d1048 	str	r1, [sp, #72]
  10454c:	e58d204c 	str	r2, [sp, #76]
  104550:	e58d9050 	str	r9, [sp, #80]
  104554:	e28d0048 	add	r0, sp, #72	; 0x48
  104558:	e8900003 	ldmia	r0, {r0, r1}
  10455c:	eb0014c5 	bl	109878 <isinf>
  104560:	e2504000 	subs	r4, r0, #0	; 0x0
  104564:	0a0003c4 	beq	10547c <.text+0x547c>
  104568:	e3a03000 	mov	r3, #0	; 0x0
  10456c:	e28d0048 	add	r0, sp, #72	; 0x48
  104570:	e8900003 	ldmia	r0, {r0, r1}
  104574:	e3a02000 	mov	r2, #0	; 0x0
  104578:	eb0017dd 	bl	10a4f4 <__ledf2>
  10457c:	e3500000 	cmp	r0, #0	; 0x0
  104580:	b3a0302d 	movlt	r3, #45	; 0x2d
  104584:	b5cd36af 	strltb	r3, [sp, #1711]
  104588:	e2473045 	sub	r3, r7, #69	; 0x45
  10458c:	e3530002 	cmp	r3, #2	; 0x2
  104590:	8a0003a8 	bhi	105438 <.text+0x5438>
  104594:	e3a03003 	mov	r3, #3	; 0x3
  104598:	e59f4be0 	ldr	r4, [pc, #3040]	; 105180 <.text+0x5180>
  10459c:	e3a05000 	mov	r5, #0	; 0x0
  1045a0:	e1a0b003 	mov	fp, r3
  1045a4:	e58d303c 	str	r3, [sp, #60]
  1045a8:	e58d401c 	str	r4, [sp, #28]
  1045ac:	e58d5038 	str	r5, [sp, #56]
  1045b0:	eaffff33 	b	104284 <.text+0x4284>
  1045b4:	e59d5018 	ldr	r5, [sp, #24]
  1045b8:	e59dc054 	ldr	ip, [sp, #84]
  1045bc:	e5d53000 	ldrb	r3, [r5]
  1045c0:	e38cc040 	orr	ip, ip, #64	; 0x40
  1045c4:	e58dc054 	str	ip, [sp, #84]
  1045c8:	eafffe5e 	b	103f48 <_vfprintf_r+0x1f8>
  1045cc:	e3570000 	cmp	r7, #0	; 0x0
  1045d0:	0a000543 	beq	105ae4 <.text+0x5ae4>
  1045d4:	e28d3e45 	add	r3, sp, #1104	; 0x450
  1045d8:	e2833008 	add	r3, r3, #8	; 0x8
  1045dc:	e3a02001 	mov	r2, #1	; 0x1
  1045e0:	e58d301c 	str	r3, [sp, #28]
  1045e4:	e3a03000 	mov	r3, #0	; 0x0
  1045e8:	e58d203c 	str	r2, [sp, #60]
  1045ec:	e58d9050 	str	r9, [sp, #80]
  1045f0:	e5cd36af 	strb	r3, [sp, #1711]
  1045f4:	e5cd7458 	strb	r7, [sp, #1112]
  1045f8:	e1a0b002 	mov	fp, r2
  1045fc:	e3a05000 	mov	r5, #0	; 0x0
  104600:	e58d5038 	str	r5, [sp, #56]
  104604:	e59d2054 	ldr	r2, [sp, #84]
  104608:	e3120002 	tst	r2, #2	; 0x2
  10460c:	159d303c 	ldrne	r3, [sp, #60]
  104610:	e59d4054 	ldr	r4, [sp, #84]
  104614:	12833002 	addne	r3, r3, #2	; 0x2
  104618:	158d303c 	strne	r3, [sp, #60]
  10461c:	e2144084 	ands	r4, r4, #132	; 0x84
  104620:	e58d4014 	str	r4, [sp, #20]
  104624:	0affff20 	beq	1042ac <.text+0x42ac>
  104628:	e59d6680 	ldr	r6, [sp, #1664]
  10462c:	e59d567c 	ldr	r5, [sp, #1660]
  104630:	e5dd36af 	ldrb	r3, [sp, #1711]
  104634:	e3530000 	cmp	r3, #0	; 0x0
  104638:	0a000147 	beq	104b5c <.text+0x4b5c>
  10463c:	e2855001 	add	r5, r5, #1	; 0x1
  104640:	e28d3e6a 	add	r3, sp, #1696	; 0x6a0
  104644:	e2866001 	add	r6, r6, #1	; 0x1
  104648:	e283300f 	add	r3, r3, #15	; 0xf
  10464c:	e3a02001 	mov	r2, #1	; 0x1
  104650:	e3550007 	cmp	r5, #7	; 0x7
  104654:	e5883000 	str	r3, [r8]
  104658:	e5882004 	str	r2, [r8, #4]
  10465c:	e58d6680 	str	r6, [sp, #1664]
  104660:	e58d567c 	str	r5, [sp, #1660]
  104664:	ca00014d 	bgt	104ba0 <.text+0x4ba0>
  104668:	e2888008 	add	r8, r8, #8	; 0x8
  10466c:	e59d2014 	ldr	r2, [sp, #20]
  104670:	e3520080 	cmp	r2, #128	; 0x80
  104674:	0a000155 	beq	104bd0 <.text+0x4bd0>
  104678:	e59d1038 	ldr	r1, [sp, #56]
  10467c:	e06b4001 	rsb	r4, fp, r1
  104680:	e3540000 	cmp	r4, #0	; 0x0
  104684:	da00002e 	ble	104744 <.text+0x4744>
  104688:	e3540010 	cmp	r4, #16	; 0x10
  10468c:	da000367 	ble	105430 <.text+0x5430>
  104690:	e59f9b0c 	ldr	r9, [pc, #2828]	; 1051a4 <.text+0x51a4>
  104694:	ea000002 	b	1046a4 <.text+0x46a4>
  104698:	e2444010 	sub	r4, r4, #16	; 0x10
  10469c:	e3540010 	cmp	r4, #16	; 0x10
  1046a0:	da000015 	ble	1046fc <.text+0x46fc>
  1046a4:	e2855001 	add	r5, r5, #1	; 0x1
  1046a8:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1046ac:	e2866010 	add	r6, r6, #16	; 0x10
  1046b0:	e3a03010 	mov	r3, #16	; 0x10
  1046b4:	e3550007 	cmp	r5, #7	; 0x7
  1046b8:	e5883004 	str	r3, [r8, #4]
  1046bc:	e5889000 	str	r9, [r8]
  1046c0:	e1a0000a 	mov	r0, sl
  1046c4:	e2811008 	add	r1, r1, #8	; 0x8
  1046c8:	e2888008 	add	r8, r8, #8	; 0x8
  1046cc:	e58d6680 	str	r6, [sp, #1664]
  1046d0:	e58d567c 	str	r5, [sp, #1660]
  1046d4:	daffffef 	ble	104698 <.text+0x4698>
  1046d8:	ebfffd8c 	bl	103d10 <__sprint>
  1046dc:	e3500000 	cmp	r0, #0	; 0x0
  1046e0:	1afffe88 	bne	104108 <.text+0x4108>
  1046e4:	e2444010 	sub	r4, r4, #16	; 0x10
  1046e8:	e3540010 	cmp	r4, #16	; 0x10
  1046ec:	e28d8e61 	add	r8, sp, #1552	; 0x610
  1046f0:	e59d6680 	ldr	r6, [sp, #1664]
  1046f4:	e59d567c 	ldr	r5, [sp, #1660]
  1046f8:	caffffe9 	bgt	1046a4 <.text+0x46a4>
  1046fc:	e2855001 	add	r5, r5, #1	; 0x1
  104700:	e0866004 	add	r6, r6, r4
  104704:	e3550007 	cmp	r5, #7	; 0x7
  104708:	e5889000 	str	r9, [r8]
  10470c:	e5884004 	str	r4, [r8, #4]
  104710:	e58d6680 	str	r6, [sp, #1664]
  104714:	e58d567c 	str	r5, [sp, #1660]
  104718:	d2888008 	addle	r8, r8, #8	; 0x8
  10471c:	da000008 	ble	104744 <.text+0x4744>
  104720:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104724:	e1a0000a 	mov	r0, sl
  104728:	e2811008 	add	r1, r1, #8	; 0x8
  10472c:	ebfffd77 	bl	103d10 <__sprint>
  104730:	e3500000 	cmp	r0, #0	; 0x0
  104734:	1afffe73 	bne	104108 <.text+0x4108>
  104738:	e59d6680 	ldr	r6, [sp, #1664]
  10473c:	e59d567c 	ldr	r5, [sp, #1660]
  104740:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104744:	e59d2054 	ldr	r2, [sp, #84]
  104748:	e3120c01 	tst	r2, #256	; 0x100
  10474c:	1a000163 	bne	104ce0 <.text+0x4ce0>
  104750:	e2855001 	add	r5, r5, #1	; 0x1
  104754:	e59d301c 	ldr	r3, [sp, #28]
  104758:	e086600b 	add	r6, r6, fp
  10475c:	e3550007 	cmp	r5, #7	; 0x7
  104760:	e8880808 	stmia	r8, {r3, fp}
  104764:	e58d6680 	str	r6, [sp, #1664]
  104768:	e58d567c 	str	r5, [sp, #1660]
  10476c:	d288c008 	addle	ip, r8, #8	; 0x8
  104770:	ca0001c6 	bgt	104e90 <.text+0x4e90>
  104774:	e59d1054 	ldr	r1, [sp, #84]
  104778:	e3110004 	tst	r1, #4	; 0x4
  10477c:	0a000031 	beq	104848 <.text+0x4848>
  104780:	e59d2024 	ldr	r2, [sp, #36]
  104784:	e59d303c 	ldr	r3, [sp, #60]
  104788:	e0634002 	rsb	r4, r3, r2
  10478c:	e3540000 	cmp	r4, #0	; 0x0
  104790:	da00002c 	ble	104848 <.text+0x4848>
  104794:	e3540010 	cmp	r4, #16	; 0x10
  104798:	da000393 	ble	1055ec <.text+0x55ec>
  10479c:	e59d567c 	ldr	r5, [sp, #1660]
  1047a0:	e59f99f8 	ldr	r9, [pc, #2552]	; 1051a0 <.text+0x51a0>
  1047a4:	ea000002 	b	1047b4 <.text+0x47b4>
  1047a8:	e2444010 	sub	r4, r4, #16	; 0x10
  1047ac:	e3540010 	cmp	r4, #16	; 0x10
  1047b0:	da000015 	ble	10480c <.text+0x480c>
  1047b4:	e2855001 	add	r5, r5, #1	; 0x1
  1047b8:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1047bc:	e2866010 	add	r6, r6, #16	; 0x10
  1047c0:	e3a03010 	mov	r3, #16	; 0x10
  1047c4:	e3550007 	cmp	r5, #7	; 0x7
  1047c8:	e58c3004 	str	r3, [ip, #4]
  1047cc:	e58c9000 	str	r9, [ip]
  1047d0:	e1a0000a 	mov	r0, sl
  1047d4:	e2811008 	add	r1, r1, #8	; 0x8
  1047d8:	e28cc008 	add	ip, ip, #8	; 0x8
  1047dc:	e58d6680 	str	r6, [sp, #1664]
  1047e0:	e58d567c 	str	r5, [sp, #1660]
  1047e4:	daffffef 	ble	1047a8 <.text+0x47a8>
  1047e8:	ebfffd48 	bl	103d10 <__sprint>
  1047ec:	e3500000 	cmp	r0, #0	; 0x0
  1047f0:	1afffe44 	bne	104108 <.text+0x4108>
  1047f4:	e2444010 	sub	r4, r4, #16	; 0x10
  1047f8:	e3540010 	cmp	r4, #16	; 0x10
  1047fc:	e28dce61 	add	ip, sp, #1552	; 0x610
  104800:	e59d6680 	ldr	r6, [sp, #1664]
  104804:	e59d567c 	ldr	r5, [sp, #1660]
  104808:	caffffe9 	bgt	1047b4 <.text+0x47b4>
  10480c:	e2855001 	add	r5, r5, #1	; 0x1
  104810:	e0866004 	add	r6, r6, r4
  104814:	e3550007 	cmp	r5, #7	; 0x7
  104818:	e58c9000 	str	r9, [ip]
  10481c:	e58c4004 	str	r4, [ip, #4]
  104820:	e58d6680 	str	r6, [sp, #1664]
  104824:	e58d567c 	str	r5, [sp, #1660]
  104828:	da000006 	ble	104848 <.text+0x4848>
  10482c:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104830:	e1a0000a 	mov	r0, sl
  104834:	e2811008 	add	r1, r1, #8	; 0x8
  104838:	ebfffd34 	bl	103d10 <__sprint>
  10483c:	e3500000 	cmp	r0, #0	; 0x0
  104840:	1afffe30 	bne	104108 <.text+0x4108>
  104844:	e59d6680 	ldr	r6, [sp, #1664]
  104848:	e28d4020 	add	r4, sp, #32	; 0x20
  10484c:	e8940030 	ldmia	r4, {r4, r5}
  104850:	e59d803c 	ldr	r8, [sp, #60]
  104854:	e1550008 	cmp	r5, r8
  104858:	a0844005 	addge	r4, r4, r5
  10485c:	b0844008 	addlt	r4, r4, r8
  104860:	e3560000 	cmp	r6, #0	; 0x0
  104864:	e58d4020 	str	r4, [sp, #32]
  104868:	1afffe20 	bne	1040f0 <.text+0x40f0>
  10486c:	e59dc044 	ldr	ip, [sp, #68]
  104870:	e3a05000 	mov	r5, #0	; 0x0
  104874:	e35c0000 	cmp	ip, #0	; 0x0
  104878:	e58d567c 	str	r5, [sp, #1660]
  10487c:	028d8e61 	addeq	r8, sp, #1552	; 0x610
  104880:	0a000004 	beq	104898 <.text+0x4898>
  104884:	e1a0100c 	mov	r1, ip
  104888:	e59d0010 	ldr	r0, [sp, #16]
  10488c:	eb000dfb 	bl	108080 <_free_r>
  104890:	e58d5044 	str	r5, [sp, #68]
  104894:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104898:	e59d9050 	ldr	r9, [sp, #80]
  10489c:	eafffd80 	b	103ea4 <_vfprintf_r+0x154>
  1048a0:	e59f18dc 	ldr	r1, [pc, #2268]	; 105184 <.text+0x5184>
  1048a4:	e58d1040 	str	r1, [sp, #64]
  1048a8:	eafffee9 	b	104454 <.text+0x4454>
  1048ac:	e59dc054 	ldr	ip, [sp, #84]
  1048b0:	e5991000 	ldr	r1, [r9]
  1048b4:	e59f58c8 	ldr	r5, [pc, #2248]	; 105184 <.text+0x5184>
  1048b8:	e38cc002 	orr	ip, ip, #2	; 0x2
  1048bc:	e2899004 	add	r9, r9, #4	; 0x4
  1048c0:	e3a07078 	mov	r7, #120	; 0x78
  1048c4:	e3a02002 	mov	r2, #2	; 0x2
  1048c8:	e58d5040 	str	r5, [sp, #64]
  1048cc:	e58dc054 	str	ip, [sp, #84]
  1048d0:	e58d9050 	str	r9, [sp, #80]
  1048d4:	eafffe47 	b	1041f8 <.text+0x41f8>
  1048d8:	e59d5018 	ldr	r5, [sp, #24]
  1048dc:	e59dc054 	ldr	ip, [sp, #84]
  1048e0:	e5d53000 	ldrb	r3, [r5]
  1048e4:	e38cc010 	orr	ip, ip, #16	; 0x10
  1048e8:	e58dc054 	str	ip, [sp, #84]
  1048ec:	eafffd95 	b	103f48 <_vfprintf_r+0x1f8>
  1048f0:	e3a04000 	mov	r4, #0	; 0x0
  1048f4:	e5cd46af 	strb	r4, [sp, #1711]
  1048f8:	e5991000 	ldr	r1, [r9]
  1048fc:	e2899004 	add	r9, r9, #4	; 0x4
  104900:	e1510004 	cmp	r1, r4
  104904:	e58d101c 	str	r1, [sp, #28]
  104908:	e58d9050 	str	r9, [sp, #80]
  10490c:	0a000330 	beq	1055d4 <.text+0x55d4>
  104910:	e3570053 	cmp	r7, #83	; 0x53
  104914:	0a000002 	beq	104924 <.text+0x4924>
  104918:	e59d2054 	ldr	r2, [sp, #84]
  10491c:	e2125010 	ands	r5, r2, #16	; 0x10
  104920:	0a000269 	beq	1052cc <.text+0x52cc>
  104924:	e28d9d1a 	add	r9, sp, #1664	; 0x680
  104928:	e59d301c 	ldr	r3, [sp, #28]
  10492c:	e2899004 	add	r9, r9, #4	; 0x4
  104930:	e1a00009 	mov	r0, r9
  104934:	e1a01004 	mov	r1, r4
  104938:	e3a02008 	mov	r2, #8	; 0x8
  10493c:	e58d36a4 	str	r3, [sp, #1700]
  104940:	ebfff918 	bl	102da8 <memset>
  104944:	e3560000 	cmp	r6, #0	; 0x0
  104948:	ba000443 	blt	105a5c <.text+0x5a5c>
  10494c:	e28d5e45 	add	r5, sp, #1104	; 0x450
  104950:	e1a0b004 	mov	fp, r4
  104954:	e2855008 	add	r5, r5, #8	; 0x8
  104958:	e59d36a4 	ldr	r3, [sp, #1700]
  10495c:	e794c003 	ldr	ip, [r4, r3]
  104960:	e35c0000 	cmp	ip, #0	; 0x0
  104964:	e1a0200c 	mov	r2, ip
  104968:	e59d0010 	ldr	r0, [sp, #16]
  10496c:	e1a01005 	mov	r1, r5
  104970:	e1a03009 	mov	r3, r9
  104974:	0a000009 	beq	1049a0 <.text+0x49a0>
  104978:	eb0004c6 	bl	105c98 <_wcrtomb_r>
  10497c:	e3700001 	cmn	r0, #1	; 0x1
  104980:	e08b3000 	add	r3, fp, r0
  104984:	0a000440 	beq	105a8c <.text+0x5a8c>
  104988:	e1560003 	cmp	r6, r3
  10498c:	ba000003 	blt	1049a0 <.text+0x49a0>
  104990:	e1a0b003 	mov	fp, r3
  104994:	e2844004 	add	r4, r4, #4	; 0x4
  104998:	1affffee 	bne	104958 <.text+0x4958>
  10499c:	e1a0b006 	mov	fp, r6
  1049a0:	e35b0000 	cmp	fp, #0	; 0x0
  1049a4:	058db038 	streq	fp, [sp, #56]
  1049a8:	058db03c 	streq	fp, [sp, #60]
  1049ac:	0afffe34 	beq	104284 <.text+0x4284>
  1049b0:	e59d0010 	ldr	r0, [sp, #16]
  1049b4:	e28b1001 	add	r1, fp, #1	; 0x1
  1049b8:	ebfff71e 	bl	102638 <_malloc_r>
  1049bc:	e3500000 	cmp	r0, #0	; 0x0
  1049c0:	0a000431 	beq	105a8c <.text+0x5a8c>
  1049c4:	e58d0044 	str	r0, [sp, #68]
  1049c8:	e3a01000 	mov	r1, #0	; 0x0
  1049cc:	e3a02008 	mov	r2, #8	; 0x8
  1049d0:	e1a00009 	mov	r0, r9
  1049d4:	ebfff8f3 	bl	102da8 <memset>
  1049d8:	e28d2e6a 	add	r2, sp, #1696	; 0x6a0
  1049dc:	e59d0010 	ldr	r0, [sp, #16]
  1049e0:	e59d1044 	ldr	r1, [sp, #68]
  1049e4:	e2822004 	add	r2, r2, #4	; 0x4
  1049e8:	e1a0300b 	mov	r3, fp
  1049ec:	e58d9000 	str	r9, [sp]
  1049f0:	eb0004c8 	bl	105d18 <_wcsrtombs_r>
  1049f4:	e15b0000 	cmp	fp, r0
  1049f8:	1a000492 	bne	105c48 <.text+0x5c48>
  1049fc:	e3a03000 	mov	r3, #0	; 0x0
  104a00:	e59dc044 	ldr	ip, [sp, #68]
  104a04:	e15b0003 	cmp	fp, r3
  104a08:	a1a0500b 	movge	r5, fp
  104a0c:	b1a05003 	movlt	r5, r3
  104a10:	e58d503c 	str	r5, [sp, #60]
  104a14:	e58d3038 	str	r3, [sp, #56]
  104a18:	e58dc01c 	str	ip, [sp, #28]
  104a1c:	e7cc300b 	strb	r3, [ip, fp]
  104a20:	eafffe17 	b	104284 <.text+0x4284>
  104a24:	e59d1018 	ldr	r1, [sp, #24]
  104a28:	e5d13000 	ldrb	r3, [r1]
  104a2c:	e353006c 	cmp	r3, #108	; 0x6c
  104a30:	059d2054 	ldreq	r2, [sp, #84]
  104a34:	159d4054 	ldrne	r4, [sp, #84]
  104a38:	05f13001 	ldreqb	r3, [r1, #1]!
  104a3c:	03822010 	orreq	r2, r2, #16	; 0x10
  104a40:	13844010 	orrne	r4, r4, #16	; 0x10
  104a44:	058d1018 	streq	r1, [sp, #24]
  104a48:	058d2054 	streq	r2, [sp, #84]
  104a4c:	158d4054 	strne	r4, [sp, #84]
  104a50:	eafffd3c 	b	103f48 <_vfprintf_r+0x1f8>
  104a54:	e59d3054 	ldr	r3, [sp, #84]
  104a58:	e3130010 	tst	r3, #16	; 0x10
  104a5c:	1a0001df 	bne	1051e0 <.text+0x51e0>
  104a60:	e59d5054 	ldr	r5, [sp, #84]
  104a64:	e3150040 	tst	r5, #64	; 0x40
  104a68:	15993000 	ldrne	r3, [r9]
  104a6c:	05993000 	ldreq	r3, [r9]
  104a70:	12899004 	addne	r9, r9, #4	; 0x4
  104a74:	02899004 	addeq	r9, r9, #4	; 0x4
  104a78:	158d9050 	strne	r9, [sp, #80]
  104a7c:	058d9050 	streq	r9, [sp, #80]
  104a80:	159dc020 	ldrne	ip, [sp, #32]
  104a84:	059d1020 	ldreq	r1, [sp, #32]
  104a88:	e59d9050 	ldr	r9, [sp, #80]
  104a8c:	11c3c0b0 	strneh	ip, [r3]
  104a90:	05831000 	streq	r1, [r3]
  104a94:	eafffd02 	b	103ea4 <_vfprintf_r+0x154>
  104a98:	e59d2018 	ldr	r2, [sp, #24]
  104a9c:	e59d4054 	ldr	r4, [sp, #84]
  104aa0:	e5d23000 	ldrb	r3, [r2]
  104aa4:	e3844008 	orr	r4, r4, #8	; 0x8
  104aa8:	e58d4054 	str	r4, [sp, #84]
  104aac:	eafffd25 	b	103f48 <_vfprintf_r+0x1f8>
  104ab0:	e59d5018 	ldr	r5, [sp, #24]
  104ab4:	e59dc054 	ldr	ip, [sp, #84]
  104ab8:	e5d53000 	ldrb	r3, [r5]
  104abc:	e38cc080 	orr	ip, ip, #128	; 0x80
  104ac0:	e58dc054 	str	ip, [sp, #84]
  104ac4:	eafffd1f 	b	103f48 <_vfprintf_r+0x1f8>
  104ac8:	e3a03000 	mov	r3, #0	; 0x0
  104acc:	e59d1018 	ldr	r1, [sp, #24]
  104ad0:	e0832103 	add	r2, r3, r3, lsl #2
  104ad4:	e0872082 	add	r2, r7, r2, lsl #1
  104ad8:	e4d17001 	ldrb	r7, [r1], #1
  104adc:	e2473030 	sub	r3, r7, #48	; 0x30
  104ae0:	e3530009 	cmp	r3, #9	; 0x9
  104ae4:	e58d1018 	str	r1, [sp, #24]
  104ae8:	e2423030 	sub	r3, r2, #48	; 0x30
  104aec:	9afffff6 	bls	104acc <.text+0x4acc>
  104af0:	e58d3024 	str	r3, [sp, #36]
  104af4:	eafffd17 	b	103f58 <_vfprintf_r+0x208>
  104af8:	e59d2018 	ldr	r2, [sp, #24]
  104afc:	e4d23001 	ldrb	r3, [r2], #1
  104b00:	e353002a 	cmp	r3, #42	; 0x2a
  104b04:	0a000439 	beq	105bf0 <.text+0x5bf0>
  104b08:	e1a07003 	mov	r7, r3
  104b0c:	e2433030 	sub	r3, r3, #48	; 0x30
  104b10:	e3530009 	cmp	r3, #9	; 0x9
  104b14:	83a06000 	movhi	r6, #0	; 0x0
  104b18:	8a00000d 	bhi	104b54 <.text+0x4b54>
  104b1c:	e59d1018 	ldr	r1, [sp, #24]
  104b20:	e3a02000 	mov	r2, #0	; 0x0
  104b24:	e0822102 	add	r2, r2, r2, lsl #2
  104b28:	e0872082 	add	r2, r7, r2, lsl #1
  104b2c:	e5f17001 	ldrb	r7, [r1, #1]!
  104b30:	e2473030 	sub	r3, r7, #48	; 0x30
  104b34:	e3530009 	cmp	r3, #9	; 0x9
  104b38:	e2422030 	sub	r2, r2, #48	; 0x30
  104b3c:	9afffff8 	bls	104b24 <.text+0x4b24>
  104b40:	e3e03000 	mvn	r3, #0	; 0x0
  104b44:	e1520003 	cmp	r2, r3
  104b48:	a1a06002 	movge	r6, r2
  104b4c:	b1a06003 	movlt	r6, r3
  104b50:	e2812001 	add	r2, r1, #1	; 0x1
  104b54:	e58d2018 	str	r2, [sp, #24]
  104b58:	eafffcfe 	b	103f58 <_vfprintf_r+0x208>
  104b5c:	e59d1054 	ldr	r1, [sp, #84]
  104b60:	e3110002 	tst	r1, #2	; 0x2
  104b64:	0afffec0 	beq	10466c <.text+0x466c>
  104b68:	e3a03030 	mov	r3, #48	; 0x30
  104b6c:	e5cd36ad 	strb	r3, [sp, #1709]
  104b70:	e2855001 	add	r5, r5, #1	; 0x1
  104b74:	e28d3e6a 	add	r3, sp, #1696	; 0x6a0
  104b78:	e2866002 	add	r6, r6, #2	; 0x2
  104b7c:	e283300d 	add	r3, r3, #13	; 0xd
  104b80:	e3a02002 	mov	r2, #2	; 0x2
  104b84:	e3550007 	cmp	r5, #7	; 0x7
  104b88:	e5cd76ae 	strb	r7, [sp, #1710]
  104b8c:	e58d6680 	str	r6, [sp, #1664]
  104b90:	e5883000 	str	r3, [r8]
  104b94:	e5882004 	str	r2, [r8, #4]
  104b98:	e58d567c 	str	r5, [sp, #1660]
  104b9c:	dafffeb1 	ble	104668 <.text+0x4668>
  104ba0:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104ba4:	e1a0000a 	mov	r0, sl
  104ba8:	e2811008 	add	r1, r1, #8	; 0x8
  104bac:	ebfffc57 	bl	103d10 <__sprint>
  104bb0:	e3500000 	cmp	r0, #0	; 0x0
  104bb4:	1afffd53 	bne	104108 <.text+0x4108>
  104bb8:	e59d2014 	ldr	r2, [sp, #20]
  104bbc:	e3520080 	cmp	r2, #128	; 0x80
  104bc0:	e59d6680 	ldr	r6, [sp, #1664]
  104bc4:	e59d567c 	ldr	r5, [sp, #1660]
  104bc8:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104bcc:	1afffea9 	bne	104678 <.text+0x4678>
  104bd0:	e59d3024 	ldr	r3, [sp, #36]
  104bd4:	e59dc03c 	ldr	ip, [sp, #60]
  104bd8:	e06c4003 	rsb	r4, ip, r3
  104bdc:	e3540000 	cmp	r4, #0	; 0x0
  104be0:	dafffea4 	ble	104678 <.text+0x4678>
  104be4:	e3540010 	cmp	r4, #16	; 0x10
  104be8:	da00032e 	ble	1058a8 <.text+0x58a8>
  104bec:	e59f95b0 	ldr	r9, [pc, #1456]	; 1051a4 <.text+0x51a4>
  104bf0:	ea000002 	b	104c00 <.text+0x4c00>
  104bf4:	e2444010 	sub	r4, r4, #16	; 0x10
  104bf8:	e3540010 	cmp	r4, #16	; 0x10
  104bfc:	da000015 	ble	104c58 <.text+0x4c58>
  104c00:	e2855001 	add	r5, r5, #1	; 0x1
  104c04:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104c08:	e2866010 	add	r6, r6, #16	; 0x10
  104c0c:	e3a03010 	mov	r3, #16	; 0x10
  104c10:	e3550007 	cmp	r5, #7	; 0x7
  104c14:	e5883004 	str	r3, [r8, #4]
  104c18:	e5889000 	str	r9, [r8]
  104c1c:	e1a0000a 	mov	r0, sl
  104c20:	e2811008 	add	r1, r1, #8	; 0x8
  104c24:	e2888008 	add	r8, r8, #8	; 0x8
  104c28:	e58d6680 	str	r6, [sp, #1664]
  104c2c:	e58d567c 	str	r5, [sp, #1660]
  104c30:	daffffef 	ble	104bf4 <.text+0x4bf4>
  104c34:	ebfffc35 	bl	103d10 <__sprint>
  104c38:	e3500000 	cmp	r0, #0	; 0x0
  104c3c:	1afffd31 	bne	104108 <.text+0x4108>
  104c40:	e2444010 	sub	r4, r4, #16	; 0x10
  104c44:	e3540010 	cmp	r4, #16	; 0x10
  104c48:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104c4c:	e59d6680 	ldr	r6, [sp, #1664]
  104c50:	e59d567c 	ldr	r5, [sp, #1660]
  104c54:	caffffe9 	bgt	104c00 <.text+0x4c00>
  104c58:	e2855001 	add	r5, r5, #1	; 0x1
  104c5c:	e0866004 	add	r6, r6, r4
  104c60:	e3550007 	cmp	r5, #7	; 0x7
  104c64:	e5889000 	str	r9, [r8]
  104c68:	e5884004 	str	r4, [r8, #4]
  104c6c:	e58d6680 	str	r6, [sp, #1664]
  104c70:	e58d567c 	str	r5, [sp, #1660]
  104c74:	d2888008 	addle	r8, r8, #8	; 0x8
  104c78:	dafffe7e 	ble	104678 <.text+0x4678>
  104c7c:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104c80:	e1a0000a 	mov	r0, sl
  104c84:	e2811008 	add	r1, r1, #8	; 0x8
  104c88:	ebfffc20 	bl	103d10 <__sprint>
  104c8c:	e3500000 	cmp	r0, #0	; 0x0
  104c90:	1afffd1c 	bne	104108 <.text+0x4108>
  104c94:	e59d6680 	ldr	r6, [sp, #1664]
  104c98:	e59d567c 	ldr	r5, [sp, #1660]
  104c9c:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104ca0:	eafffe74 	b	104678 <.text+0x4678>
  104ca4:	e2013007 	and	r3, r1, #7	; 0x7
  104ca8:	e2833030 	add	r3, r3, #48	; 0x30
  104cac:	e1b011a1 	movs	r1, r1, lsr #3
  104cb0:	e5603001 	strb	r3, [r0, #-1]!
  104cb4:	1afffffa 	bne	104ca4 <.text+0x4ca4>
  104cb8:	e59d5054 	ldr	r5, [sp, #84]
  104cbc:	e3150001 	tst	r5, #1	; 0x1
  104cc0:	e58d001c 	str	r0, [sp, #28]
  104cc4:	0afffd64 	beq	10425c <.text+0x425c>
  104cc8:	e3530030 	cmp	r3, #48	; 0x30
  104ccc:	11a0c000 	movne	ip, r0
  104cd0:	13a03030 	movne	r3, #48	; 0x30
  104cd4:	156c3001 	strneb	r3, [ip, #-1]!
  104cd8:	158dc01c 	strne	ip, [sp, #28]
  104cdc:	eafffd5e 	b	10425c <.text+0x425c>
  104ce0:	e3570065 	cmp	r7, #101	; 0x65
  104ce4:	da000072 	ble	104eb4 <.text+0x4eb4>
  104ce8:	e28d0048 	add	r0, sp, #72	; 0x48
  104cec:	e8900003 	ldmia	r0, {r0, r1}
  104cf0:	e3a02000 	mov	r2, #0	; 0x0
  104cf4:	e3a03000 	mov	r3, #0	; 0x0
  104cf8:	eb0015ff 	bl	10a4fc <__cmpdf2>
  104cfc:	e3500000 	cmp	r0, #0	; 0x0
  104d00:	1a00003a 	bne	104df0 <.text+0x4df0>
  104d04:	e2855001 	add	r5, r5, #1	; 0x1
  104d08:	e59f3488 	ldr	r3, [pc, #1160]	; 105198 <.text+0x5198>
  104d0c:	e3550007 	cmp	r5, #7	; 0x7
  104d10:	e2866001 	add	r6, r6, #1	; 0x1
  104d14:	e3a02001 	mov	r2, #1	; 0x1
  104d18:	e5883000 	str	r3, [r8]
  104d1c:	e5882004 	str	r2, [r8, #4]
  104d20:	e58d6680 	str	r6, [sp, #1664]
  104d24:	e58d567c 	str	r5, [sp, #1660]
  104d28:	d288c008 	addle	ip, r8, #8	; 0x8
  104d2c:	ca0001c9 	bgt	105458 <.text+0x5458>
  104d30:	e59d36a8 	ldr	r3, [sp, #1704]
  104d34:	e59d4034 	ldr	r4, [sp, #52]
  104d38:	e1530004 	cmp	r3, r4
  104d3c:	aa0000f7 	bge	105120 <.text+0x5120>
  104d40:	e59d567c 	ldr	r5, [sp, #1660]
  104d44:	e59d8028 	ldr	r8, [sp, #40]
  104d48:	e2855001 	add	r5, r5, #1	; 0x1
  104d4c:	e3550007 	cmp	r5, #7	; 0x7
  104d50:	e2866001 	add	r6, r6, #1	; 0x1
  104d54:	e3a03001 	mov	r3, #1	; 0x1
  104d58:	e58c3004 	str	r3, [ip, #4]
  104d5c:	e58c8000 	str	r8, [ip]
  104d60:	e58d6680 	str	r6, [sp, #1664]
  104d64:	e58d567c 	str	r5, [sp, #1660]
  104d68:	d28cc008 	addle	ip, ip, #8	; 0x8
  104d6c:	ca0001d1 	bgt	1054b8 <.text+0x54b8>
  104d70:	e59d1034 	ldr	r1, [sp, #52]
  104d74:	e2414001 	sub	r4, r1, #1	; 0x1
  104d78:	e3540000 	cmp	r4, #0	; 0x0
  104d7c:	dafffe7c 	ble	104774 <.text+0x4774>
  104d80:	e3540010 	cmp	r4, #16	; 0x10
  104d84:	da00018f 	ble	1053c8 <.text+0x53c8>
  104d88:	e59d567c 	ldr	r5, [sp, #1660]
  104d8c:	e59f9410 	ldr	r9, [pc, #1040]	; 1051a4 <.text+0x51a4>
  104d90:	ea000002 	b	104da0 <.text+0x4da0>
  104d94:	e2444010 	sub	r4, r4, #16	; 0x10
  104d98:	e3540010 	cmp	r4, #16	; 0x10
  104d9c:	da00018b 	ble	1053d0 <.text+0x53d0>
  104da0:	e2855001 	add	r5, r5, #1	; 0x1
  104da4:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104da8:	e2866010 	add	r6, r6, #16	; 0x10
  104dac:	e3a03010 	mov	r3, #16	; 0x10
  104db0:	e3550007 	cmp	r5, #7	; 0x7
  104db4:	e58c3004 	str	r3, [ip, #4]
  104db8:	e58c9000 	str	r9, [ip]
  104dbc:	e1a0000a 	mov	r0, sl
  104dc0:	e2811008 	add	r1, r1, #8	; 0x8
  104dc4:	e28cc008 	add	ip, ip, #8	; 0x8
  104dc8:	e58d6680 	str	r6, [sp, #1664]
  104dcc:	e58d567c 	str	r5, [sp, #1660]
  104dd0:	daffffef 	ble	104d94 <.text+0x4d94>
  104dd4:	ebfffbcd 	bl	103d10 <__sprint>
  104dd8:	e3500000 	cmp	r0, #0	; 0x0
  104ddc:	1afffcc9 	bne	104108 <.text+0x4108>
  104de0:	e59d6680 	ldr	r6, [sp, #1664]
  104de4:	e59d567c 	ldr	r5, [sp, #1660]
  104de8:	e28dce61 	add	ip, sp, #1552	; 0x610
  104dec:	eaffffe8 	b	104d94 <.text+0x4d94>
  104df0:	e59d06a8 	ldr	r0, [sp, #1704]
  104df4:	e3500000 	cmp	r0, #0	; 0x0
  104df8:	da0001bb 	ble	1054ec <.text+0x54ec>
  104dfc:	e59dc034 	ldr	ip, [sp, #52]
  104e00:	e150000c 	cmp	r0, ip
  104e04:	aa0000fc 	bge	1051fc <.text+0x51fc>
  104e08:	e2855001 	add	r5, r5, #1	; 0x1
  104e0c:	e59d401c 	ldr	r4, [sp, #28]
  104e10:	e0866000 	add	r6, r6, r0
  104e14:	e3550007 	cmp	r5, #7	; 0x7
  104e18:	e5884000 	str	r4, [r8]
  104e1c:	e5880004 	str	r0, [r8, #4]
  104e20:	e58d6680 	str	r6, [sp, #1664]
  104e24:	e58d567c 	str	r5, [sp, #1660]
  104e28:	d2881008 	addle	r1, r8, #8	; 0x8
  104e2c:	ca000288 	bgt	105854 <.text+0x5854>
  104e30:	e2855001 	add	r5, r5, #1	; 0x1
  104e34:	e59f3350 	ldr	r3, [pc, #848]	; 10518c <.text+0x518c>
  104e38:	e2866001 	add	r6, r6, #1	; 0x1
  104e3c:	e3550007 	cmp	r5, #7	; 0x7
  104e40:	e3a02001 	mov	r2, #1	; 0x1
  104e44:	e5813000 	str	r3, [r1]
  104e48:	e5812004 	str	r2, [r1, #4]
  104e4c:	e58d6680 	str	r6, [sp, #1664]
  104e50:	e58d567c 	str	r5, [sp, #1660]
  104e54:	e1a04000 	mov	r4, r0
  104e58:	d281c008 	addle	ip, r1, #8	; 0x8
  104e5c:	ca000271 	bgt	105828 <.text+0x5828>
  104e60:	e59d8034 	ldr	r8, [sp, #52]
  104e64:	e59d101c 	ldr	r1, [sp, #28]
  104e68:	e0602008 	rsb	r2, r0, r8
  104e6c:	e2855001 	add	r5, r5, #1	; 0x1
  104e70:	e0843001 	add	r3, r4, r1
  104e74:	e0866002 	add	r6, r6, r2
  104e78:	e3550007 	cmp	r5, #7	; 0x7
  104e7c:	e58c3000 	str	r3, [ip]
  104e80:	e58c2004 	str	r2, [ip, #4]
  104e84:	e58d6680 	str	r6, [sp, #1664]
  104e88:	e58d567c 	str	r5, [sp, #1660]
  104e8c:	da000141 	ble	105398 <.text+0x5398>
  104e90:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104e94:	e1a0000a 	mov	r0, sl
  104e98:	e2811008 	add	r1, r1, #8	; 0x8
  104e9c:	ebfffb9b 	bl	103d10 <__sprint>
  104ea0:	e3500000 	cmp	r0, #0	; 0x0
  104ea4:	1afffc97 	bne	104108 <.text+0x4108>
  104ea8:	e59d6680 	ldr	r6, [sp, #1664]
  104eac:	e28dce61 	add	ip, sp, #1552	; 0x610
  104eb0:	eafffe2f 	b	104774 <.text+0x4774>
  104eb4:	e59d2034 	ldr	r2, [sp, #52]
  104eb8:	e3520001 	cmp	r2, #1	; 0x1
  104ebc:	da00014d 	ble	1053f8 <.text+0x53f8>
  104ec0:	e59d401c 	ldr	r4, [sp, #28]
  104ec4:	e5d42000 	ldrb	r2, [r4]
  104ec8:	e2855001 	add	r5, r5, #1	; 0x1
  104ecc:	e5cd26ad 	strb	r2, [sp, #1709]
  104ed0:	e3a0302e 	mov	r3, #46	; 0x2e
  104ed4:	e28d2e6a 	add	r2, sp, #1696	; 0x6a0
  104ed8:	e5cd36ae 	strb	r3, [sp, #1710]
  104edc:	e2866002 	add	r6, r6, #2	; 0x2
  104ee0:	e3550007 	cmp	r5, #7	; 0x7
  104ee4:	e282200d 	add	r2, r2, #13	; 0xd
  104ee8:	e243302c 	sub	r3, r3, #44	; 0x2c
  104eec:	e888000c 	stmia	r8, {r2, r3}
  104ef0:	e58d6680 	str	r6, [sp, #1664]
  104ef4:	e58d567c 	str	r5, [sp, #1660]
  104ef8:	d2884008 	addle	r4, r8, #8	; 0x8
  104efc:	ca00007d 	bgt	1050f8 <.text+0x50f8>
  104f00:	e28d0048 	add	r0, sp, #72	; 0x48
  104f04:	e8900003 	ldmia	r0, {r0, r1}
  104f08:	e3a02000 	mov	r2, #0	; 0x0
  104f0c:	e3a03000 	mov	r3, #0	; 0x0
  104f10:	eb001579 	bl	10a4fc <__cmpdf2>
  104f14:	e3500000 	cmp	r0, #0	; 0x0
  104f18:	0a000038 	beq	105000 <.text+0x5000>
  104f1c:	e59d8034 	ldr	r8, [sp, #52]
  104f20:	e59dc01c 	ldr	ip, [sp, #28]
  104f24:	e2855001 	add	r5, r5, #1	; 0x1
  104f28:	e0883006 	add	r3, r8, r6
  104f2c:	e2436001 	sub	r6, r3, #1	; 0x1
  104f30:	e28c2001 	add	r2, ip, #1	; 0x1
  104f34:	e2483001 	sub	r3, r8, #1	; 0x1
  104f38:	e3550007 	cmp	r5, #7	; 0x7
  104f3c:	e884000c 	stmia	r4, {r2, r3}
  104f40:	e58d6680 	str	r6, [sp, #1664]
  104f44:	e58d567c 	str	r5, [sp, #1660]
  104f48:	ca000060 	bgt	1050d0 <.text+0x50d0>
  104f4c:	e2844008 	add	r4, r4, #8	; 0x8
  104f50:	e59d3030 	ldr	r3, [sp, #48]
  104f54:	e2855001 	add	r5, r5, #1	; 0x1
  104f58:	e0866003 	add	r6, r6, r3
  104f5c:	e59d8030 	ldr	r8, [sp, #48]
  104f60:	e28d3e69 	add	r3, sp, #1680	; 0x690
  104f64:	e3550007 	cmp	r5, #7	; 0x7
  104f68:	e2833005 	add	r3, r3, #5	; 0x5
  104f6c:	e8840108 	stmia	r4, {r3, r8}
  104f70:	e58d6680 	str	r6, [sp, #1664]
  104f74:	e58d567c 	str	r5, [sp, #1660]
  104f78:	d284c008 	addle	ip, r4, #8	; 0x8
  104f7c:	dafffdfc 	ble	104774 <.text+0x4774>
  104f80:	eaffffc2 	b	104e90 <.text+0x4e90>
  104f84:	e28d1e67 	add	r1, sp, #1648	; 0x670
  104f88:	e1a0000a 	mov	r0, sl
  104f8c:	e2811008 	add	r1, r1, #8	; 0x8
  104f90:	ebfffb5e 	bl	103d10 <__sprint>
  104f94:	e3500000 	cmp	r0, #0	; 0x0
  104f98:	1afffc60 	bne	104120 <.text+0x4120>
  104f9c:	e28d8e61 	add	r8, sp, #1552	; 0x610
  104fa0:	eafffbd9 	b	103f0c <_vfprintf_r+0x1bc>
  104fa4:	e3510009 	cmp	r1, #9	; 0x9
  104fa8:	928d4e5b 	addls	r4, sp, #1456	; 0x5b0
  104fac:	92844003 	addls	r4, r4, #3	; 0x3
  104fb0:	958d401c 	strls	r4, [sp, #28]
  104fb4:	9a00000d 	bls	104ff0 <.text+0x4ff0>
  104fb8:	e28d0e5b 	add	r0, sp, #1456	; 0x5b0
  104fbc:	e59fc1c4 	ldr	ip, [pc, #452]	; 105188 <.text+0x5188>
  104fc0:	e2800004 	add	r0, r0, #4	; 0x4
  104fc4:	e083219c 	umull	r2, r3, ip, r1
  104fc8:	e1a031a3 	mov	r3, r3, lsr #3
  104fcc:	e0832103 	add	r2, r3, r3, lsl #2
  104fd0:	e0412082 	sub	r2, r1, r2, lsl #1
  104fd4:	e2822030 	add	r2, r2, #48	; 0x30
  104fd8:	e3530009 	cmp	r3, #9	; 0x9
  104fdc:	e1a01003 	mov	r1, r3
  104fe0:	e5602001 	strb	r2, [r0, #-1]!
  104fe4:	8afffff6 	bhi	104fc4 <.text+0x4fc4>
  104fe8:	e2400001 	sub	r0, r0, #1	; 0x1
  104fec:	e58d001c 	str	r0, [sp, #28]
  104ff0:	e59d401c 	ldr	r4, [sp, #28]
  104ff4:	e2813030 	add	r3, r1, #48	; 0x30
  104ff8:	e5c43000 	strb	r3, [r4]
  104ffc:	eafffc96 	b	10425c <.text+0x425c>
  105000:	e59d1034 	ldr	r1, [sp, #52]
  105004:	e2417001 	sub	r7, r1, #1	; 0x1
  105008:	e3570000 	cmp	r7, #0	; 0x0
  10500c:	daffffcf 	ble	104f50 <.text+0x4f50>
  105010:	e3570010 	cmp	r7, #16	; 0x10
  105014:	da000024 	ble	1050ac <.text+0x50ac>
  105018:	e59f9184 	ldr	r9, [pc, #388]	; 1051a4 <.text+0x51a4>
  10501c:	ea000002 	b	10502c <.text+0x502c>
  105020:	e2477010 	sub	r7, r7, #16	; 0x10
  105024:	e3570010 	cmp	r7, #16	; 0x10
  105028:	da000020 	ble	1050b0 <.text+0x50b0>
  10502c:	e2855001 	add	r5, r5, #1	; 0x1
  105030:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105034:	e2866010 	add	r6, r6, #16	; 0x10
  105038:	e3a03010 	mov	r3, #16	; 0x10
  10503c:	e3550007 	cmp	r5, #7	; 0x7
  105040:	e5843004 	str	r3, [r4, #4]
  105044:	e5849000 	str	r9, [r4]
  105048:	e1a0000a 	mov	r0, sl
  10504c:	e2811008 	add	r1, r1, #8	; 0x8
  105050:	e2844008 	add	r4, r4, #8	; 0x8
  105054:	e58d6680 	str	r6, [sp, #1664]
  105058:	e58d567c 	str	r5, [sp, #1660]
  10505c:	daffffef 	ble	105020 <.text+0x5020>
  105060:	ebfffb2a 	bl	103d10 <__sprint>
  105064:	e3500000 	cmp	r0, #0	; 0x0
  105068:	1afffc26 	bne	104108 <.text+0x4108>
  10506c:	e59d6680 	ldr	r6, [sp, #1664]
  105070:	e59d567c 	ldr	r5, [sp, #1660]
  105074:	e28d4e61 	add	r4, sp, #1552	; 0x610
  105078:	eaffffe8 	b	105020 <.text+0x5020>
  10507c:	e59d4054 	ldr	r4, [sp, #84]
  105080:	e2143040 	ands	r3, r4, #64	; 0x40
  105084:	15993000 	ldrne	r3, [r9]
  105088:	05991000 	ldreq	r1, [r9]
  10508c:	11a03803 	movne	r3, r3, lsl #16
  105090:	12899004 	addne	r9, r9, #4	; 0x4
  105094:	02899004 	addeq	r9, r9, #4	; 0x4
  105098:	11a01823 	movne	r1, r3, lsr #16
  10509c:	01a02003 	moveq	r2, r3
  1050a0:	158d9050 	strne	r9, [sp, #80]
  1050a4:	058d9050 	streq	r9, [sp, #80]
  1050a8:	eafffc52 	b	1041f8 <.text+0x41f8>
  1050ac:	e59f90f0 	ldr	r9, [pc, #240]	; 1051a4 <.text+0x51a4>
  1050b0:	e2855001 	add	r5, r5, #1	; 0x1
  1050b4:	e0866007 	add	r6, r6, r7
  1050b8:	e3550007 	cmp	r5, #7	; 0x7
  1050bc:	e5849000 	str	r9, [r4]
  1050c0:	e5847004 	str	r7, [r4, #4]
  1050c4:	e58d6680 	str	r6, [sp, #1664]
  1050c8:	e58d567c 	str	r5, [sp, #1660]
  1050cc:	daffff9e 	ble	104f4c <.text+0x4f4c>
  1050d0:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1050d4:	e1a0000a 	mov	r0, sl
  1050d8:	e2811008 	add	r1, r1, #8	; 0x8
  1050dc:	ebfffb0b 	bl	103d10 <__sprint>
  1050e0:	e3500000 	cmp	r0, #0	; 0x0
  1050e4:	1afffc07 	bne	104108 <.text+0x4108>
  1050e8:	e59d6680 	ldr	r6, [sp, #1664]
  1050ec:	e59d567c 	ldr	r5, [sp, #1660]
  1050f0:	e28d4e61 	add	r4, sp, #1552	; 0x610
  1050f4:	eaffff95 	b	104f50 <.text+0x4f50>
  1050f8:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1050fc:	e1a0000a 	mov	r0, sl
  105100:	e2811008 	add	r1, r1, #8	; 0x8
  105104:	ebfffb01 	bl	103d10 <__sprint>
  105108:	e3500000 	cmp	r0, #0	; 0x0
  10510c:	1afffbfd 	bne	104108 <.text+0x4108>
  105110:	e59d6680 	ldr	r6, [sp, #1664]
  105114:	e59d567c 	ldr	r5, [sp, #1660]
  105118:	e28d4e61 	add	r4, sp, #1552	; 0x610
  10511c:	eaffff77 	b	104f00 <.text+0x4f00>
  105120:	e59d5054 	ldr	r5, [sp, #84]
  105124:	e3150001 	tst	r5, #1	; 0x1
  105128:	0afffd91 	beq	104774 <.text+0x4774>
  10512c:	eaffff03 	b	104d40 <.text+0x4d40>
  105130:	e899000c 	ldmia	r9, {r2, r3}
  105134:	e2899008 	add	r9, r9, #8	; 0x8
  105138:	e58d2048 	str	r2, [sp, #72]
  10513c:	e58d304c 	str	r3, [sp, #76]
  105140:	e58d9050 	str	r9, [sp, #80]
  105144:	eafffd02 	b	104554 <.text+0x4554>
  105148:	e2833020 	add	r3, r3, #32	; 0x20
  10514c:	e5cd36af 	strb	r3, [sp, #1711]
  105150:	e59d2018 	ldr	r2, [sp, #24]
  105154:	e5d23000 	ldrb	r3, [r2]
  105158:	eafffb7a 	b	103f48 <_vfprintf_r+0x1f8>
  10515c:	e5993000 	ldr	r3, [r9]
  105160:	e1a03803 	mov	r3, r3, lsl #16
  105164:	e2899004 	add	r9, r9, #4	; 0x4
  105168:	e1a01823 	mov	r1, r3, lsr #16
  10516c:	e3a02001 	mov	r2, #1	; 0x1
  105170:	e58d9050 	str	r9, [sp, #80]
  105174:	eafffc1f 	b	1041f8 <.text+0x41f8>
  105178:	0010a754 	andeqs	sl, r0, r4, asr r7
  10517c:	0010a740 	andeqs	sl, r0, r0, asr #14
  105180:	0010a734 	andeqs	sl, r0, r4, lsr r7
  105184:	0010a720 	andeqs	sl, r0, r0, lsr #14
  105188:	cccccccd 	stcgtl	12, cr12, [ip], {205}
  10518c:	0010a778 	andeqs	sl, r0, r8, ror r7
  105190:	0010a770 	andeqs	sl, r0, r0, ror r7
  105194:	0010a738 	andeqs	sl, r0, r8, lsr r7
  105198:	0010a774 	andeqs	sl, r0, r4, ror r7
  10519c:	0010a77c 	andeqs	sl, r0, ip, ror r7
  1051a0:	0010a793 	muleqs	r0, r3, r7
  1051a4:	0010a783 	andeqs	sl, r0, r3, lsl #15
  1051a8:	0010a73c 	andeqs	sl, r0, ip, lsr r7
  1051ac:	66666667 	strvsbt	r6, [r6], -r7, ror #12
  1051b0:	e5993000 	ldr	r3, [r9]
  1051b4:	e1a03803 	mov	r3, r3, lsl #16
  1051b8:	e2899004 	add	r9, r9, #4	; 0x4
  1051bc:	e1a01843 	mov	r1, r3, asr #16
  1051c0:	e58d9050 	str	r9, [sp, #80]
  1051c4:	eafffbe7 	b	104168 <.text+0x4168>
  1051c8:	e5993000 	ldr	r3, [r9]
  1051cc:	e1a03803 	mov	r3, r3, lsl #16
  1051d0:	e2899004 	add	r9, r9, #4	; 0x4
  1051d4:	e1a01823 	mov	r1, r3, lsr #16
  1051d8:	e58d9050 	str	r9, [sp, #80]
  1051dc:	eafffca5 	b	104478 <.text+0x4478>
  1051e0:	e5993000 	ldr	r3, [r9]
  1051e4:	e2899004 	add	r9, r9, #4	; 0x4
  1051e8:	e58d9050 	str	r9, [sp, #80]
  1051ec:	e59d4020 	ldr	r4, [sp, #32]
  1051f0:	e59d9050 	ldr	r9, [sp, #80]
  1051f4:	e5834000 	str	r4, [r3]
  1051f8:	eafffb29 	b	103ea4 <_vfprintf_r+0x154>
  1051fc:	e2855001 	add	r5, r5, #1	; 0x1
  105200:	e59d101c 	ldr	r1, [sp, #28]
  105204:	e086600c 	add	r6, r6, ip
  105208:	e3550007 	cmp	r5, #7	; 0x7
  10520c:	e8881002 	stmia	r8, {r1, ip}
  105210:	e58d6680 	str	r6, [sp, #1664]
  105214:	e58d567c 	str	r5, [sp, #1660]
  105218:	d288c008 	addle	ip, r8, #8	; 0x8
  10521c:	ca000197 	bgt	105880 <.text+0x5880>
  105220:	e59d2034 	ldr	r2, [sp, #52]
  105224:	e0624000 	rsb	r4, r2, r0
  105228:	e3540000 	cmp	r4, #0	; 0x0
  10522c:	da00004b 	ble	105360 <.text+0x5360>
  105230:	e3540010 	cmp	r4, #16	; 0x10
  105234:	da000036 	ble	105314 <.text+0x5314>
  105238:	e59d567c 	ldr	r5, [sp, #1660]
  10523c:	e51f90a0 	ldr	r9, [pc, #-160]	; 1051a4 <.text+0x51a4>
  105240:	ea000002 	b	105250 <.text+0x5250>
  105244:	e2444010 	sub	r4, r4, #16	; 0x10
  105248:	e3540010 	cmp	r4, #16	; 0x10
  10524c:	da000032 	ble	10531c <.text+0x531c>
  105250:	e2855001 	add	r5, r5, #1	; 0x1
  105254:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105258:	e2866010 	add	r6, r6, #16	; 0x10
  10525c:	e3a03010 	mov	r3, #16	; 0x10
  105260:	e3550007 	cmp	r5, #7	; 0x7
  105264:	e58c3004 	str	r3, [ip, #4]
  105268:	e58c9000 	str	r9, [ip]
  10526c:	e1a0000a 	mov	r0, sl
  105270:	e2811008 	add	r1, r1, #8	; 0x8
  105274:	e28cc008 	add	ip, ip, #8	; 0x8
  105278:	e58d6680 	str	r6, [sp, #1664]
  10527c:	e58d567c 	str	r5, [sp, #1660]
  105280:	daffffef 	ble	105244 <.text+0x5244>
  105284:	ebfffaa1 	bl	103d10 <__sprint>
  105288:	e3500000 	cmp	r0, #0	; 0x0
  10528c:	1afffb9d 	bne	104108 <.text+0x4108>
  105290:	e59d6680 	ldr	r6, [sp, #1664]
  105294:	e59d567c 	ldr	r5, [sp, #1660]
  105298:	e28dce61 	add	ip, sp, #1552	; 0x610
  10529c:	eaffffe8 	b	105244 <.text+0x5244>
  1052a0:	e5993000 	ldr	r3, [r9]
  1052a4:	e28d5e45 	add	r5, sp, #1104	; 0x450
  1052a8:	e2899004 	add	r9, r9, #4	; 0x4
  1052ac:	e3a0b001 	mov	fp, #1	; 0x1
  1052b0:	e2855008 	add	r5, r5, #8	; 0x8
  1052b4:	e5cd3458 	strb	r3, [sp, #1112]
  1052b8:	e58d9050 	str	r9, [sp, #80]
  1052bc:	eafffc8e 	b	1044fc <.text+0x44fc>
  1052c0:	e3560000 	cmp	r6, #0	; 0x0
  1052c4:	03a06001 	moveq	r6, #1	; 0x1
  1052c8:	eafffc99 	b	104534 <.text+0x4534>
  1052cc:	e3560000 	cmp	r6, #0	; 0x0
  1052d0:	ba000187 	blt	1058f4 <.text+0x58f4>
  1052d4:	e59d001c 	ldr	r0, [sp, #28]
  1052d8:	e1a01005 	mov	r1, r5
  1052dc:	e1a02006 	mov	r2, r6
  1052e0:	eb000dcf 	bl	108a24 <memchr>
  1052e4:	e3500000 	cmp	r0, #0	; 0x0
  1052e8:	0a0001f6 	beq	105ac8 <.text+0x5ac8>
  1052ec:	e59d201c 	ldr	r2, [sp, #28]
  1052f0:	e062b000 	rsb	fp, r2, r0
  1052f4:	e156000b 	cmp	r6, fp
  1052f8:	ba00016c 	blt	1058b0 <.text+0x58b0>
  1052fc:	e35b0000 	cmp	fp, #0	; 0x0
  105300:	a1a0300b 	movge	r3, fp
  105304:	b3a03000 	movlt	r3, #0	; 0x0
  105308:	e58d303c 	str	r3, [sp, #60]
  10530c:	e58d5038 	str	r5, [sp, #56]
  105310:	eafffbdb 	b	104284 <.text+0x4284>
  105314:	e59d567c 	ldr	r5, [sp, #1660]
  105318:	e51f917c 	ldr	r9, [pc, #-380]	; 1051a4 <.text+0x51a4>
  10531c:	e2855001 	add	r5, r5, #1	; 0x1
  105320:	e0866004 	add	r6, r6, r4
  105324:	e3550007 	cmp	r5, #7	; 0x7
  105328:	e58c9000 	str	r9, [ip]
  10532c:	e58c4004 	str	r4, [ip, #4]
  105330:	e58d6680 	str	r6, [sp, #1664]
  105334:	e58d567c 	str	r5, [sp, #1660]
  105338:	d28cc008 	addle	ip, ip, #8	; 0x8
  10533c:	da000007 	ble	105360 <.text+0x5360>
  105340:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105344:	e1a0000a 	mov	r0, sl
  105348:	e2811008 	add	r1, r1, #8	; 0x8
  10534c:	ebfffa6f 	bl	103d10 <__sprint>
  105350:	e3500000 	cmp	r0, #0	; 0x0
  105354:	1afffb6b 	bne	104108 <.text+0x4108>
  105358:	e59d6680 	ldr	r6, [sp, #1664]
  10535c:	e28dce61 	add	ip, sp, #1552	; 0x610
  105360:	e59d3054 	ldr	r3, [sp, #84]
  105364:	e3130001 	tst	r3, #1	; 0x1
  105368:	0afffd01 	beq	104774 <.text+0x4774>
  10536c:	e59d567c 	ldr	r5, [sp, #1660]
  105370:	e51f31ec 	ldr	r3, [pc, #-492]	; 10518c <.text+0x518c>
  105374:	e2855001 	add	r5, r5, #1	; 0x1
  105378:	e2866001 	add	r6, r6, #1	; 0x1
  10537c:	e3a02001 	mov	r2, #1	; 0x1
  105380:	e3550007 	cmp	r5, #7	; 0x7
  105384:	e58c3000 	str	r3, [ip]
  105388:	e58c2004 	str	r2, [ip, #4]
  10538c:	e58d6680 	str	r6, [sp, #1664]
  105390:	e58d567c 	str	r5, [sp, #1660]
  105394:	cafffebd 	bgt	104e90 <.text+0x4e90>
  105398:	e28cc008 	add	ip, ip, #8	; 0x8
  10539c:	eafffcf4 	b	104774 <.text+0x4774>
  1053a0:	e28d0e5b 	add	r0, sp, #1456	; 0x5b0
  1053a4:	e2800004 	add	r0, r0, #4	; 0x4
  1053a8:	e59d5040 	ldr	r5, [sp, #64]
  1053ac:	e201300f 	and	r3, r1, #15	; 0xf
  1053b0:	e7d52003 	ldrb	r2, [r5, r3]
  1053b4:	e1b01221 	movs	r1, r1, lsr #4
  1053b8:	e5602001 	strb	r2, [r0, #-1]!
  1053bc:	1afffff9 	bne	1053a8 <.text+0x53a8>
  1053c0:	e58d001c 	str	r0, [sp, #28]
  1053c4:	eafffba4 	b	10425c <.text+0x425c>
  1053c8:	e59d567c 	ldr	r5, [sp, #1660]
  1053cc:	e51f9230 	ldr	r9, [pc, #-560]	; 1051a4 <.text+0x51a4>
  1053d0:	e2855001 	add	r5, r5, #1	; 0x1
  1053d4:	e0866004 	add	r6, r6, r4
  1053d8:	e3550007 	cmp	r5, #7	; 0x7
  1053dc:	e58c9000 	str	r9, [ip]
  1053e0:	e58c4004 	str	r4, [ip, #4]
  1053e4:	e58d6680 	str	r6, [sp, #1664]
  1053e8:	e58d567c 	str	r5, [sp, #1660]
  1053ec:	cafffea7 	bgt	104e90 <.text+0x4e90>
  1053f0:	e28cc008 	add	ip, ip, #8	; 0x8
  1053f4:	eafffcde 	b	104774 <.text+0x4774>
  1053f8:	e59d3054 	ldr	r3, [sp, #84]
  1053fc:	e3130001 	tst	r3, #1	; 0x1
  105400:	1afffeae 	bne	104ec0 <.text+0x4ec0>
  105404:	e2855001 	add	r5, r5, #1	; 0x1
  105408:	e59d201c 	ldr	r2, [sp, #28]
  10540c:	e2866001 	add	r6, r6, #1	; 0x1
  105410:	e3550007 	cmp	r5, #7	; 0x7
  105414:	e3a03001 	mov	r3, #1	; 0x1
  105418:	e888000c 	stmia	r8, {r2, r3}
  10541c:	e58d6680 	str	r6, [sp, #1664]
  105420:	e58d567c 	str	r5, [sp, #1660]
  105424:	d2884008 	addle	r4, r8, #8	; 0x8
  105428:	dafffec8 	ble	104f50 <.text+0x4f50>
  10542c:	eaffff27 	b	1050d0 <.text+0x50d0>
  105430:	e51f9294 	ldr	r9, [pc, #-660]	; 1051a4 <.text+0x51a4>
  105434:	eafffcb0 	b	1046fc <.text+0x46fc>
  105438:	e3a04003 	mov	r4, #3	; 0x3
  10543c:	e51f52b4 	ldr	r5, [pc, #-692]	; 105190 <.text+0x5190>
  105440:	e3a0c000 	mov	ip, #0	; 0x0
  105444:	e1a0b004 	mov	fp, r4
  105448:	e58d403c 	str	r4, [sp, #60]
  10544c:	e58d501c 	str	r5, [sp, #28]
  105450:	e58dc038 	str	ip, [sp, #56]
  105454:	eafffb8a 	b	104284 <.text+0x4284>
  105458:	e28d1e67 	add	r1, sp, #1648	; 0x670
  10545c:	e1a0000a 	mov	r0, sl
  105460:	e2811008 	add	r1, r1, #8	; 0x8
  105464:	ebfffa29 	bl	103d10 <__sprint>
  105468:	e3500000 	cmp	r0, #0	; 0x0
  10546c:	1afffb25 	bne	104108 <.text+0x4108>
  105470:	e59d6680 	ldr	r6, [sp, #1664]
  105474:	e28dce61 	add	ip, sp, #1552	; 0x610
  105478:	eafffe2c 	b	104d30 <.text+0x4d30>
  10547c:	e28d0048 	add	r0, sp, #72	; 0x48
  105480:	e8900003 	ldmia	r0, {r0, r1}
  105484:	eb00110a 	bl	1098b4 <isnan>
  105488:	e3500000 	cmp	r0, #0	; 0x0
  10548c:	0a000059 	beq	1055f8 <.text+0x55f8>
  105490:	e2473045 	sub	r3, r7, #69	; 0x45
  105494:	e3530002 	cmp	r3, #2	; 0x2
  105498:	8a00011e 	bhi	105918 <.text+0x5918>
  10549c:	e3a0c003 	mov	ip, #3	; 0x3
  1054a0:	e51f1314 	ldr	r1, [pc, #-788]	; 105194 <.text+0x5194>
  1054a4:	e1a0b00c 	mov	fp, ip
  1054a8:	e58dc03c 	str	ip, [sp, #60]
  1054ac:	e58d101c 	str	r1, [sp, #28]
  1054b0:	e58d4038 	str	r4, [sp, #56]
  1054b4:	eafffb72 	b	104284 <.text+0x4284>
  1054b8:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1054bc:	e1a0000a 	mov	r0, sl
  1054c0:	e2811008 	add	r1, r1, #8	; 0x8
  1054c4:	ebfffa11 	bl	103d10 <__sprint>
  1054c8:	e3500000 	cmp	r0, #0	; 0x0
  1054cc:	1afffb0d 	bne	104108 <.text+0x4108>
  1054d0:	e59d6680 	ldr	r6, [sp, #1664]
  1054d4:	e28dce61 	add	ip, sp, #1552	; 0x610
  1054d8:	eafffe24 	b	104d70 <.text+0x4d70>
  1054dc:	e59d6680 	ldr	r6, [sp, #1664]
  1054e0:	e59d567c 	ldr	r5, [sp, #1660]
  1054e4:	e51f934c 	ldr	r9, [pc, #-844]	; 1051a0 <.text+0x51a0>
  1054e8:	eafffb93 	b	10433c <.text+0x433c>
  1054ec:	e2855001 	add	r5, r5, #1	; 0x1
  1054f0:	e51f3360 	ldr	r3, [pc, #-864]	; 105198 <.text+0x5198>
  1054f4:	e3550007 	cmp	r5, #7	; 0x7
  1054f8:	e2866001 	add	r6, r6, #1	; 0x1
  1054fc:	e3a02001 	mov	r2, #1	; 0x1
  105500:	e5883000 	str	r3, [r8]
  105504:	e5882004 	str	r2, [r8, #4]
  105508:	e58d6680 	str	r6, [sp, #1664]
  10550c:	e58d567c 	str	r5, [sp, #1660]
  105510:	d288c008 	addle	ip, r8, #8	; 0x8
  105514:	ca0000ec 	bgt	1058cc <.text+0x58cc>
  105518:	e3500000 	cmp	r0, #0	; 0x0
  10551c:	1a000002 	bne	10552c <.text+0x552c>
  105520:	e59d2034 	ldr	r2, [sp, #52]
  105524:	e3520000 	cmp	r2, #0	; 0x0
  105528:	0afffc91 	beq	104774 <.text+0x4774>
  10552c:	e59d567c 	ldr	r5, [sp, #1660]
  105530:	e3a03001 	mov	r3, #1	; 0x1
  105534:	e2855001 	add	r5, r5, #1	; 0x1
  105538:	e58c3004 	str	r3, [ip, #4]
  10553c:	e59d3028 	ldr	r3, [sp, #40]
  105540:	e2866001 	add	r6, r6, #1	; 0x1
  105544:	e3550007 	cmp	r5, #7	; 0x7
  105548:	e58c3000 	str	r3, [ip]
  10554c:	e58d6680 	str	r6, [sp, #1664]
  105550:	e58d567c 	str	r5, [sp, #1660]
  105554:	d28c2008 	addle	r2, ip, #8	; 0x8
  105558:	ca00014f 	bgt	105a9c <.text+0x5a9c>
  10555c:	e2604000 	rsb	r4, r0, #0	; 0x0
  105560:	e3540000 	cmp	r4, #0	; 0x0
  105564:	da0000a3 	ble	1057f8 <.text+0x57f8>
  105568:	e3540010 	cmp	r4, #16	; 0x10
  10556c:	da00008e 	ble	1057ac <.text+0x57ac>
  105570:	e51f93d4 	ldr	r9, [pc, #-980]	; 1051a4 <.text+0x51a4>
  105574:	ea000002 	b	105584 <.text+0x5584>
  105578:	e2444010 	sub	r4, r4, #16	; 0x10
  10557c:	e3540010 	cmp	r4, #16	; 0x10
  105580:	da00008a 	ble	1057b0 <.text+0x57b0>
  105584:	e2855001 	add	r5, r5, #1	; 0x1
  105588:	e28d1e67 	add	r1, sp, #1648	; 0x670
  10558c:	e2866010 	add	r6, r6, #16	; 0x10
  105590:	e3a03010 	mov	r3, #16	; 0x10
  105594:	e3550007 	cmp	r5, #7	; 0x7
  105598:	e5823004 	str	r3, [r2, #4]
  10559c:	e5829000 	str	r9, [r2]
  1055a0:	e1a0000a 	mov	r0, sl
  1055a4:	e2811008 	add	r1, r1, #8	; 0x8
  1055a8:	e2822008 	add	r2, r2, #8	; 0x8
  1055ac:	e58d6680 	str	r6, [sp, #1664]
  1055b0:	e58d567c 	str	r5, [sp, #1660]
  1055b4:	daffffef 	ble	105578 <.text+0x5578>
  1055b8:	ebfff9d4 	bl	103d10 <__sprint>
  1055bc:	e3500000 	cmp	r0, #0	; 0x0
  1055c0:	1afffad0 	bne	104108 <.text+0x4108>
  1055c4:	e59d6680 	ldr	r6, [sp, #1664]
  1055c8:	e59d567c 	ldr	r5, [sp, #1660]
  1055cc:	e28d2e61 	add	r2, sp, #1552	; 0x610
  1055d0:	eaffffe8 	b	105578 <.text+0x5578>
  1055d4:	e3a03006 	mov	r3, #6	; 0x6
  1055d8:	e51f4444 	ldr	r4, [pc, #-1092]	; 10519c <.text+0x519c>
  1055dc:	e1a0b003 	mov	fp, r3
  1055e0:	e58d303c 	str	r3, [sp, #60]
  1055e4:	e58d401c 	str	r4, [sp, #28]
  1055e8:	eafffc03 	b	1045fc <.text+0x45fc>
  1055ec:	e59d567c 	ldr	r5, [sp, #1660]
  1055f0:	e51f9458 	ldr	r9, [pc, #-1112]	; 1051a0 <.text+0x51a0>
  1055f4:	eafffc84 	b	10480c <.text+0x480c>
  1055f8:	e59d4054 	ldr	r4, [sp, #84]
  1055fc:	e3570066 	cmp	r7, #102	; 0x66
  105600:	e3844c01 	orr	r4, r4, #256	; 0x100
  105604:	e58d4054 	str	r4, [sp, #84]
  105608:	01a0b006 	moveq	fp, r6
  10560c:	03a02003 	moveq	r2, #3	; 0x3
  105610:	0a000005 	beq	10562c <.text+0x562c>
  105614:	e3570045 	cmp	r7, #69	; 0x45
  105618:	13570065 	cmpne	r7, #101	; 0x65
  10561c:	11a0b006 	movne	fp, r6
  105620:	13a02002 	movne	r2, #2	; 0x2
  105624:	0286b001 	addeq	fp, r6, #1	; 0x1
  105628:	03a02002 	moveq	r2, #2	; 0x2
  10562c:	e28d3048 	add	r3, sp, #72	; 0x48
  105630:	e8930018 	ldmia	r3, {r3, r4}
  105634:	e3530000 	cmp	r3, #0	; 0x0
  105638:	a3a0c000 	movge	ip, #0	; 0x0
  10563c:	b3a0c02d 	movlt	ip, #45	; 0x2d
  105640:	b59d1048 	ldrlt	r1, [sp, #72]
  105644:	b59d304c 	ldrlt	r3, [sp, #76]
  105648:	a58dc02c 	strge	ip, [sp, #44]
  10564c:	b58dc02c 	strlt	ip, [sp, #44]
  105650:	e28dce6a 	add	ip, sp, #1696	; 0x6a0
  105654:	e28cc008 	add	ip, ip, #8	; 0x8
  105658:	a1a05004 	movge	r5, r4
  10565c:	b1a05003 	movlt	r5, r3
  105660:	a1a04003 	movge	r4, r3
  105664:	b2814102 	addlt	r4, r1, #-2147483648	; 0x80000000
  105668:	e58dc004 	str	ip, [sp, #4]
  10566c:	e28dce69 	add	ip, sp, #1680	; 0x690
  105670:	e1a03002 	mov	r3, r2
  105674:	e28dee6a 	add	lr, sp, #1696	; 0x6a0
  105678:	e28cc00c 	add	ip, ip, #12	; 0xc
  10567c:	e59d0010 	ldr	r0, [sp, #16]
  105680:	e1a01004 	mov	r1, r4
  105684:	e1a02005 	mov	r2, r5
  105688:	e58de008 	str	lr, [sp, #8]
  10568c:	e58dc00c 	str	ip, [sp, #12]
  105690:	e58db000 	str	fp, [sp]
  105694:	eb00044e 	bl	1067d4 <_dtoa_r>
  105698:	e3570067 	cmp	r7, #103	; 0x67
  10569c:	13570047 	cmpne	r7, #71	; 0x47
  1056a0:	e58d001c 	str	r0, [sp, #28]
  1056a4:	1a000003 	bne	1056b8 <.text+0x56b8>
  1056a8:	e59d1054 	ldr	r1, [sp, #84]
  1056ac:	e3110001 	tst	r1, #1	; 0x1
  1056b0:	059d269c 	ldreq	r2, [sp, #1692]
  1056b4:	0a000019 	beq	105720 <.text+0x5720>
  1056b8:	e59d201c 	ldr	r2, [sp, #28]
  1056bc:	e3570066 	cmp	r7, #102	; 0x66
  1056c0:	e082900b 	add	r9, r2, fp
  1056c4:	0a00012d 	beq	105b80 <.text+0x5b80>
  1056c8:	e3a02000 	mov	r2, #0	; 0x0
  1056cc:	e1a00004 	mov	r0, r4
  1056d0:	e1a01005 	mov	r1, r5
  1056d4:	e3a03000 	mov	r3, #0	; 0x0
  1056d8:	eb001387 	bl	10a4fc <__cmpdf2>
  1056dc:	e3500000 	cmp	r0, #0	; 0x0
  1056e0:	01a02009 	moveq	r2, r9
  1056e4:	058d269c 	streq	r2, [sp, #1692]
  1056e8:	0a00000c 	beq	105720 <.text+0x5720>
  1056ec:	e59d269c 	ldr	r2, [sp, #1692]
  1056f0:	e1590002 	cmp	r9, r2
  1056f4:	9a000009 	bls	105720 <.text+0x5720>
  1056f8:	e0623009 	rsb	r3, r2, r9
  1056fc:	e0823003 	add	r3, r2, r3
  105700:	e2821001 	add	r1, r2, #1	; 0x1
  105704:	e3a00030 	mov	r0, #48	; 0x30
  105708:	e1510003 	cmp	r1, r3
  10570c:	e5410001 	strb	r0, [r1, #-1]
  105710:	e1a02001 	mov	r2, r1
  105714:	e58d169c 	str	r1, [sp, #1692]
  105718:	e2811001 	add	r1, r1, #1	; 0x1
  10571c:	1afffff9 	bne	105708 <.text+0x5708>
  105720:	e59d401c 	ldr	r4, [sp, #28]
  105724:	e3570067 	cmp	r7, #103	; 0x67
  105728:	13a03000 	movne	r3, #0	; 0x0
  10572c:	03a03001 	moveq	r3, #1	; 0x1
  105730:	e3570067 	cmp	r7, #103	; 0x67
  105734:	13570047 	cmpne	r7, #71	; 0x47
  105738:	e0645002 	rsb	r5, r4, r2
  10573c:	1a000082 	bne	10594c <.text+0x594c>
  105740:	e59d06a8 	ldr	r0, [sp, #1704]
  105744:	e3700004 	cmn	r0, #4	; 0x4
  105748:	da0000bd 	ble	105a44 <.text+0x5a44>
  10574c:	e1560000 	cmp	r6, r0
  105750:	a3a07067 	movge	r7, #103	; 0x67
  105754:	ba0000ba 	blt	105a44 <.text+0x5a44>
  105758:	e1550000 	cmp	r5, r0
  10575c:	e1a0b000 	mov	fp, r0
  105760:	ca0000fd 	bgt	105b5c <.text+0x5b5c>
  105764:	e59d1054 	ldr	r1, [sp, #84]
  105768:	e3110001 	tst	r1, #1	; 0x1
  10576c:	1280b001 	addne	fp, r0, #1	; 0x1
  105770:	1a0000f4 	bne	105b48 <.text+0x5b48>
  105774:	e35b0000 	cmp	fp, #0	; 0x0
  105778:	a1a0200b 	movge	r2, fp
  10577c:	b3a02000 	movlt	r2, #0	; 0x0
  105780:	e58d203c 	str	r2, [sp, #60]
  105784:	e59dc02c 	ldr	ip, [sp, #44]
  105788:	e35c0000 	cmp	ip, #0	; 0x0
  10578c:	1a000068 	bne	105934 <.text+0x5934>
  105790:	e35b0000 	cmp	fp, #0	; 0x0
  105794:	a1a0100b 	movge	r1, fp
  105798:	b3a01000 	movlt	r1, #0	; 0x0
  10579c:	e58d103c 	str	r1, [sp, #60]
  1057a0:	e58d5034 	str	r5, [sp, #52]
  1057a4:	e58dc038 	str	ip, [sp, #56]
  1057a8:	eafffab5 	b	104284 <.text+0x4284>
  1057ac:	e51f9610 	ldr	r9, [pc, #-1552]	; 1051a4 <.text+0x51a4>
  1057b0:	e2855001 	add	r5, r5, #1	; 0x1
  1057b4:	e0866004 	add	r6, r6, r4
  1057b8:	e3550007 	cmp	r5, #7	; 0x7
  1057bc:	e5829000 	str	r9, [r2]
  1057c0:	e5824004 	str	r4, [r2, #4]
  1057c4:	e58d6680 	str	r6, [sp, #1664]
  1057c8:	e58d567c 	str	r5, [sp, #1660]
  1057cc:	d2822008 	addle	r2, r2, #8	; 0x8
  1057d0:	da000008 	ble	1057f8 <.text+0x57f8>
  1057d4:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1057d8:	e1a0000a 	mov	r0, sl
  1057dc:	e2811008 	add	r1, r1, #8	; 0x8
  1057e0:	ebfff94a 	bl	103d10 <__sprint>
  1057e4:	e3500000 	cmp	r0, #0	; 0x0
  1057e8:	1afffa46 	bne	104108 <.text+0x4108>
  1057ec:	e59d6680 	ldr	r6, [sp, #1664]
  1057f0:	e59d567c 	ldr	r5, [sp, #1660]
  1057f4:	e28d2e61 	add	r2, sp, #1552	; 0x610
  1057f8:	e59d4034 	ldr	r4, [sp, #52]
  1057fc:	e2855001 	add	r5, r5, #1	; 0x1
  105800:	e59d801c 	ldr	r8, [sp, #28]
  105804:	e3550007 	cmp	r5, #7	; 0x7
  105808:	e0866004 	add	r6, r6, r4
  10580c:	e5828000 	str	r8, [r2]
  105810:	e5824004 	str	r4, [r2, #4]
  105814:	e58d6680 	str	r6, [sp, #1664]
  105818:	e58d567c 	str	r5, [sp, #1660]
  10581c:	d282c008 	addle	ip, r2, #8	; 0x8
  105820:	dafffbd3 	ble	104774 <.text+0x4774>
  105824:	eafffd99 	b	104e90 <.text+0x4e90>
  105828:	e28d1e67 	add	r1, sp, #1648	; 0x670
  10582c:	e1a0000a 	mov	r0, sl
  105830:	e2811008 	add	r1, r1, #8	; 0x8
  105834:	ebfff935 	bl	103d10 <__sprint>
  105838:	e3500000 	cmp	r0, #0	; 0x0
  10583c:	1afffa31 	bne	104108 <.text+0x4108>
  105840:	e59d6680 	ldr	r6, [sp, #1664]
  105844:	e59d567c 	ldr	r5, [sp, #1660]
  105848:	e59d06a8 	ldr	r0, [sp, #1704]
  10584c:	e28dce61 	add	ip, sp, #1552	; 0x610
  105850:	eafffd82 	b	104e60 <.text+0x4e60>
  105854:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105858:	e1a0000a 	mov	r0, sl
  10585c:	e2811008 	add	r1, r1, #8	; 0x8
  105860:	ebfff92a 	bl	103d10 <__sprint>
  105864:	e3500000 	cmp	r0, #0	; 0x0
  105868:	1afffa26 	bne	104108 <.text+0x4108>
  10586c:	e59d6680 	ldr	r6, [sp, #1664]
  105870:	e59d567c 	ldr	r5, [sp, #1660]
  105874:	e59d06a8 	ldr	r0, [sp, #1704]
  105878:	e28d1e61 	add	r1, sp, #1552	; 0x610
  10587c:	eafffd6b 	b	104e30 <.text+0x4e30>
  105880:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105884:	e1a0000a 	mov	r0, sl
  105888:	e2811008 	add	r1, r1, #8	; 0x8
  10588c:	ebfff91f 	bl	103d10 <__sprint>
  105890:	e3500000 	cmp	r0, #0	; 0x0
  105894:	1afffa1b 	bne	104108 <.text+0x4108>
  105898:	e59d6680 	ldr	r6, [sp, #1664]
  10589c:	e59d06a8 	ldr	r0, [sp, #1704]
  1058a0:	e28dce61 	add	ip, sp, #1552	; 0x610
  1058a4:	eafffe5d 	b	105220 <.text+0x5220>
  1058a8:	e51f970c 	ldr	r9, [pc, #-1804]	; 1051a4 <.text+0x51a4>
  1058ac:	eafffce9 	b	104c58 <.text+0x4c58>
  1058b0:	e3560000 	cmp	r6, #0	; 0x0
  1058b4:	a1a04006 	movge	r4, r6
  1058b8:	b3a04000 	movlt	r4, #0	; 0x0
  1058bc:	e1a0b006 	mov	fp, r6
  1058c0:	e58d403c 	str	r4, [sp, #60]
  1058c4:	e58d5038 	str	r5, [sp, #56]
  1058c8:	eafffa6d 	b	104284 <.text+0x4284>
  1058cc:	e28d1e67 	add	r1, sp, #1648	; 0x670
  1058d0:	e1a0000a 	mov	r0, sl
  1058d4:	e2811008 	add	r1, r1, #8	; 0x8
  1058d8:	ebfff90c 	bl	103d10 <__sprint>
  1058dc:	e3500000 	cmp	r0, #0	; 0x0
  1058e0:	1afffa08 	bne	104108 <.text+0x4108>
  1058e4:	e59d6680 	ldr	r6, [sp, #1664]
  1058e8:	e59d06a8 	ldr	r0, [sp, #1704]
  1058ec:	e28dce61 	add	ip, sp, #1552	; 0x610
  1058f0:	eaffff08 	b	105518 <.text+0x5518>
  1058f4:	e59d001c 	ldr	r0, [sp, #28]
  1058f8:	ebfff71e 	bl	103578 <strlen>
  1058fc:	e3500000 	cmp	r0, #0	; 0x0
  105900:	a1a0c000 	movge	ip, r0
  105904:	b3a0c000 	movlt	ip, #0	; 0x0
  105908:	e1a0b000 	mov	fp, r0
  10590c:	e58dc03c 	str	ip, [sp, #60]
  105910:	e58d5038 	str	r5, [sp, #56]
  105914:	eafffa5a 	b	104284 <.text+0x4284>
  105918:	e3a02003 	mov	r2, #3	; 0x3
  10591c:	e51f377c 	ldr	r3, [pc, #-1916]	; 1051a8 <.text+0x51a8>
  105920:	e1a0b002 	mov	fp, r2
  105924:	e58d203c 	str	r2, [sp, #60]
  105928:	e58d301c 	str	r3, [sp, #28]
  10592c:	e58d4038 	str	r4, [sp, #56]
  105930:	eafffa53 	b	104284 <.text+0x4284>
  105934:	e3a02000 	mov	r2, #0	; 0x0
  105938:	e3a0302d 	mov	r3, #45	; 0x2d
  10593c:	e58d5034 	str	r5, [sp, #52]
  105940:	e58d2038 	str	r2, [sp, #56]
  105944:	e5cd36af 	strb	r3, [sp, #1711]
  105948:	eafffa50 	b	104290 <.text+0x4290>
  10594c:	e3570065 	cmp	r7, #101	; 0x65
  105950:	ca000069 	bgt	105afc <.text+0x5afc>
  105954:	e59d06a8 	ldr	r0, [sp, #1704]
  105958:	e20730ff 	and	r3, r7, #255	; 0xff
  10595c:	e2400001 	sub	r0, r0, #1	; 0x1
  105960:	e3500000 	cmp	r0, #0	; 0x0
  105964:	e5cd3695 	strb	r3, [sp, #1685]
  105968:	e1a0c000 	mov	ip, r0
  10596c:	b3a0302d 	movlt	r3, #45	; 0x2d
  105970:	a3a0302b 	movge	r3, #43	; 0x2b
  105974:	b260c000 	rsblt	ip, r0, #0	; 0x0
  105978:	b5cd3696 	strltb	r3, [sp, #1686]
  10597c:	a5cd3696 	strgeb	r3, [sp, #1686]
  105980:	e35c0009 	cmp	ip, #9	; 0x9
  105984:	d28c2030 	addle	r2, ip, #48	; 0x30
  105988:	d5cd2698 	strleb	r2, [sp, #1688]
  10598c:	d3a03030 	movle	r3, #48	; 0x30
  105990:	d28d2e69 	addle	r2, sp, #1680	; 0x690
  105994:	e58d06a8 	str	r0, [sp, #1704]
  105998:	d5cd3697 	strleb	r3, [sp, #1687]
  10599c:	d2822009 	addle	r2, r2, #9	; 0x9
  1059a0:	da00001a 	ble	105a10 <.text+0x5a10>
  1059a4:	e28d4e67 	add	r4, sp, #1648	; 0x670
  1059a8:	e2844008 	add	r4, r4, #8	; 0x8
  1059ac:	e51f0808 	ldr	r0, [pc, #-2056]	; 1051ac <.text+0x51ac>
  1059b0:	e1a0e004 	mov	lr, r4
  1059b4:	e0c31c90 	smull	r1, r3, r0, ip
  1059b8:	e1a02fcc 	mov	r2, ip, asr #31
  1059bc:	e0622143 	rsb	r2, r2, r3, asr #2
  1059c0:	e0821102 	add	r1, r2, r2, lsl #2
  1059c4:	e04c1081 	sub	r1, ip, r1, lsl #1
  1059c8:	e2811030 	add	r1, r1, #48	; 0x30
  1059cc:	e3520009 	cmp	r2, #9	; 0x9
  1059d0:	e1a0c002 	mov	ip, r2
  1059d4:	e56e1001 	strb	r1, [lr, #-1]!
  1059d8:	cafffff5 	bgt	1059b4 <.text+0x59b4>
  1059dc:	e24e0001 	sub	r0, lr, #1	; 0x1
  1059e0:	e1500004 	cmp	r0, r4
  1059e4:	e2823030 	add	r3, r2, #48	; 0x30
  1059e8:	228d2e69 	addcs	r2, sp, #1680	; 0x690
  1059ec:	e54e3001 	strb	r3, [lr, #-1]
  1059f0:	22822007 	addcs	r2, r2, #7	; 0x7
  1059f4:	2a000005 	bcs	105a10 <.text+0x5a10>
  1059f8:	e28d2e69 	add	r2, sp, #1680	; 0x690
  1059fc:	e2822007 	add	r2, r2, #7	; 0x7
  105a00:	e4d03001 	ldrb	r3, [r0], #1
  105a04:	e1500004 	cmp	r0, r4
  105a08:	e4c23001 	strb	r3, [r2], #1
  105a0c:	3afffffb 	bcc	105a00 <.text+0x5a00>
  105a10:	e28d3e69 	add	r3, sp, #1680	; 0x690
  105a14:	e2833005 	add	r3, r3, #5	; 0x5
  105a18:	e0632002 	rsb	r2, r3, r2
  105a1c:	e3550001 	cmp	r5, #1	; 0x1
  105a20:	e58d2030 	str	r2, [sp, #48]
  105a24:	e085b002 	add	fp, r5, r2
  105a28:	da000043 	ble	105b3c <.text+0x5b3c>
  105a2c:	e28bb001 	add	fp, fp, #1	; 0x1
  105a30:	e35b0000 	cmp	fp, #0	; 0x0
  105a34:	a1a0400b 	movge	r4, fp
  105a38:	b3a04000 	movlt	r4, #0	; 0x0
  105a3c:	e58d403c 	str	r4, [sp, #60]
  105a40:	eaffff4f 	b	105784 <.text+0x5784>
  105a44:	e3530000 	cmp	r3, #0	; 0x0
  105a48:	13a03065 	movne	r3, #101	; 0x65
  105a4c:	11a07003 	movne	r7, r3
  105a50:	03a03045 	moveq	r3, #69	; 0x45
  105a54:	01a07003 	moveq	r7, r3
  105a58:	eaffffbf 	b	10595c <.text+0x595c>
  105a5c:	e3a01000 	mov	r1, #0	; 0x0
  105a60:	e28d2e6a 	add	r2, sp, #1696	; 0x6a0
  105a64:	e59d0010 	ldr	r0, [sp, #16]
  105a68:	e2822004 	add	r2, r2, #4	; 0x4
  105a6c:	e1a03001 	mov	r3, r1
  105a70:	e58d9000 	str	r9, [sp]
  105a74:	eb0000a7 	bl	105d18 <_wcsrtombs_r>
  105a78:	e3700001 	cmn	r0, #1	; 0x1
  105a7c:	e1a0b000 	mov	fp, r0
  105a80:	159d401c 	ldrne	r4, [sp, #28]
  105a84:	158d46a4 	strne	r4, [sp, #1700]
  105a88:	1afffbc4 	bne	1049a0 <.text+0x49a0>
  105a8c:	e1da30bc 	ldrh	r3, [sl, #12]
  105a90:	e3833040 	orr	r3, r3, #64	; 0x40
  105a94:	e1ca30bc 	strh	r3, [sl, #12]
  105a98:	eafff9a0 	b	104120 <.text+0x4120>
  105a9c:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105aa0:	e1a0000a 	mov	r0, sl
  105aa4:	e2811008 	add	r1, r1, #8	; 0x8
  105aa8:	ebfff898 	bl	103d10 <__sprint>
  105aac:	e3500000 	cmp	r0, #0	; 0x0
  105ab0:	1afff994 	bne	104108 <.text+0x4108>
  105ab4:	e59d6680 	ldr	r6, [sp, #1664]
  105ab8:	e59d567c 	ldr	r5, [sp, #1660]
  105abc:	e59d06a8 	ldr	r0, [sp, #1704]
  105ac0:	e28d2e61 	add	r2, sp, #1552	; 0x610
  105ac4:	eafffea4 	b	10555c <.text+0x555c>
  105ac8:	e3560000 	cmp	r6, #0	; 0x0
  105acc:	a1a01006 	movge	r1, r6
  105ad0:	b3a01000 	movlt	r1, #0	; 0x0
  105ad4:	e1a0b006 	mov	fp, r6
  105ad8:	e58d103c 	str	r1, [sp, #60]
  105adc:	e58d0038 	str	r0, [sp, #56]
  105ae0:	eafff9e7 	b	104284 <.text+0x4284>
  105ae4:	e59d3680 	ldr	r3, [sp, #1664]
  105ae8:	e3530000 	cmp	r3, #0	; 0x0
  105aec:	1a000031 	bne	105bb8 <.text+0x5bb8>
  105af0:	e3a03000 	mov	r3, #0	; 0x0
  105af4:	e58d367c 	str	r3, [sp, #1660]
  105af8:	eafff988 	b	104120 <.text+0x4120>
  105afc:	e3570066 	cmp	r7, #102	; 0x66
  105b00:	159d06a8 	ldrne	r0, [sp, #1704]
  105b04:	1affff13 	bne	105758 <.text+0x5758>
  105b08:	e59db6a8 	ldr	fp, [sp, #1704]
  105b0c:	e35b0000 	cmp	fp, #0	; 0x0
  105b10:	da00003e 	ble	105c10 <.text+0x5c10>
  105b14:	e3560000 	cmp	r6, #0	; 0x0
  105b18:	1a00002d 	bne	105bd4 <.text+0x5bd4>
  105b1c:	e59dc054 	ldr	ip, [sp, #84]
  105b20:	e31c0001 	tst	ip, #1	; 0x1
  105b24:	1a00002a 	bne	105bd4 <.text+0x5bd4>
  105b28:	e35b0000 	cmp	fp, #0	; 0x0
  105b2c:	a1a0100b 	movge	r1, fp
  105b30:	b3a01000 	movlt	r1, #0	; 0x0
  105b34:	e58d103c 	str	r1, [sp, #60]
  105b38:	eaffff11 	b	105784 <.text+0x5784>
  105b3c:	e59d2054 	ldr	r2, [sp, #84]
  105b40:	e3120001 	tst	r2, #1	; 0x1
  105b44:	1affffb8 	bne	105a2c <.text+0x5a2c>
  105b48:	e35b0000 	cmp	fp, #0	; 0x0
  105b4c:	a1a0300b 	movge	r3, fp
  105b50:	b3a03000 	movlt	r3, #0	; 0x0
  105b54:	e58d303c 	str	r3, [sp, #60]
  105b58:	eaffff09 	b	105784 <.text+0x5784>
  105b5c:	e3500000 	cmp	r0, #0	; 0x0
  105b60:	c3a00001 	movgt	r0, #1	; 0x1
  105b64:	d26b0002 	rsble	r0, fp, #2	; 0x2
  105b68:	e080b005 	add	fp, r0, r5
  105b6c:	e35b0000 	cmp	fp, #0	; 0x0
  105b70:	a1a0400b 	movge	r4, fp
  105b74:	b3a04000 	movlt	r4, #0	; 0x0
  105b78:	e58d403c 	str	r4, [sp, #60]
  105b7c:	eaffff00 	b	105784 <.text+0x5784>
  105b80:	e5d23000 	ldrb	r3, [r2]
  105b84:	e3530030 	cmp	r3, #48	; 0x30
  105b88:	1a000007 	bne	105bac <.text+0x5bac>
  105b8c:	e1a00004 	mov	r0, r4
  105b90:	e1a01005 	mov	r1, r5
  105b94:	e3a02000 	mov	r2, #0	; 0x0
  105b98:	e3a03000 	mov	r3, #0	; 0x0
  105b9c:	eb001256 	bl	10a4fc <__cmpdf2>
  105ba0:	e3500000 	cmp	r0, #0	; 0x0
  105ba4:	126b0001 	rsbne	r0, fp, #1	; 0x1
  105ba8:	158d06a8 	strne	r0, [sp, #1704]
  105bac:	e59d06a8 	ldr	r0, [sp, #1704]
  105bb0:	e0899000 	add	r9, r9, r0
  105bb4:	eafffec3 	b	1056c8 <.text+0x56c8>
  105bb8:	e28d1e67 	add	r1, sp, #1648	; 0x670
  105bbc:	e1a0000a 	mov	r0, sl
  105bc0:	e2811008 	add	r1, r1, #8	; 0x8
  105bc4:	ebfff851 	bl	103d10 <__sprint>
  105bc8:	e3500000 	cmp	r0, #0	; 0x0
  105bcc:	1afff953 	bne	104120 <.text+0x4120>
  105bd0:	eaffffc6 	b	105af0 <.text+0x5af0>
  105bd4:	e28b3001 	add	r3, fp, #1	; 0x1
  105bd8:	e086b003 	add	fp, r6, r3
  105bdc:	e35b0000 	cmp	fp, #0	; 0x0
  105be0:	a1a0200b 	movge	r2, fp
  105be4:	b3a02000 	movlt	r2, #0	; 0x0
  105be8:	e58d203c 	str	r2, [sp, #60]
  105bec:	eafffee4 	b	105784 <.text+0x5784>
  105bf0:	e5996000 	ldr	r6, [r9]
  105bf4:	e3560000 	cmp	r6, #0	; 0x0
  105bf8:	e2891004 	add	r1, r9, #4	; 0x4
  105bfc:	ba000015 	blt	105c58 <.text+0x5c58>
  105c00:	e58d2018 	str	r2, [sp, #24]
  105c04:	e5d23000 	ldrb	r3, [r2]
  105c08:	e1a09001 	mov	r9, r1
  105c0c:	eafff8cd 	b	103f48 <_vfprintf_r+0x1f8>
  105c10:	e3560000 	cmp	r6, #0	; 0x0
  105c14:	1a000005 	bne	105c30 <.text+0x5c30>
  105c18:	e59d3054 	ldr	r3, [sp, #84]
  105c1c:	e3130001 	tst	r3, #1	; 0x1
  105c20:	03a04001 	moveq	r4, #1	; 0x1
  105c24:	058d403c 	streq	r4, [sp, #60]
  105c28:	01a0b004 	moveq	fp, r4
  105c2c:	0afffed4 	beq	105784 <.text+0x5784>
  105c30:	e286b002 	add	fp, r6, #2	; 0x2
  105c34:	e35b0000 	cmp	fp, #0	; 0x0
  105c38:	a1a0c00b 	movge	ip, fp
  105c3c:	b3a0c000 	movlt	ip, #0	; 0x0
  105c40:	e58dc03c 	str	ip, [sp, #60]
  105c44:	eafffece 	b	105784 <.text+0x5784>
  105c48:	e1da30bc 	ldrh	r3, [sl, #12]
  105c4c:	e3833040 	orr	r3, r3, #64	; 0x40
  105c50:	e1ca30bc 	strh	r3, [sl, #12]
  105c54:	eafff92e 	b	104114 <.text+0x4114>
  105c58:	e58d2018 	str	r2, [sp, #24]
  105c5c:	e5d23000 	ldrb	r3, [r2]
  105c60:	e1a09001 	mov	r9, r1
  105c64:	e3e06000 	mvn	r6, #0	; 0x0
  105c68:	eafff8b6 	b	103f48 <_vfprintf_r+0x1f8>

00105c6c <vfprintf>:
  105c6c:	e52de004 	str	lr, [sp, #-4]!
  105c70:	e1a03002 	mov	r3, r2
  105c74:	e59f2018 	ldr	r2, [pc, #24]	; 105c94 <.text+0x5c94>
  105c78:	e1a0c000 	mov	ip, r0
  105c7c:	e1a0e001 	mov	lr, r1
  105c80:	e5920000 	ldr	r0, [r2]
  105c84:	e1a0100c 	mov	r1, ip
  105c88:	e1a0200e 	mov	r2, lr
  105c8c:	e49de004 	ldr	lr, [sp], #4
  105c90:	eafff82e 	b	103d50 <_vfprintf_r>
  105c94:	00200184 	eoreq	r0, r0, r4, lsl #3

00105c98 <_wcrtomb_r>:
  105c98:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  105c9c:	e251c000 	subs	ip, r1, #0	; 0x0
  105ca0:	e24dd00c 	sub	sp, sp, #12	; 0xc
  105ca4:	e1a05000 	mov	r5, r0
  105ca8:	e1a04003 	mov	r4, r3
  105cac:	0a00000a 	beq	105cdc <_wcrtomb_r+0x44>
  105cb0:	eb000076 	bl	105e90 <_wctomb_r>
  105cb4:	e3700001 	cmn	r0, #1	; 0x1
  105cb8:	e1a01000 	mov	r1, r0
  105cbc:	11a01000 	movne	r1, r0
  105cc0:	03a03000 	moveq	r3, #0	; 0x0
  105cc4:	03a0208a 	moveq	r2, #138	; 0x8a
  105cc8:	e1a00001 	mov	r0, r1
  105ccc:	05843000 	streq	r3, [r4]
  105cd0:	05852000 	streq	r2, [r5]
  105cd4:	e28dd00c 	add	sp, sp, #12	; 0xc
  105cd8:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  105cdc:	e1a0200c 	mov	r2, ip
  105ce0:	e28d1002 	add	r1, sp, #2	; 0x2
  105ce4:	eb000069 	bl	105e90 <_wctomb_r>
  105ce8:	eafffff1 	b	105cb4 <_wcrtomb_r+0x1c>

00105cec <wcrtomb>:
  105cec:	e52de004 	str	lr, [sp, #-4]!
  105cf0:	e1a03002 	mov	r3, r2
  105cf4:	e59f2018 	ldr	r2, [pc, #24]	; 105d14 <.text+0x5d14>
  105cf8:	e1a0c000 	mov	ip, r0
  105cfc:	e1a0e001 	mov	lr, r1
  105d00:	e5920000 	ldr	r0, [r2]
  105d04:	e1a0100c 	mov	r1, ip
  105d08:	e1a0200e 	mov	r2, lr
  105d0c:	e49de004 	ldr	lr, [sp], #4
  105d10:	eaffffe0 	b	105c98 <_wcrtomb_r>
  105d14:	00200184 	eoreq	r0, r0, r4, lsl #3

00105d18 <_wcsrtombs_r>:
  105d18:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  105d1c:	e3510000 	cmp	r1, #0	; 0x0
  105d20:	e24dd014 	sub	sp, sp, #20	; 0x14
  105d24:	e58d1000 	str	r1, [sp]
  105d28:	e58d0004 	str	r0, [sp, #4]
  105d2c:	e1a0b002 	mov	fp, r2
  105d30:	e1a06003 	mov	r6, r3
  105d34:	e59d9038 	ldr	r9, [sp, #56]
  105d38:	0a000039 	beq	105e24 <_wcsrtombs_r+0x10c>
  105d3c:	e3530000 	cmp	r3, #0	; 0x0
  105d40:	e5928000 	ldr	r8, [r2]
  105d44:	0a000039 	beq	105e30 <_wcsrtombs_r+0x118>
  105d48:	e59d4000 	ldr	r4, [sp]
  105d4c:	e3a05000 	mov	r5, #0	; 0x0
  105d50:	e59d0004 	ldr	r0, [sp, #4]
  105d54:	e28d100a 	add	r1, sp, #10	; 0xa
  105d58:	e5982000 	ldr	r2, [r8]
  105d5c:	e1a03009 	mov	r3, r9
  105d60:	e599a000 	ldr	sl, [r9]
  105d64:	e5997004 	ldr	r7, [r9, #4]
  105d68:	ebffffca 	bl	105c98 <_wcrtomb_r>
  105d6c:	e3700001 	cmn	r0, #1	; 0x1
  105d70:	0a00001f 	beq	105df4 <_wcsrtombs_r+0xdc>
  105d74:	e0603006 	rsb	r3, r0, r6
  105d78:	e1530005 	cmp	r3, r5
  105d7c:	33a02000 	movcc	r2, #0	; 0x0
  105d80:	23a02001 	movcs	r2, #1	; 0x1
  105d84:	e1500006 	cmp	r0, r6
  105d88:	23a02000 	movcs	r2, #0	; 0x0
  105d8c:	e3520000 	cmp	r2, #0	; 0x0
  105d90:	0a000020 	beq	105e18 <_wcsrtombs_r+0x100>
  105d94:	e59d1000 	ldr	r1, [sp]
  105d98:	e3510000 	cmp	r1, #0	; 0x0
  105d9c:	e0855000 	add	r5, r5, r0
  105da0:	0a00000c 	beq	105dd8 <_wcsrtombs_r+0xc0>
  105da4:	e3500000 	cmp	r0, #0	; 0x0
  105da8:	da000007 	ble	105dcc <_wcsrtombs_r+0xb4>
  105dac:	e3a02000 	mov	r2, #0	; 0x0
  105db0:	e282100a 	add	r1, r2, #10	; 0xa
  105db4:	e7d1300d 	ldrb	r3, [r1, sp]
  105db8:	e7c23004 	strb	r3, [r2, r4]
  105dbc:	e2822001 	add	r2, r2, #1	; 0x1
  105dc0:	e1500002 	cmp	r0, r2
  105dc4:	1afffff9 	bne	105db0 <_wcsrtombs_r+0x98>
  105dc8:	e0844000 	add	r4, r4, r0
  105dcc:	e59b3000 	ldr	r3, [fp]
  105dd0:	e2833004 	add	r3, r3, #4	; 0x4
  105dd4:	e58b3000 	str	r3, [fp]
  105dd8:	e5983000 	ldr	r3, [r8]
  105ddc:	e3530000 	cmp	r3, #0	; 0x0
  105de0:	0a000014 	beq	105e38 <_wcsrtombs_r+0x120>
  105de4:	e1550006 	cmp	r5, r6
  105de8:	2a000007 	bcs	105e0c <_wcsrtombs_r+0xf4>
  105dec:	e2888004 	add	r8, r8, #4	; 0x4
  105df0:	eaffffd6 	b	105d50 <_wcsrtombs_r+0x38>
  105df4:	e59d1004 	ldr	r1, [sp, #4]
  105df8:	e3a0308a 	mov	r3, #138	; 0x8a
  105dfc:	e3a02000 	mov	r2, #0	; 0x0
  105e00:	e5813000 	str	r3, [r1]
  105e04:	e5892000 	str	r2, [r9]
  105e08:	e1a05000 	mov	r5, r0
  105e0c:	e1a00005 	mov	r0, r5
  105e10:	e28dd014 	add	sp, sp, #20	; 0x14
  105e14:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  105e18:	e5897004 	str	r7, [r9, #4]
  105e1c:	e589a000 	str	sl, [r9]
  105e20:	eafffff9 	b	105e0c <_wcsrtombs_r+0xf4>
  105e24:	e5928000 	ldr	r8, [r2]
  105e28:	e3e06000 	mvn	r6, #0	; 0x0
  105e2c:	eaffffc5 	b	105d48 <_wcsrtombs_r+0x30>
  105e30:	e3a05000 	mov	r5, #0	; 0x0
  105e34:	eafffff4 	b	105e0c <_wcsrtombs_r+0xf4>
  105e38:	e59d2000 	ldr	r2, [sp]
  105e3c:	e2455001 	sub	r5, r5, #1	; 0x1
  105e40:	e3520000 	cmp	r2, #0	; 0x0
  105e44:	158b3000 	strne	r3, [fp]
  105e48:	e5893000 	str	r3, [r9]
  105e4c:	eaffffee 	b	105e0c <_wcsrtombs_r+0xf4>

00105e50 <wcsrtombs>:
  105e50:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  105e54:	e59fc030 	ldr	ip, [pc, #48]	; 105e8c <.text+0x5e8c>
  105e58:	e59ce000 	ldr	lr, [ip]
  105e5c:	e1a04000 	mov	r4, r0
  105e60:	e1a0c001 	mov	ip, r1
  105e64:	e1a05002 	mov	r5, r2
  105e68:	e24dd004 	sub	sp, sp, #4	; 0x4
  105e6c:	e58d3000 	str	r3, [sp]
  105e70:	e1a0000e 	mov	r0, lr
  105e74:	e1a01004 	mov	r1, r4
  105e78:	e1a0200c 	mov	r2, ip
  105e7c:	e1a03005 	mov	r3, r5
  105e80:	ebffffa4 	bl	105d18 <_wcsrtombs_r>
  105e84:	e28dd004 	add	sp, sp, #4	; 0x4
  105e88:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  105e8c:	00200184 	eoreq	r0, r0, r4, lsl #3

00105e90 <_wctomb_r>:
  105e90:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  105e94:	e59f0400 	ldr	r0, [pc, #1024]	; 10629c <.text+0x629c>
  105e98:	e1a07001 	mov	r7, r1
  105e9c:	e1a04002 	mov	r4, r2
  105ea0:	e1a05003 	mov	r5, r3
  105ea4:	ebfff5b3 	bl	103578 <strlen>
  105ea8:	e3500001 	cmp	r0, #1	; 0x1
  105eac:	9a000025 	bls	105f48 <_wctomb_r+0xb8>
  105eb0:	e59f03e4 	ldr	r0, [pc, #996]	; 10629c <.text+0x629c>
  105eb4:	e59f13e4 	ldr	r1, [pc, #996]	; 1062a0 <.text+0x62a0>
  105eb8:	eb000ec9 	bl	1099e4 <strcmp>
  105ebc:	e3500000 	cmp	r0, #0	; 0x0
  105ec0:	1a000012 	bne	105f10 <_wctomb_r+0x80>
  105ec4:	e3570000 	cmp	r7, #0	; 0x0
  105ec8:	0a000020 	beq	105f50 <_wctomb_r+0xc0>
  105ecc:	e354007f 	cmp	r4, #127	; 0x7f
  105ed0:	da000018 	ble	105f38 <_wctomb_r+0xa8>
  105ed4:	e2443080 	sub	r3, r4, #128	; 0x80
  105ed8:	e3530d1e 	cmp	r3, #1920	; 0x780
  105edc:	2a000063 	bcs	106070 <_wctomb_r+0x1e0>
  105ee0:	e2043d1f 	and	r3, r4, #1984	; 0x7c0
  105ee4:	e204203f 	and	r2, r4, #63	; 0x3f
  105ee8:	e1a03343 	mov	r3, r3, asr #6
  105eec:	e3a06002 	mov	r6, #2	; 0x2
  105ef0:	e1e03d03 	mvn	r3, r3, lsl #26
  105ef4:	e1e02c82 	mvn	r2, r2, lsl #25
  105ef8:	e1e03d23 	mvn	r3, r3, lsr #26
  105efc:	e1e02ca2 	mvn	r2, r2, lsr #25
  105f00:	e1a00006 	mov	r0, r6
  105f04:	e5c72001 	strb	r2, [r7, #1]
  105f08:	e5c73000 	strb	r3, [r7]
  105f0c:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  105f10:	e59f0384 	ldr	r0, [pc, #900]	; 10629c <.text+0x629c>
  105f14:	e59f1388 	ldr	r1, [pc, #904]	; 1062a4 <.text+0x62a4>
  105f18:	eb000eb1 	bl	1099e4 <strcmp>
  105f1c:	e3500000 	cmp	r0, #0	; 0x0
  105f20:	1a00000d 	bne	105f5c <_wctomb_r+0xcc>
  105f24:	e3570000 	cmp	r7, #0	; 0x0
  105f28:	0a000008 	beq	105f50 <_wctomb_r+0xc0>
  105f2c:	e1a03444 	mov	r3, r4, asr #8
  105f30:	e213e0ff 	ands	lr, r3, #255	; 0xff
  105f34:	1a000034 	bne	10600c <_wctomb_r+0x17c>
  105f38:	e5c74000 	strb	r4, [r7]
  105f3c:	e3a06001 	mov	r6, #1	; 0x1
  105f40:	e1a00006 	mov	r0, r6
  105f44:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  105f48:	e3570000 	cmp	r7, #0	; 0x0
  105f4c:	1afffff9 	bne	105f38 <_wctomb_r+0xa8>
  105f50:	e3a06000 	mov	r6, #0	; 0x0
  105f54:	e1a00006 	mov	r0, r6
  105f58:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  105f5c:	e59f0338 	ldr	r0, [pc, #824]	; 10629c <.text+0x629c>
  105f60:	e59f1340 	ldr	r1, [pc, #832]	; 1062a8 <.text+0x62a8>
  105f64:	eb000e9e 	bl	1099e4 <strcmp>
  105f68:	e3500000 	cmp	r0, #0	; 0x0
  105f6c:	1a00000a 	bne	105f9c <_wctomb_r+0x10c>
  105f70:	e3570000 	cmp	r7, #0	; 0x0
  105f74:	0afffff5 	beq	105f50 <_wctomb_r+0xc0>
  105f78:	e1a03444 	mov	r3, r4, asr #8
  105f7c:	e213e0ff 	ands	lr, r3, #255	; 0xff
  105f80:	0affffec 	beq	105f38 <_wctomb_r+0xa8>
  105f84:	e28e305f 	add	r3, lr, #95	; 0x5f
  105f88:	e20330ff 	and	r3, r3, #255	; 0xff
  105f8c:	e353005d 	cmp	r3, #93	; 0x5d
  105f90:	9a00002f 	bls	106054 <_wctomb_r+0x1c4>
  105f94:	e3e06000 	mvn	r6, #0	; 0x0
  105f98:	eaffffe8 	b	105f40 <_wctomb_r+0xb0>
  105f9c:	e59f02f8 	ldr	r0, [pc, #760]	; 10629c <.text+0x629c>
  105fa0:	e59f1304 	ldr	r1, [pc, #772]	; 1062ac <.text+0x62ac>
  105fa4:	eb000e8e 	bl	1099e4 <strcmp>
  105fa8:	e3500000 	cmp	r0, #0	; 0x0
  105fac:	1affffe5 	bne	105f48 <_wctomb_r+0xb8>
  105fb0:	e3570000 	cmp	r7, #0	; 0x0
  105fb4:	03a06001 	moveq	r6, #1	; 0x1
  105fb8:	0affffe0 	beq	105f40 <_wctomb_r+0xb0>
  105fbc:	e1a03444 	mov	r3, r4, asr #8
  105fc0:	e213e0ff 	ands	lr, r3, #255	; 0xff
  105fc4:	e20400ff 	and	r0, r4, #255	; 0xff
  105fc8:	1a000044 	bne	1060e0 <_wctomb_r+0x250>
  105fcc:	e5953000 	ldr	r3, [r5]
  105fd0:	e3530000 	cmp	r3, #0	; 0x0
  105fd4:	03a06001 	moveq	r6, #1	; 0x1
  105fd8:	0a000009 	beq	106004 <_wctomb_r+0x174>
  105fdc:	e1a01007 	mov	r1, r7
  105fe0:	e3a0301b 	mov	r3, #27	; 0x1b
  105fe4:	e585e000 	str	lr, [r5]
  105fe8:	e4c13001 	strb	r3, [r1], #1
  105fec:	e3a02028 	mov	r2, #40	; 0x28
  105ff0:	e2833027 	add	r3, r3, #39	; 0x27
  105ff4:	e5c72001 	strb	r2, [r7, #1]
  105ff8:	e5c13001 	strb	r3, [r1, #1]
  105ffc:	e2817002 	add	r7, r1, #2	; 0x2
  106000:	e3a06004 	mov	r6, #4	; 0x4
  106004:	e5c70000 	strb	r0, [r7]
  106008:	eaffffcc 	b	105f40 <_wctomb_r+0xb0>
  10600c:	e28e207f 	add	r2, lr, #127	; 0x7f
  106010:	e28e3020 	add	r3, lr, #32	; 0x20
  106014:	e20220ff 	and	r2, r2, #255	; 0xff
  106018:	e20330ff 	and	r3, r3, #255	; 0xff
  10601c:	e353000f 	cmp	r3, #15	; 0xf
  106020:	8352001e 	cmphi	r2, #30	; 0x1e
  106024:	8affffda 	bhi	105f94 <_wctomb_r+0x104>
  106028:	e20400ff 	and	r0, r4, #255	; 0xff
  10602c:	e2403080 	sub	r3, r0, #128	; 0x80
  106030:	e20330ff 	and	r3, r3, #255	; 0xff
  106034:	e2402040 	sub	r2, r0, #64	; 0x40
  106038:	e353007c 	cmp	r3, #124	; 0x7c
  10603c:	8352003e 	cmphi	r2, #62	; 0x3e
  106040:	8affffd3 	bhi	105f94 <_wctomb_r+0x104>
  106044:	e3a06002 	mov	r6, #2	; 0x2
  106048:	e5c70001 	strb	r0, [r7, #1]
  10604c:	e5c7e000 	strb	lr, [r7]
  106050:	eaffffba 	b	105f40 <_wctomb_r+0xb0>
  106054:	e20400ff 	and	r0, r4, #255	; 0xff
  106058:	e280305f 	add	r3, r0, #95	; 0x5f
  10605c:	e20330ff 	and	r3, r3, #255	; 0xff
  106060:	e353005d 	cmp	r3, #93	; 0x5d
  106064:	9afffff6 	bls	106044 <_wctomb_r+0x1b4>
  106068:	e3e06000 	mvn	r6, #0	; 0x0
  10606c:	eaffffb3 	b	105f40 <_wctomb_r+0xb0>
  106070:	e2443b02 	sub	r3, r4, #2048	; 0x800
  106074:	e3530b3e 	cmp	r3, #63488	; 0xf800
  106078:	3a00004f 	bcc	1061bc <_wctomb_r+0x32c>
  10607c:	e2443801 	sub	r3, r4, #65536	; 0x10000
  106080:	e353081f 	cmp	r3, #2031616	; 0x1f0000
  106084:	2a00002d 	bcs	106140 <_wctomb_r+0x2b0>
  106088:	e2043707 	and	r3, r4, #1835008	; 0x1c0000
  10608c:	e1a03943 	mov	r3, r3, asr #18
  106090:	e1e03e03 	mvn	r3, r3, lsl #28
  106094:	e2042a3f 	and	r2, r4, #258048	; 0x3f000
  106098:	e2041d3f 	and	r1, r4, #4032	; 0xfc0
  10609c:	e1a0c007 	mov	ip, r7
  1060a0:	e1e03e23 	mvn	r3, r3, lsr #28
  1060a4:	e1a02642 	mov	r2, r2, asr #12
  1060a8:	e1a01341 	mov	r1, r1, asr #6
  1060ac:	e204003f 	and	r0, r4, #63	; 0x3f
  1060b0:	e4cc3001 	strb	r3, [ip], #1
  1060b4:	e1e02c82 	mvn	r2, r2, lsl #25
  1060b8:	e1e01c81 	mvn	r1, r1, lsl #25
  1060bc:	e1e00c80 	mvn	r0, r0, lsl #25
  1060c0:	e1e02ca2 	mvn	r2, r2, lsr #25
  1060c4:	e1e01ca1 	mvn	r1, r1, lsr #25
  1060c8:	e1e00ca0 	mvn	r0, r0, lsr #25
  1060cc:	e3a06004 	mov	r6, #4	; 0x4
  1060d0:	e5c72001 	strb	r2, [r7, #1]
  1060d4:	e5cc0002 	strb	r0, [ip, #2]
  1060d8:	e5cc1001 	strb	r1, [ip, #1]
  1060dc:	eaffff97 	b	105f40 <_wctomb_r+0xb0>
  1060e0:	e24e3021 	sub	r3, lr, #33	; 0x21
  1060e4:	e353005d 	cmp	r3, #93	; 0x5d
  1060e8:	8affffa9 	bhi	105f94 <_wctomb_r+0x104>
  1060ec:	e2403021 	sub	r3, r0, #33	; 0x21
  1060f0:	e353005d 	cmp	r3, #93	; 0x5d
  1060f4:	8affffa6 	bhi	105f94 <_wctomb_r+0x104>
  1060f8:	e5953000 	ldr	r3, [r5]
  1060fc:	e3530000 	cmp	r3, #0	; 0x0
  106100:	13a06002 	movne	r6, #2	; 0x2
  106104:	1a00000a 	bne	106134 <_wctomb_r+0x2a4>
  106108:	e1a01007 	mov	r1, r7
  10610c:	e3a03001 	mov	r3, #1	; 0x1
  106110:	e3a0201b 	mov	r2, #27	; 0x1b
  106114:	e5853000 	str	r3, [r5]
  106118:	e4c12001 	strb	r2, [r1], #1
  10611c:	e2833023 	add	r3, r3, #35	; 0x23
  106120:	e2822027 	add	r2, r2, #39	; 0x27
  106124:	e5c73001 	strb	r3, [r7, #1]
  106128:	e5c12001 	strb	r2, [r1, #1]
  10612c:	e2817002 	add	r7, r1, #2	; 0x2
  106130:	e3a06005 	mov	r6, #5	; 0x5
  106134:	e5c70001 	strb	r0, [r7, #1]
  106138:	e5c7e000 	strb	lr, [r7]
  10613c:	eaffff7f 	b	105f40 <_wctomb_r+0xb0>
  106140:	e2443602 	sub	r3, r4, #2097152	; 0x200000
  106144:	e353063e 	cmp	r3, #65011712	; 0x3e00000
  106148:	2a00002f 	bcs	10620c <_wctomb_r+0x37c>
  10614c:	e2043403 	and	r3, r4, #50331648	; 0x3000000
  106150:	e1a03c43 	mov	r3, r3, asr #24
  106154:	e1e03e83 	mvn	r3, r3, lsl #29
  106158:	e1a0e007 	mov	lr, r7
  10615c:	e1e03ea3 	mvn	r3, r3, lsr #29
  106160:	e204273f 	and	r2, r4, #16515072	; 0xfc0000
  106164:	e2041a3f 	and	r1, r4, #258048	; 0x3f000
  106168:	e2040d3f 	and	r0, r4, #4032	; 0xfc0
  10616c:	e4ce3001 	strb	r3, [lr], #1
  106170:	e1a02942 	mov	r2, r2, asr #18
  106174:	e1a01641 	mov	r1, r1, asr #12
  106178:	e1a00340 	mov	r0, r0, asr #6
  10617c:	e204303f 	and	r3, r4, #63	; 0x3f
  106180:	e1e02c82 	mvn	r2, r2, lsl #25
  106184:	e1e01c81 	mvn	r1, r1, lsl #25
  106188:	e1e00c80 	mvn	r0, r0, lsl #25
  10618c:	e1e03c83 	mvn	r3, r3, lsl #25
  106190:	e28ec001 	add	ip, lr, #1	; 0x1
  106194:	e1e02ca2 	mvn	r2, r2, lsr #25
  106198:	e1e01ca1 	mvn	r1, r1, lsr #25
  10619c:	e1e00ca0 	mvn	r0, r0, lsr #25
  1061a0:	e1e03ca3 	mvn	r3, r3, lsr #25
  1061a4:	e3a06005 	mov	r6, #5	; 0x5
  1061a8:	e5c72001 	strb	r2, [r7, #1]
  1061ac:	e5ce1001 	strb	r1, [lr, #1]
  1061b0:	e5cc3002 	strb	r3, [ip, #2]
  1061b4:	e5cc0001 	strb	r0, [ip, #1]
  1061b8:	eaffff60 	b	105f40 <_wctomb_r+0xb0>
  1061bc:	e2443b36 	sub	r3, r4, #55296	; 0xd800
  1061c0:	e3530b02 	cmp	r3, #2048	; 0x800
  1061c4:	3affff72 	bcc	105f94 <_wctomb_r+0x104>
  1061c8:	e2043a0f 	and	r3, r4, #61440	; 0xf000
  1061cc:	e1a03643 	mov	r3, r3, asr #12
  1061d0:	e1e03d83 	mvn	r3, r3, lsl #27
  1061d4:	e2042d3f 	and	r2, r4, #4032	; 0xfc0
  1061d8:	e1a00007 	mov	r0, r7
  1061dc:	e1e03da3 	mvn	r3, r3, lsr #27
  1061e0:	e1a02342 	mov	r2, r2, asr #6
  1061e4:	e204103f 	and	r1, r4, #63	; 0x3f
  1061e8:	e4c03001 	strb	r3, [r0], #1
  1061ec:	e1e02c82 	mvn	r2, r2, lsl #25
  1061f0:	e1e01c81 	mvn	r1, r1, lsl #25
  1061f4:	e1e02ca2 	mvn	r2, r2, lsr #25
  1061f8:	e1e01ca1 	mvn	r1, r1, lsr #25
  1061fc:	e3a06003 	mov	r6, #3	; 0x3
  106200:	e5c72001 	strb	r2, [r7, #1]
  106204:	e5c01001 	strb	r1, [r0, #1]
  106208:	eaffff4c 	b	105f40 <_wctomb_r+0xb0>
  10620c:	e374037f 	cmn	r4, #-67108863	; 0xfc000001
  106210:	daffff5f 	ble	105f94 <_wctomb_r+0x104>
  106214:	e2043101 	and	r3, r4, #1073741824	; 0x40000000
  106218:	e1a03f43 	mov	r3, r3, asr #30
  10621c:	e1e03f03 	mvn	r3, r3, lsl #30
  106220:	e1a0e007 	mov	lr, r7
  106224:	e1e03f23 	mvn	r3, r3, lsr #30
  106228:	e4ce3001 	strb	r3, [lr], #1
  10622c:	e204243f 	and	r2, r4, #1056964608	; 0x3f000000
  106230:	e204373f 	and	r3, r4, #16515072	; 0xfc0000
  106234:	e2041a3f 	and	r1, r4, #258048	; 0x3f000
  106238:	e2040d3f 	and	r0, r4, #4032	; 0xfc0
  10623c:	e204c03f 	and	ip, r4, #63	; 0x3f
  106240:	e1a02c42 	mov	r2, r2, asr #24
  106244:	e1a03943 	mov	r3, r3, asr #18
  106248:	e1a01641 	mov	r1, r1, asr #12
  10624c:	e1a00340 	mov	r0, r0, asr #6
  106250:	e28e5001 	add	r5, lr, #1	; 0x1
  106254:	e1e02c82 	mvn	r2, r2, lsl #25
  106258:	e1e03c83 	mvn	r3, r3, lsl #25
  10625c:	e1e01c81 	mvn	r1, r1, lsl #25
  106260:	e1e00c80 	mvn	r0, r0, lsl #25
  106264:	e1e0cc8c 	mvn	ip, ip, lsl #25
  106268:	e2854001 	add	r4, r5, #1	; 0x1
  10626c:	e1e02ca2 	mvn	r2, r2, lsr #25
  106270:	e1e03ca3 	mvn	r3, r3, lsr #25
  106274:	e1e01ca1 	mvn	r1, r1, lsr #25
  106278:	e1e00ca0 	mvn	r0, r0, lsr #25
  10627c:	e1e0ccac 	mvn	ip, ip, lsr #25
  106280:	e3a06006 	mov	r6, #6	; 0x6
  106284:	e5c72001 	strb	r2, [r7, #1]
  106288:	e5ce3001 	strb	r3, [lr, #1]
  10628c:	e5c51001 	strb	r1, [r5, #1]
  106290:	e5c4c002 	strb	ip, [r4, #2]
  106294:	e5c40001 	strb	r0, [r4, #1]
  106298:	eaffff28 	b	105f40 <_wctomb_r+0xb0>
  10629c:	0020099c 	mlaeq	r0, ip, r9, r0
  1062a0:	0010a7a4 	andeqs	sl, r0, r4, lsr #15
  1062a4:	0010a7ac 	andeqs	sl, r0, ip, lsr #15
  1062a8:	0010a7b4 	ldreqh	sl, [r0], -r4
  1062ac:	0010a7bc 	ldreqh	sl, [r0], -ip

001062b0 <__swsetup>:
  1062b0:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  1062b4:	e59f60ec 	ldr	r6, [pc, #236]	; 1063a8 <.text+0x63a8>
  1062b8:	e5962000 	ldr	r2, [r6]
  1062bc:	e3520000 	cmp	r2, #0	; 0x0
  1062c0:	e1a04000 	mov	r4, r0
  1062c4:	0a000002 	beq	1062d4 <__swsetup+0x24>
  1062c8:	e5923038 	ldr	r3, [r2, #56]
  1062cc:	e3530000 	cmp	r3, #0	; 0x0
  1062d0:	0a000015 	beq	10632c <__swsetup+0x7c>
  1062d4:	e1d420bc 	ldrh	r2, [r4, #12]
  1062d8:	e2125008 	ands	r5, r2, #8	; 0x8
  1062dc:	15941010 	ldrne	r1, [r4, #16]
  1062e0:	0a000017 	beq	106344 <__swsetup+0x94>
  1062e4:	e3510000 	cmp	r1, #0	; 0x0
  1062e8:	0a000012 	beq	106338 <__swsetup+0x88>
  1062ec:	e1d430bc 	ldrh	r3, [r4, #12]
  1062f0:	e2132001 	ands	r2, r3, #1	; 0x1
  1062f4:	1a000005 	bne	106310 <__swsetup+0x60>
  1062f8:	e3130002 	tst	r3, #2	; 0x2
  1062fc:	05943014 	ldreq	r3, [r4, #20]
  106300:	11a03002 	movne	r3, r2
  106304:	e3a00000 	mov	r0, #0	; 0x0
  106308:	e5843008 	str	r3, [r4, #8]
  10630c:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  106310:	e5943014 	ldr	r3, [r4, #20]
  106314:	e3a02000 	mov	r2, #0	; 0x0
  106318:	e2633000 	rsb	r3, r3, #0	; 0x0
  10631c:	e1a00002 	mov	r0, r2
  106320:	e5843018 	str	r3, [r4, #24]
  106324:	e5842008 	str	r2, [r4, #8]
  106328:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10632c:	e1a00002 	mov	r0, r2
  106330:	eb000693 	bl	107d84 <__sinit>
  106334:	eaffffe6 	b	1062d4 <__swsetup+0x24>
  106338:	e1a00004 	mov	r0, r4
  10633c:	eb000963 	bl	1088d0 <__smakebuf>
  106340:	eaffffe9 	b	1062ec <__swsetup+0x3c>
  106344:	e3120010 	tst	r2, #16	; 0x10
  106348:	03e00000 	mvneq	r0, #0	; 0x0
  10634c:	08bd8070 	ldmeqia	sp!, {r4, r5, r6, pc}
  106350:	e3120004 	tst	r2, #4	; 0x4
  106354:	05941010 	ldreq	r1, [r4, #16]
  106358:	0a00000f 	beq	10639c <__swsetup+0xec>
  10635c:	e5941030 	ldr	r1, [r4, #48]
  106360:	e3510000 	cmp	r1, #0	; 0x0
  106364:	0a000006 	beq	106384 <__swsetup+0xd4>
  106368:	e2843040 	add	r3, r4, #64	; 0x40
  10636c:	e1510003 	cmp	r1, r3
  106370:	0a000002 	beq	106380 <__swsetup+0xd0>
  106374:	e5960000 	ldr	r0, [r6]
  106378:	eb000740 	bl	108080 <_free_r>
  10637c:	e1d420bc 	ldrh	r2, [r4, #12]
  106380:	e5845030 	str	r5, [r4, #48]
  106384:	e3c23024 	bic	r3, r2, #36	; 0x24
  106388:	e1c430bc 	strh	r3, [r4, #12]
  10638c:	e5941010 	ldr	r1, [r4, #16]
  106390:	e3a03000 	mov	r3, #0	; 0x0
  106394:	e1d420bc 	ldrh	r2, [r4, #12]
  106398:	e884000a 	stmia	r4, {r1, r3}
  10639c:	e3823008 	orr	r3, r2, #8	; 0x8
  1063a0:	e1c430bc 	strh	r3, [r4, #12]
  1063a4:	eaffffce 	b	1062e4 <__swsetup+0x34>
  1063a8:	00200184 	eoreq	r0, r0, r4, lsl #3

001063ac <__register_exitproc>:
  1063ac:	e59fc0d4 	ldr	ip, [pc, #212]	; 106488 <.text+0x6488>
  1063b0:	e92d41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1063b4:	e59c4000 	ldr	r4, [ip]
  1063b8:	e594c148 	ldr	ip, [r4, #328]
  1063bc:	e35c0000 	cmp	ip, #0	; 0x0
  1063c0:	0284cf53 	addeq	ip, r4, #332	; 0x14c
  1063c4:	e1a07001 	mov	r7, r1
  1063c8:	e59c1004 	ldr	r1, [ip, #4]
  1063cc:	0584c148 	streq	ip, [r4, #328]
  1063d0:	e351001f 	cmp	r1, #31	; 0x1f
  1063d4:	e1a05000 	mov	r5, r0
  1063d8:	e1a08002 	mov	r8, r2
  1063dc:	e1a06003 	mov	r6, r3
  1063e0:	ca00001a 	bgt	106450 <__register_exitproc+0xa4>
  1063e4:	e3550000 	cmp	r5, #0	; 0x0
  1063e8:	1a000005 	bne	106404 <__register_exitproc+0x58>
  1063ec:	e2812001 	add	r2, r1, #1	; 0x1
  1063f0:	e08c3101 	add	r3, ip, r1, lsl #2
  1063f4:	e3a00000 	mov	r0, #0	; 0x0
  1063f8:	e5837008 	str	r7, [r3, #8]
  1063fc:	e58c2004 	str	r2, [ip, #4]
  106400:	e8bd81f0 	ldmia	sp!, {r4, r5, r6, r7, r8, pc}
  106404:	e3a03001 	mov	r3, #1	; 0x1
  106408:	e1a0e113 	mov	lr, r3, lsl r1
  10640c:	e28c0088 	add	r0, ip, #136	; 0x88
  106410:	e0803101 	add	r3, r0, r1, lsl #2
  106414:	e3550002 	cmp	r5, #2	; 0x2
  106418:	e5902100 	ldr	r2, [r0, #256]
  10641c:	e5836080 	str	r6, [r3, #128]
  106420:	05903104 	ldreq	r3, [r0, #260]
  106424:	e182200e 	orr	r2, r2, lr
  106428:	0183300e 	orreq	r3, r3, lr
  10642c:	e5802100 	str	r2, [r0, #256]
  106430:	05803104 	streq	r3, [r0, #260]
  106434:	e7808101 	str	r8, [r0, r1, lsl #2]
  106438:	e2812001 	add	r2, r1, #1	; 0x1
  10643c:	e08c3101 	add	r3, ip, r1, lsl #2
  106440:	e3a00000 	mov	r0, #0	; 0x0
  106444:	e5837008 	str	r7, [r3, #8]
  106448:	e58c2004 	str	r2, [ip, #4]
  10644c:	e8bd81f0 	ldmia	sp!, {r4, r5, r6, r7, r8, pc}
  106450:	e3a00e19 	mov	r0, #400	; 0x190
  106454:	ebfff072 	bl	102624 <malloc>
  106458:	e3500000 	cmp	r0, #0	; 0x0
  10645c:	03e00000 	mvneq	r0, #0	; 0x0
  106460:	08bd81f0 	ldmeqia	sp!, {r4, r5, r6, r7, r8, pc}
  106464:	e3a03000 	mov	r3, #0	; 0x0
  106468:	e5942148 	ldr	r2, [r4, #328]
  10646c:	e1a0c000 	mov	ip, r0
  106470:	e1a01003 	mov	r1, r3
  106474:	e880000c 	stmia	r0, {r2, r3}
  106478:	e5840148 	str	r0, [r4, #328]
  10647c:	e5803188 	str	r3, [r0, #392]
  106480:	e580318c 	str	r3, [r0, #396]
  106484:	eaffffd6 	b	1063e4 <__register_exitproc+0x38>
  106488:	0010a714 	andeqs	sl, r0, r4, lsl r7

0010648c <__call_exitprocs>:
  10648c:	e59f3138 	ldr	r3, [pc, #312]	; 1065cc <.text+0x65cc>
  106490:	e5933000 	ldr	r3, [r3]
  106494:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  106498:	e5937148 	ldr	r7, [r3, #328]
  10649c:	e3570000 	cmp	r7, #0	; 0x0
  1064a0:	e1a0b000 	mov	fp, r0
  1064a4:	e1a0a001 	mov	sl, r1
  1064a8:	08bd8ff0 	ldmeqia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  1064ac:	e2839f52 	add	r9, r3, #328	; 0x148
  1064b0:	e5971004 	ldr	r1, [r7, #4]
  1064b4:	e2514001 	subs	r4, r1, #1	; 0x1
  1064b8:	e2878088 	add	r8, r7, #136	; 0x88
  1064bc:	4a000029 	bmi	106568 <__call_exitprocs+0xdc>
  1064c0:	e1a02101 	mov	r2, r1, lsl #2
  1064c4:	e2823008 	add	r3, r2, #8	; 0x8
  1064c8:	e0876003 	add	r6, r7, r3
  1064cc:	e0885002 	add	r5, r8, r2
  1064d0:	ea000007 	b	1064f4 <__call_exitprocs+0x68>
  1064d4:	e595307c 	ldr	r3, [r5, #124]
  1064d8:	e15a0003 	cmp	sl, r3
  1064dc:	0a000006 	beq	1064fc <__call_exitprocs+0x70>
  1064e0:	e2444001 	sub	r4, r4, #1	; 0x1
  1064e4:	e3740001 	cmn	r4, #1	; 0x1
  1064e8:	e2455004 	sub	r5, r5, #4	; 0x4
  1064ec:	e2466004 	sub	r6, r6, #4	; 0x4
  1064f0:	0a00001c 	beq	106568 <__call_exitprocs+0xdc>
  1064f4:	e35a0000 	cmp	sl, #0	; 0x0
  1064f8:	1afffff5 	bne	1064d4 <__call_exitprocs+0x48>
  1064fc:	e2413001 	sub	r3, r1, #1	; 0x1
  106500:	e1530004 	cmp	r3, r4
  106504:	e516c004 	ldr	ip, [r6, #-4]
  106508:	05874004 	streq	r4, [r7, #4]
  10650c:	13a03000 	movne	r3, #0	; 0x0
  106510:	15063004 	strne	r3, [r6, #-4]
  106514:	e35c0000 	cmp	ip, #0	; 0x0
  106518:	05971004 	ldreq	r1, [r7, #4]
  10651c:	0affffef 	beq	1064e0 <__call_exitprocs+0x54>
  106520:	e3a03001 	mov	r3, #1	; 0x1
  106524:	e1a01413 	mov	r1, r3, lsl r4
  106528:	e5982100 	ldr	r2, [r8, #256]
  10652c:	e1110002 	tst	r1, r2
  106530:	0a00001e 	beq	1065b0 <__call_exitprocs+0x124>
  106534:	e5983104 	ldr	r3, [r8, #260]
  106538:	e1110003 	tst	r1, r3
  10653c:	1a000016 	bne	10659c <__call_exitprocs+0x110>
  106540:	e5151004 	ldr	r1, [r5, #-4]
  106544:	e1a0000b 	mov	r0, fp
  106548:	e2444001 	sub	r4, r4, #1	; 0x1
  10654c:	e1a0e00f 	mov	lr, pc
  106550:	e12fff1c 	bx	ip
  106554:	e3740001 	cmn	r4, #1	; 0x1
  106558:	e5971004 	ldr	r1, [r7, #4]
  10655c:	e2455004 	sub	r5, r5, #4	; 0x4
  106560:	e2466004 	sub	r6, r6, #4	; 0x4
  106564:	1affffe2 	bne	1064f4 <__call_exitprocs+0x68>
  106568:	e3510000 	cmp	r1, #0	; 0x0
  10656c:	15973000 	ldrne	r3, [r7]
  106570:	1a000012 	bne	1065c0 <__call_exitprocs+0x134>
  106574:	e5973000 	ldr	r3, [r7]
  106578:	e3530000 	cmp	r3, #0	; 0x0
  10657c:	0a00000f 	beq	1065c0 <__call_exitprocs+0x134>
  106580:	e1a00007 	mov	r0, r7
  106584:	e5893000 	str	r3, [r9]
  106588:	ebfff020 	bl	102610 <free>
  10658c:	e5997000 	ldr	r7, [r9]
  106590:	e3570000 	cmp	r7, #0	; 0x0
  106594:	1affffc5 	bne	1064b0 <__call_exitprocs+0x24>
  106598:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  10659c:	e5150004 	ldr	r0, [r5, #-4]
  1065a0:	e1a0e00f 	mov	lr, pc
  1065a4:	e12fff1c 	bx	ip
  1065a8:	e5971004 	ldr	r1, [r7, #4]
  1065ac:	eaffffcb 	b	1064e0 <__call_exitprocs+0x54>
  1065b0:	e1a0e00f 	mov	lr, pc
  1065b4:	e12fff1c 	bx	ip
  1065b8:	e5971004 	ldr	r1, [r7, #4]
  1065bc:	eaffffc7 	b	1064e0 <__call_exitprocs+0x54>
  1065c0:	e1a09007 	mov	r9, r7
  1065c4:	e1a07003 	mov	r7, r3
  1065c8:	eafffff0 	b	106590 <__call_exitprocs+0x104>
  1065cc:	0010a714 	andeqs	sl, r0, r4, lsl r7

001065d0 <quorem>:
  1065d0:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  1065d4:	e5903010 	ldr	r3, [r0, #16]
  1065d8:	e5912010 	ldr	r2, [r1, #16]
  1065dc:	e24dd00c 	sub	sp, sp, #12	; 0xc
  1065e0:	e1520003 	cmp	r2, r3
  1065e4:	e58d0000 	str	r0, [sp]
  1065e8:	e1a09001 	mov	r9, r1
  1065ec:	c3a00000 	movgt	r0, #0	; 0x0
  1065f0:	ca000044 	bgt	106708 <quorem+0x138>
  1065f4:	e2815014 	add	r5, r1, #20	; 0x14
  1065f8:	e59d1000 	ldr	r1, [sp]
  1065fc:	e2427001 	sub	r7, r2, #1	; 0x1
  106600:	e1a03107 	mov	r3, r7, lsl #2
  106604:	e2818014 	add	r8, r1, #20	; 0x14
  106608:	e7932008 	ldr	r2, [r3, r8]
  10660c:	e7951003 	ldr	r1, [r5, r3]
  106610:	e1a00002 	mov	r0, r2
  106614:	e2811001 	add	r1, r1, #1	; 0x1
  106618:	e085b003 	add	fp, r5, r3
  10661c:	e0833008 	add	r3, r3, r8
  106620:	e98d000c 	stmib	sp, {r2, r3}
  106624:	ebffefa3 	bl	1024b8 <__aeabi_uidiv>
  106628:	e250a000 	subs	sl, r0, #0	; 0x0
  10662c:	1a000037 	bne	106710 <quorem+0x140>
  106630:	e1a01009 	mov	r1, r9
  106634:	e59d0000 	ldr	r0, [sp]
  106638:	eb0009e0 	bl	108dc0 <__mcmp>
  10663c:	e3500000 	cmp	r0, #0	; 0x0
  106640:	ba00002f 	blt	106704 <quorem+0x134>
  106644:	e3a04000 	mov	r4, #0	; 0x0
  106648:	e28aa001 	add	sl, sl, #1	; 0x1
  10664c:	e1a0e008 	mov	lr, r8
  106650:	e1a00004 	mov	r0, r4
  106654:	e4952004 	ldr	r2, [r5], #4
  106658:	e1a03802 	mov	r3, r2, lsl #16
  10665c:	e1a03823 	mov	r3, r3, lsr #16
  106660:	e59ec000 	ldr	ip, [lr]
  106664:	e0803003 	add	r3, r0, r3
  106668:	e1a00823 	mov	r0, r3, lsr #16
  10666c:	e0800822 	add	r0, r0, r2, lsr #16
  106670:	e1a03803 	mov	r3, r3, lsl #16
  106674:	e1a0180c 	mov	r1, ip, lsl #16
  106678:	e1a02800 	mov	r2, r0, lsl #16
  10667c:	e1a01821 	mov	r1, r1, lsr #16
  106680:	e1a03823 	mov	r3, r3, lsr #16
  106684:	e0631001 	rsb	r1, r3, r1
  106688:	e1a02822 	mov	r2, r2, lsr #16
  10668c:	e0811004 	add	r1, r1, r4
  106690:	e062282c 	rsb	r2, r2, ip, lsr #16
  106694:	e0822841 	add	r2, r2, r1, asr #16
  106698:	e15b0005 	cmp	fp, r5
  10669c:	e1ce20b2 	strh	r2, [lr, #2]
  1066a0:	e1a00820 	mov	r0, r0, lsr #16
  1066a4:	e0ce10b4 	strh	r1, [lr], #4
  1066a8:	e1a04842 	mov	r4, r2, asr #16
  1066ac:	2affffe8 	bcs	106654 <quorem+0x84>
  1066b0:	e1a02107 	mov	r2, r7, lsl #2
  1066b4:	e7983002 	ldr	r3, [r8, r2]
  1066b8:	e3530000 	cmp	r3, #0	; 0x0
  1066bc:	e0883002 	add	r3, r8, r2
  1066c0:	1a00000f 	bne	106704 <quorem+0x134>
  1066c4:	e2432004 	sub	r2, r3, #4	; 0x4
  1066c8:	e1580002 	cmp	r8, r2
  1066cc:	2a00000a 	bcs	1066fc <quorem+0x12c>
  1066d0:	e5133004 	ldr	r3, [r3, #-4]
  1066d4:	e3530000 	cmp	r3, #0	; 0x0
  1066d8:	0a000003 	beq	1066ec <quorem+0x11c>
  1066dc:	ea000006 	b	1066fc <quorem+0x12c>
  1066e0:	e5923000 	ldr	r3, [r2]
  1066e4:	e3530000 	cmp	r3, #0	; 0x0
  1066e8:	1a000003 	bne	1066fc <quorem+0x12c>
  1066ec:	e2422004 	sub	r2, r2, #4	; 0x4
  1066f0:	e1580002 	cmp	r8, r2
  1066f4:	e2477001 	sub	r7, r7, #1	; 0x1
  1066f8:	3afffff8 	bcc	1066e0 <quorem+0x110>
  1066fc:	e59d3000 	ldr	r3, [sp]
  106700:	e5837010 	str	r7, [r3, #16]
  106704:	e1a0000a 	mov	r0, sl
  106708:	e28dd00c 	add	sp, sp, #12	; 0xc
  10670c:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  106710:	e3a06000 	mov	r6, #0	; 0x0
  106714:	e1a0e008 	mov	lr, r8
  106718:	e1a04005 	mov	r4, r5
  10671c:	e1a0c006 	mov	ip, r6
  106720:	e4942004 	ldr	r2, [r4], #4
  106724:	e1a03802 	mov	r3, r2, lsl #16
  106728:	e1a03823 	mov	r3, r3, lsr #16
  10672c:	e021ca93 	mla	r1, r3, sl, ip
  106730:	e1a02822 	mov	r2, r2, lsr #16
  106734:	e1a03821 	mov	r3, r1, lsr #16
  106738:	e02c3a92 	mla	ip, r2, sl, r3
  10673c:	e59e0000 	ldr	r0, [lr]
  106740:	e1a01801 	mov	r1, r1, lsl #16
  106744:	e1a02800 	mov	r2, r0, lsl #16
  106748:	e1a0380c 	mov	r3, ip, lsl #16
  10674c:	e1a02822 	mov	r2, r2, lsr #16
  106750:	e1a01821 	mov	r1, r1, lsr #16
  106754:	e0612002 	rsb	r2, r1, r2
  106758:	e1a03823 	mov	r3, r3, lsr #16
  10675c:	e0822006 	add	r2, r2, r6
  106760:	e0633820 	rsb	r3, r3, r0, lsr #16
  106764:	e0833842 	add	r3, r3, r2, asr #16
  106768:	e15b0004 	cmp	fp, r4
  10676c:	e1ce30b2 	strh	r3, [lr, #2]
  106770:	e1a0c82c 	mov	ip, ip, lsr #16
  106774:	e0ce20b4 	strh	r2, [lr], #4
  106778:	e1a06843 	mov	r6, r3, asr #16
  10677c:	2affffe7 	bcs	106720 <quorem+0x150>
  106780:	e59d3004 	ldr	r3, [sp, #4]
  106784:	e3530000 	cmp	r3, #0	; 0x0
  106788:	1affffa8 	bne	106630 <quorem+0x60>
  10678c:	e59d1008 	ldr	r1, [sp, #8]
  106790:	e2412004 	sub	r2, r1, #4	; 0x4
  106794:	e1580002 	cmp	r8, r2
  106798:	2a00000a 	bcs	1067c8 <quorem+0x1f8>
  10679c:	e5113004 	ldr	r3, [r1, #-4]
  1067a0:	e3530000 	cmp	r3, #0	; 0x0
  1067a4:	0a000003 	beq	1067b8 <quorem+0x1e8>
  1067a8:	ea000006 	b	1067c8 <quorem+0x1f8>
  1067ac:	e5923000 	ldr	r3, [r2]
  1067b0:	e3530000 	cmp	r3, #0	; 0x0
  1067b4:	1a000003 	bne	1067c8 <quorem+0x1f8>
  1067b8:	e2422004 	sub	r2, r2, #4	; 0x4
  1067bc:	e1580002 	cmp	r8, r2
  1067c0:	e2477001 	sub	r7, r7, #1	; 0x1
  1067c4:	3afffff8 	bcc	1067ac <quorem+0x1dc>
  1067c8:	e59d2000 	ldr	r2, [sp]
  1067cc:	e5827010 	str	r7, [r2, #16]
  1067d0:	eaffff96 	b	106630 <quorem+0x60>

001067d4 <_dtoa_r>:
  1067d4:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  1067d8:	e590c040 	ldr	ip, [r0, #64]
  1067dc:	e24dd058 	sub	sp, sp, #88	; 0x58
  1067e0:	e35c0000 	cmp	ip, #0	; 0x0
  1067e4:	e58d0008 	str	r0, [sp, #8]
  1067e8:	e58d3004 	str	r3, [sp, #4]
  1067ec:	e1a08001 	mov	r8, r1
  1067f0:	e1a09002 	mov	r9, r2
  1067f4:	e59d4084 	ldr	r4, [sp, #132]
  1067f8:	0a00000a 	beq	106828 <_dtoa_r+0x54>
  1067fc:	e5903044 	ldr	r3, [r0, #68]
  106800:	e58c3004 	str	r3, [ip, #4]
  106804:	e5902044 	ldr	r2, [r0, #68]
  106808:	e3a03001 	mov	r3, #1	; 0x1
  10680c:	e1a03213 	mov	r3, r3, lsl r2
  106810:	e1a0100c 	mov	r1, ip
  106814:	e58c3008 	str	r3, [ip, #8]
  106818:	eb000926 	bl	108cb8 <_Bfree>
  10681c:	e59d2008 	ldr	r2, [sp, #8]
  106820:	e3a03000 	mov	r3, #0	; 0x0
  106824:	e5823040 	str	r3, [r2, #64]
  106828:	e2583000 	subs	r3, r8, #0	; 0x0
  10682c:	b3c38102 	biclt	r8, r3, #-2147483648	; 0x80000000
  106830:	a3a03000 	movge	r3, #0	; 0x0
  106834:	b3a03001 	movlt	r3, #1	; 0x1
  106838:	e3c82102 	bic	r2, r8, #-2147483648	; 0x80000000
  10683c:	b5843000 	strlt	r3, [r4]
  106840:	a5843000 	strge	r3, [r4]
  106844:	e1a02a22 	mov	r2, r2, lsr #20
  106848:	e3a0347f 	mov	r3, #2130706432	; 0x7f000000
  10684c:	e283360f 	add	r3, r3, #15728640	; 0xf00000
  106850:	e1a02a02 	mov	r2, r2, lsl #20
  106854:	e1520003 	cmp	r2, r3
  106858:	e1a04008 	mov	r4, r8
  10685c:	0a000087 	beq	106a80 <.text+0x6a80>
  106860:	e1a00008 	mov	r0, r8
  106864:	e1a01009 	mov	r1, r9
  106868:	e3a02000 	mov	r2, #0	; 0x0
  10686c:	e3a03000 	mov	r3, #0	; 0x0
  106870:	e58d800c 	str	r8, [sp, #12]
  106874:	e58d9010 	str	r9, [sp, #16]
  106878:	eb000f1f 	bl	10a4fc <__cmpdf2>
  10687c:	e3500000 	cmp	r0, #0	; 0x0
  106880:	1a00000b 	bne	1068b4 <_dtoa_r+0xe0>
  106884:	e59d2088 	ldr	r2, [sp, #136]
  106888:	e59dc080 	ldr	ip, [sp, #128]
  10688c:	e3520000 	cmp	r2, #0	; 0x0
  106890:	e3a03001 	mov	r3, #1	; 0x1
  106894:	e58c3000 	str	r3, [ip]
  106898:	159de088 	ldrne	lr, [sp, #136]
  10689c:	159f3448 	ldrne	r3, [pc, #1096]	; 106cec <.text+0x6cec>
  1068a0:	059f0448 	ldreq	r0, [pc, #1096]	; 106cf0 <.text+0x6cf0>
  1068a4:	158e3000 	strne	r3, [lr]
  1068a8:	12430001 	subne	r0, r3, #1	; 0x1
  1068ac:	e28dd058 	add	sp, sp, #88	; 0x58
  1068b0:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  1068b4:	e28d100c 	add	r1, sp, #12	; 0xc
  1068b8:	e8910006 	ldmia	r1, {r1, r2}
  1068bc:	e28d3050 	add	r3, sp, #80	; 0x50
  1068c0:	e28dc054 	add	ip, sp, #84	; 0x54
  1068c4:	e59d0008 	ldr	r0, [sp, #8]
  1068c8:	e58dc000 	str	ip, [sp]
  1068cc:	eb0009ef 	bl	109090 <_d2b>
  1068d0:	e1a03a28 	mov	r3, r8, lsr #20
  1068d4:	e1a02a83 	mov	r2, r3, lsl #21
  1068d8:	e1a02aa2 	mov	r2, r2, lsr #21
  1068dc:	e3520000 	cmp	r2, #0	; 0x0
  1068e0:	e58d0038 	str	r0, [sp, #56]
  1068e4:	0a00007c 	beq	106adc <.text+0x6adc>
  1068e8:	e28d000c 	add	r0, sp, #12	; 0xc
  1068ec:	e8900003 	ldmia	r0, {r0, r1}
  1068f0:	e3c034ff 	bic	r3, r0, #-16777216	; 0xff000000
  1068f4:	e2426fff 	sub	r6, r2, #1020	; 0x3fc
  1068f8:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
  1068fc:	e3a02000 	mov	r2, #0	; 0x0
  106900:	e38305ff 	orr	r0, r3, #1069547520	; 0x3fc00000
  106904:	e59d7054 	ldr	r7, [sp, #84]
  106908:	e58d2034 	str	r2, [sp, #52]
  10690c:	e2466003 	sub	r6, r6, #3	; 0x3
  106910:	e3800603 	orr	r0, r0, #3145728	; 0x300000
  106914:	e3a025ff 	mov	r2, #1069547520	; 0x3fc00000
  106918:	e282270e 	add	r2, r2, #3670016	; 0x380000
  10691c:	e3a03000 	mov	r3, #0	; 0x0
  106920:	eb000cd7 	bl	109c84 <__aeabi_dsub>
  106924:	e28f2fea 	add	r2, pc, #936	; 0x3a8
  106928:	e892000c 	ldmia	r2, {r2, r3}
  10692c:	eb000dd2 	bl	10a07c <__aeabi_dmul>
  106930:	e28f2fe9 	add	r2, pc, #932	; 0x3a4
  106934:	e892000c 	ldmia	r2, {r2, r3}
  106938:	eb000cd2 	bl	109c88 <__adddf3>
  10693c:	e1a04000 	mov	r4, r0
  106940:	e1a00006 	mov	r0, r6
  106944:	e1a05001 	mov	r5, r1
  106948:	eb000d90 	bl	109f90 <__aeabi_i2d>
  10694c:	e28f2e39 	add	r2, pc, #912	; 0x390
  106950:	e892000c 	ldmia	r2, {r2, r3}
  106954:	eb000dc8 	bl	10a07c <__aeabi_dmul>
  106958:	e1a02000 	mov	r2, r0
  10695c:	e1a03001 	mov	r3, r1
  106960:	e1a00004 	mov	r0, r4
  106964:	e1a01005 	mov	r1, r5
  106968:	eb000cc6 	bl	109c88 <__adddf3>
  10696c:	e1a04000 	mov	r4, r0
  106970:	e1a05001 	mov	r5, r1
  106974:	eb000f26 	bl	10a614 <__aeabi_d2iz>
  106978:	e1a01005 	mov	r1, r5
  10697c:	e58d0024 	str	r0, [sp, #36]
  106980:	e3a02000 	mov	r2, #0	; 0x0
  106984:	e1a00004 	mov	r0, r4
  106988:	e3a03000 	mov	r3, #0	; 0x0
  10698c:	eb000ed8 	bl	10a4f4 <__ledf2>
  106990:	e3500000 	cmp	r0, #0	; 0x0
  106994:	ba000301 	blt	1075a0 <.text+0x75a0>
  106998:	e59de024 	ldr	lr, [sp, #36]
  10699c:	e35e0016 	cmp	lr, #22	; 0x16
  1069a0:	83a00001 	movhi	r0, #1	; 0x1
  1069a4:	858d0028 	strhi	r0, [sp, #40]
  1069a8:	8a00000e 	bhi	1069e8 <_dtoa_r+0x214>
  1069ac:	e59d2024 	ldr	r2, [sp, #36]
  1069b0:	e59f1344 	ldr	r1, [pc, #836]	; 106cfc <.text+0x6cfc>
  1069b4:	e0811182 	add	r1, r1, r2, lsl #3
  1069b8:	e891000c 	ldmia	r1, {r2, r3}
  1069bc:	e28d000c 	add	r0, sp, #12	; 0xc
  1069c0:	e8900003 	ldmia	r0, {r0, r1}
  1069c4:	eb000eca 	bl	10a4f4 <__ledf2>
  1069c8:	e3500000 	cmp	r0, #0	; 0x0
  1069cc:	b59dc024 	ldrlt	ip, [sp, #36]
  1069d0:	a3a03000 	movge	r3, #0	; 0x0
  1069d4:	b24cc001 	sublt	ip, ip, #1	; 0x1
  1069d8:	b3a0e000 	movlt	lr, #0	; 0x0
  1069dc:	a58d3028 	strge	r3, [sp, #40]
  1069e0:	b58dc024 	strlt	ip, [sp, #36]
  1069e4:	b58de028 	strlt	lr, [sp, #40]
  1069e8:	e0663007 	rsb	r3, r6, r7
  1069ec:	e2532001 	subs	r2, r3, #1	; 0x1
  1069f0:	e59d1024 	ldr	r1, [sp, #36]
  1069f4:	42622000 	rsbmi	r2, r2, #0	; 0x0
  1069f8:	53a00000 	movpl	r0, #0	; 0x0
  1069fc:	51a0b002 	movpl	fp, r2
  106a00:	458d2014 	strmi	r2, [sp, #20]
  106a04:	43a0b000 	movmi	fp, #0	; 0x0
  106a08:	558d0014 	strpl	r0, [sp, #20]
  106a0c:	e3510000 	cmp	r1, #0	; 0x0
  106a10:	a3a02000 	movge	r2, #0	; 0x0
  106a14:	a08bb001 	addge	fp, fp, r1
  106a18:	a58d1030 	strge	r1, [sp, #48]
  106a1c:	a58d2018 	strge	r2, [sp, #24]
  106a20:	ba0002ea 	blt	1075d0 <.text+0x75d0>
  106a24:	e59d1004 	ldr	r1, [sp, #4]
  106a28:	e3510009 	cmp	r1, #9	; 0x9
  106a2c:	83a02000 	movhi	r2, #0	; 0x0
  106a30:	858d2004 	strhi	r2, [sp, #4]
  106a34:	83a05001 	movhi	r5, #1	; 0x1
  106a38:	8a00003e 	bhi	106b38 <.text+0x6b38>
  106a3c:	e59d3004 	ldr	r3, [sp, #4]
  106a40:	e3530005 	cmp	r3, #5	; 0x5
  106a44:	c59dc004 	ldrgt	ip, [sp, #4]
  106a48:	c24cc004 	subgt	ip, ip, #4	; 0x4
  106a4c:	c58dc004 	strgt	ip, [sp, #4]
  106a50:	e59de004 	ldr	lr, [sp, #4]
  106a54:	d3a00001 	movle	r0, #1	; 0x1
  106a58:	c3a00000 	movgt	r0, #0	; 0x0
  106a5c:	e35e0005 	cmp	lr, #5	; 0x5
  106a60:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
  106a64:	ea00027d 	b	107460 <.text+0x7460>
  106a68:	00106b34 	andeqs	r6, r0, r4, lsr fp
  106a6c:	00106b34 	andeqs	r6, r0, r4, lsr fp
  106a70:	00107550 	andeqs	r7, r0, r0, asr r5
  106a74:	001074c4 	andeqs	r7, r0, r4, asr #9
  106a78:	00107508 	andeqs	r7, r0, r8, lsl #10
  106a7c:	00107544 	andeqs	r7, r0, r4, asr #10
  106a80:	e3a03c27 	mov	r3, #9984	; 0x2700
  106a84:	e59dc080 	ldr	ip, [sp, #128]
  106a88:	e283300f 	add	r3, r3, #15	; 0xf
  106a8c:	e3590000 	cmp	r9, #0	; 0x0
  106a90:	e58c3000 	str	r3, [ip]
  106a94:	0a00000a 	beq	106ac4 <.text+0x6ac4>
  106a98:	e59f0254 	ldr	r0, [pc, #596]	; 106cf4 <.text+0x6cf4>
  106a9c:	e59de088 	ldr	lr, [sp, #136]
  106aa0:	e35e0000 	cmp	lr, #0	; 0x0
  106aa4:	0affff80 	beq	1068ac <_dtoa_r+0xd8>
  106aa8:	e5d03003 	ldrb	r3, [r0, #3]
  106aac:	e59d1088 	ldr	r1, [sp, #136]
  106ab0:	e3530000 	cmp	r3, #0	; 0x0
  106ab4:	e2803003 	add	r3, r0, #3	; 0x3
  106ab8:	12803008 	addne	r3, r0, #8	; 0x8
  106abc:	e5813000 	str	r3, [r1]
  106ac0:	eaffff79 	b	1068ac <_dtoa_r+0xd8>
  106ac4:	e3c834ff 	bic	r3, r8, #-16777216	; 0xff000000
  106ac8:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
  106acc:	e3530000 	cmp	r3, #0	; 0x0
  106ad0:	059f0220 	ldreq	r0, [pc, #544]	; 106cf8 <.text+0x6cf8>
  106ad4:	0afffff0 	beq	106a9c <.text+0x6a9c>
  106ad8:	eaffffee 	b	106a98 <.text+0x6a98>
  106adc:	e28d2050 	add	r2, sp, #80	; 0x50
  106ae0:	e8920084 	ldmia	r2, {r2, r7}
  106ae4:	e2873e43 	add	r3, r7, #1072	; 0x430
  106ae8:	e2833002 	add	r3, r3, #2	; 0x2
  106aec:	e0835002 	add	r5, r3, r2
  106af0:	e3550020 	cmp	r5, #32	; 0x20
  106af4:	c2453020 	subgt	r3, r5, #32	; 0x20
  106af8:	c1a03339 	movgt	r3, r9, lsr r3
  106afc:	c2652040 	rsbgt	r2, r5, #64	; 0x40
  106b00:	d2653020 	rsble	r3, r5, #32	; 0x20
  106b04:	c1834218 	orrgt	r4, r3, r8, lsl r2
  106b08:	d1a04319 	movle	r4, r9, lsl r3
  106b0c:	e1a00004 	mov	r0, r4
  106b10:	eb000d1e 	bl	109f90 <__aeabi_i2d>
  106b14:	e3540000 	cmp	r4, #0	; 0x0
  106b18:	ba0003c7 	blt	107a3c <.text+0x7a3c>
  106b1c:	e2456e43 	sub	r6, r5, #1072	; 0x430
  106b20:	e3a03001 	mov	r3, #1	; 0x1
  106b24:	e2466003 	sub	r6, r6, #3	; 0x3
  106b28:	e240061f 	sub	r0, r0, #32505856	; 0x1f00000
  106b2c:	e58d3034 	str	r3, [sp, #52]
  106b30:	eaffff77 	b	106914 <_dtoa_r+0x140>
  106b34:	e1a05000 	mov	r5, r0
  106b38:	e3a03000 	mov	r3, #0	; 0x0
  106b3c:	e3e0c000 	mvn	ip, #0	; 0x0
  106b40:	e3a0e001 	mov	lr, #1	; 0x1
  106b44:	e58d307c 	str	r3, [sp, #124]
  106b48:	e58dc020 	str	ip, [sp, #32]
  106b4c:	e58dc01c 	str	ip, [sp, #28]
  106b50:	e58de02c 	str	lr, [sp, #44]
  106b54:	e1a04003 	mov	r4, r3
  106b58:	e59dc008 	ldr	ip, [sp, #8]
  106b5c:	e3a03000 	mov	r3, #0	; 0x0
  106b60:	e58c3044 	str	r3, [ip, #68]
  106b64:	e59d0008 	ldr	r0, [sp, #8]
  106b68:	e5901044 	ldr	r1, [r0, #68]
  106b6c:	eb000921 	bl	108ff8 <_Balloc>
  106b70:	e59dc008 	ldr	ip, [sp, #8]
  106b74:	e1150004 	tst	r5, r4
  106b78:	e58d0040 	str	r0, [sp, #64]
  106b7c:	e58c0040 	str	r0, [ip, #64]
  106b80:	0a0000dc 	beq	106ef8 <.text+0x6ef8>
  106b84:	e59de024 	ldr	lr, [sp, #36]
  106b88:	e35e0000 	cmp	lr, #0	; 0x0
  106b8c:	da000388 	ble	1079b4 <.text+0x79b4>
  106b90:	e59f3164 	ldr	r3, [pc, #356]	; 106cfc <.text+0x6cfc>
  106b94:	e20e200f 	and	r2, lr, #15	; 0xf
  106b98:	e1a0424e 	mov	r4, lr, asr #4
  106b9c:	e0833182 	add	r3, r3, r2, lsl #3
  106ba0:	e3140010 	tst	r4, #16	; 0x10
  106ba4:	e8930060 	ldmia	r3, {r5, r6}
  106ba8:	03a0a002 	moveq	sl, #2	; 0x2
  106bac:	1a0001b4 	bne	107284 <.text+0x7284>
  106bb0:	e3540000 	cmp	r4, #0	; 0x0
  106bb4:	0a00000c 	beq	106bec <.text+0x6bec>
  106bb8:	e59f7140 	ldr	r7, [pc, #320]	; 106d00 <.text+0x6d00>
  106bbc:	e3140001 	tst	r4, #1	; 0x1
  106bc0:	e1a00005 	mov	r0, r5
  106bc4:	e1a01006 	mov	r1, r6
  106bc8:	0a000004 	beq	106be0 <.text+0x6be0>
  106bcc:	e897000c 	ldmia	r7, {r2, r3}
  106bd0:	eb000d29 	bl	10a07c <__aeabi_dmul>
  106bd4:	e28aa001 	add	sl, sl, #1	; 0x1
  106bd8:	e1a05000 	mov	r5, r0
  106bdc:	e1a06001 	mov	r6, r1
  106be0:	e1b040c4 	movs	r4, r4, asr #1
  106be4:	e2877008 	add	r7, r7, #8	; 0x8
  106be8:	1afffff3 	bne	106bbc <.text+0x6bbc>
  106bec:	e1a00008 	mov	r0, r8
  106bf0:	e1a01009 	mov	r1, r9
  106bf4:	e1a02005 	mov	r2, r5
  106bf8:	e1a03006 	mov	r3, r6
  106bfc:	eb000db9 	bl	10a2e8 <__aeabi_ddiv>
  106c00:	e1a08000 	mov	r8, r0
  106c04:	e1a09001 	mov	r9, r1
  106c08:	e59d1028 	ldr	r1, [sp, #40]
  106c0c:	e3510000 	cmp	r1, #0	; 0x0
  106c10:	0a00003b 	beq	106d04 <.text+0x6d04>
  106c14:	e3a025ff 	mov	r2, #1069547520	; 0x3fc00000
  106c18:	e2822603 	add	r2, r2, #3145728	; 0x300000
  106c1c:	e3a03000 	mov	r3, #0	; 0x0
  106c20:	e1a00008 	mov	r0, r8
  106c24:	e1a01009 	mov	r1, r9
  106c28:	eb000e31 	bl	10a4f4 <__ledf2>
  106c2c:	e59d201c 	ldr	r2, [sp, #28]
  106c30:	e3500000 	cmp	r0, #0	; 0x0
  106c34:	e3a03000 	mov	r3, #0	; 0x0
  106c38:	b3a03001 	movlt	r3, #1	; 0x1
  106c3c:	e3520000 	cmp	r2, #0	; 0x0
  106c40:	d3a03000 	movle	r3, #0	; 0x0
  106c44:	c2033001 	andgt	r3, r3, #1	; 0x1
  106c48:	e3530000 	cmp	r3, #0	; 0x0
  106c4c:	e1a04008 	mov	r4, r8
  106c50:	e1a05009 	mov	r5, r9
  106c54:	0a00002a 	beq	106d04 <.text+0x6d04>
  106c58:	e59d3020 	ldr	r3, [sp, #32]
  106c5c:	e3530000 	cmp	r3, #0	; 0x0
  106c60:	da0000a2 	ble	106ef0 <.text+0x6ef0>
  106c64:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  106c68:	e2822709 	add	r2, r2, #2359296	; 0x240000
  106c6c:	e3a03000 	mov	r3, #0	; 0x0
  106c70:	e1a00008 	mov	r0, r8
  106c74:	e1a01009 	mov	r1, r9
  106c78:	eb000cff 	bl	10a07c <__aeabi_dmul>
  106c7c:	e1a04000 	mov	r4, r0
  106c80:	e28a0001 	add	r0, sl, #1	; 0x1
  106c84:	e1a05001 	mov	r5, r1
  106c88:	eb000cc0 	bl	109f90 <__aeabi_i2d>
  106c8c:	e1a02000 	mov	r2, r0
  106c90:	e1a03001 	mov	r3, r1
  106c94:	e1a00004 	mov	r0, r4
  106c98:	e1a01005 	mov	r1, r5
  106c9c:	eb000cf6 	bl	10a07c <__aeabi_dmul>
  106ca0:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  106ca4:	e2822707 	add	r2, r2, #1835008	; 0x1c0000
  106ca8:	e3a03000 	mov	r3, #0	; 0x0
  106cac:	eb000bf5 	bl	109c88 <__adddf3>
  106cb0:	e28da020 	add	sl, sp, #32	; 0x20
  106cb4:	e89a1400 	ldmia	sl, {sl, ip}
  106cb8:	e24cc001 	sub	ip, ip, #1	; 0x1
  106cbc:	e1a07001 	mov	r7, r1
  106cc0:	e1a08004 	mov	r8, r4
  106cc4:	e1a09005 	mov	r9, r5
  106cc8:	e240650d 	sub	r6, r0, #54525952	; 0x3400000
  106ccc:	e58dc04c 	str	ip, [sp, #76]
  106cd0:	ea00001c 	b	106d48 <.text+0x6d48>
  106cd4:	3fd287a7 	svccc	0x00d287a7
  106cd8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
  106cdc:	3fc68a28 	svccc	0x00c68a28
  106ce0:	8b60c8b3 	blhi	1938fb4 <EFC_FMR_Val+0x1618eb4>
  106ce4:	3fd34413 	svccc	0x00d34413
  106ce8:	509f79fb 	ldrplsh	r7, [pc], fp
  106cec:	0010a775 	andeqs	sl, r0, r5, ror r7
  106cf0:	0010a774 	andeqs	sl, r0, r4, ror r7
  106cf4:	0010a7d0 	ldreqsb	sl, [r0], -r0
  106cf8:	0010a7c4 	andeqs	sl, r0, r4, asr #15
  106cfc:	0010a814 	andeqs	sl, r0, r4, lsl r8
  106d00:	0010a8dc 	ldreqsb	sl, [r0], -ip
  106d04:	e1a0000a 	mov	r0, sl
  106d08:	eb000ca0 	bl	109f90 <__aeabi_i2d>
  106d0c:	e1a02008 	mov	r2, r8
  106d10:	e1a03009 	mov	r3, r9
  106d14:	eb000cd8 	bl	10a07c <__aeabi_dmul>
  106d18:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  106d1c:	e2822707 	add	r2, r2, #1835008	; 0x1c0000
  106d20:	e3a03000 	mov	r3, #0	; 0x0
  106d24:	eb000bd7 	bl	109c88 <__adddf3>
  106d28:	e59de01c 	ldr	lr, [sp, #28]
  106d2c:	e35e0000 	cmp	lr, #0	; 0x0
  106d30:	e1a07001 	mov	r7, r1
  106d34:	e240650d 	sub	r6, r0, #54525952	; 0x3400000
  106d38:	0a00015c 	beq	1072b0 <.text+0x72b0>
  106d3c:	e59d0024 	ldr	r0, [sp, #36]
  106d40:	e59da01c 	ldr	sl, [sp, #28]
  106d44:	e58d004c 	str	r0, [sp, #76]
  106d48:	e59d102c 	ldr	r1, [sp, #44]
  106d4c:	e3510000 	cmp	r1, #0	; 0x0
  106d50:	0a0002c5 	beq	10786c <.text+0x786c>
  106d54:	e51f1060 	ldr	r1, [pc, #-96]	; 106cfc <.text+0x6cfc>
  106d58:	e3a005ff 	mov	r0, #1069547520	; 0x3fc00000
  106d5c:	e081118a 	add	r1, r1, sl, lsl #3
  106d60:	e911000c 	ldmdb	r1, {r2, r3}
  106d64:	e2800602 	add	r0, r0, #2097152	; 0x200000
  106d68:	e3a01000 	mov	r1, #0	; 0x0
  106d6c:	eb000d5d 	bl	10a2e8 <__aeabi_ddiv>
  106d70:	e1a02006 	mov	r2, r6
  106d74:	e1a03007 	mov	r3, r7
  106d78:	eb000bc1 	bl	109c84 <__aeabi_dsub>
  106d7c:	e1a06008 	mov	r6, r8
  106d80:	e1a07009 	mov	r7, r9
  106d84:	e1a08000 	mov	r8, r0
  106d88:	e1a09001 	mov	r9, r1
  106d8c:	e1a00006 	mov	r0, r6
  106d90:	e1a01007 	mov	r1, r7
  106d94:	eb000e1e 	bl	10a614 <__aeabi_d2iz>
  106d98:	e1a04000 	mov	r4, r0
  106d9c:	eb000c7b 	bl	109f90 <__aeabi_i2d>
  106da0:	e1a02000 	mov	r2, r0
  106da4:	e1a03001 	mov	r3, r1
  106da8:	e1a00006 	mov	r0, r6
  106dac:	e1a01007 	mov	r1, r7
  106db0:	eb000bb3 	bl	109c84 <__aeabi_dsub>
  106db4:	e59d7040 	ldr	r7, [sp, #64]
  106db8:	e1a05000 	mov	r5, r0
  106dbc:	e1a06001 	mov	r6, r1
  106dc0:	e2844030 	add	r4, r4, #48	; 0x30
  106dc4:	e4c74001 	strb	r4, [r7], #1
  106dc8:	e1a00008 	mov	r0, r8
  106dcc:	e1a01009 	mov	r1, r9
  106dd0:	e1a02005 	mov	r2, r5
  106dd4:	e1a03006 	mov	r3, r6
  106dd8:	eb000dc3 	bl	10a4ec <__gedf2>
  106ddc:	e3500000 	cmp	r0, #0	; 0x0
  106de0:	ca00003f 	bgt	106ee4 <.text+0x6ee4>
  106de4:	e3a005ff 	mov	r0, #1069547520	; 0x3fc00000
  106de8:	e1a02005 	mov	r2, r5
  106dec:	e1a03006 	mov	r3, r6
  106df0:	e2800603 	add	r0, r0, #3145728	; 0x300000
  106df4:	e3a01000 	mov	r1, #0	; 0x0
  106df8:	eb000ba1 	bl	109c84 <__aeabi_dsub>
  106dfc:	e1a02000 	mov	r2, r0
  106e00:	e1a03001 	mov	r3, r1
  106e04:	e1a00008 	mov	r0, r8
  106e08:	e1a01009 	mov	r1, r9
  106e0c:	eb000db6 	bl	10a4ec <__gedf2>
  106e10:	e3500000 	cmp	r0, #0	; 0x0
  106e14:	ca000088 	bgt	10703c <.text+0x703c>
  106e18:	e35a0001 	cmp	sl, #1	; 0x1
  106e1c:	ca00000a 	bgt	106e4c <.text+0x6e4c>
  106e20:	ea000032 	b	106ef0 <.text+0x6ef0>
  106e24:	eb000b96 	bl	109c84 <__aeabi_dsub>
  106e28:	e1a02008 	mov	r2, r8
  106e2c:	e1a03009 	mov	r3, r9
  106e30:	eb000daf 	bl	10a4f4 <__ledf2>
  106e34:	e59d2040 	ldr	r2, [sp, #64]
  106e38:	e3500000 	cmp	r0, #0	; 0x0
  106e3c:	e082300a 	add	r3, r2, sl
  106e40:	ba00007d 	blt	10703c <.text+0x703c>
  106e44:	e1570003 	cmp	r7, r3
  106e48:	0a000028 	beq	106ef0 <.text+0x6ef0>
  106e4c:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  106e50:	e1a00008 	mov	r0, r8
  106e54:	e1a01009 	mov	r1, r9
  106e58:	e2822709 	add	r2, r2, #2359296	; 0x240000
  106e5c:	e3a03000 	mov	r3, #0	; 0x0
  106e60:	eb000c85 	bl	10a07c <__aeabi_dmul>
  106e64:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  106e68:	e2822709 	add	r2, r2, #2359296	; 0x240000
  106e6c:	e3a03000 	mov	r3, #0	; 0x0
  106e70:	e1a08000 	mov	r8, r0
  106e74:	e1a09001 	mov	r9, r1
  106e78:	e1a00005 	mov	r0, r5
  106e7c:	e1a01006 	mov	r1, r6
  106e80:	eb000c7d 	bl	10a07c <__aeabi_dmul>
  106e84:	e1a06001 	mov	r6, r1
  106e88:	e1a05000 	mov	r5, r0
  106e8c:	eb000de0 	bl	10a614 <__aeabi_d2iz>
  106e90:	e1a04000 	mov	r4, r0
  106e94:	eb000c3d 	bl	109f90 <__aeabi_i2d>
  106e98:	e1a02000 	mov	r2, r0
  106e9c:	e1a03001 	mov	r3, r1
  106ea0:	e1a00005 	mov	r0, r5
  106ea4:	e1a01006 	mov	r1, r6
  106ea8:	eb000b75 	bl	109c84 <__aeabi_dsub>
  106eac:	e2844030 	add	r4, r4, #48	; 0x30
  106eb0:	e1a02008 	mov	r2, r8
  106eb4:	e1a03009 	mov	r3, r9
  106eb8:	e4c74001 	strb	r4, [r7], #1
  106ebc:	e1a06001 	mov	r6, r1
  106ec0:	e1a05000 	mov	r5, r0
  106ec4:	eb000d8a 	bl	10a4f4 <__ledf2>
  106ec8:	e3500000 	cmp	r0, #0	; 0x0
  106ecc:	e3a005ff 	mov	r0, #1069547520	; 0x3fc00000
  106ed0:	e1a02005 	mov	r2, r5
  106ed4:	e1a03006 	mov	r3, r6
  106ed8:	e2800603 	add	r0, r0, #3145728	; 0x300000
  106edc:	e3a01000 	mov	r1, #0	; 0x0
  106ee0:	aaffffcf 	bge	106e24 <.text+0x6e24>
  106ee4:	e59d304c 	ldr	r3, [sp, #76]
  106ee8:	e58d3024 	str	r3, [sp, #36]
  106eec:	ea00011a 	b	10735c <.text+0x735c>
  106ef0:	e28d800c 	add	r8, sp, #12	; 0xc
  106ef4:	e8980300 	ldmia	r8, {r8, r9}
  106ef8:	e59d2050 	ldr	r2, [sp, #80]
  106efc:	e59de024 	ldr	lr, [sp, #36]
  106f00:	e1e03002 	mvn	r3, r2
  106f04:	e1a03fa3 	mov	r3, r3, lsr #31
  106f08:	e35e000e 	cmp	lr, #14	; 0xe
  106f0c:	c3a03000 	movgt	r3, #0	; 0x0
  106f10:	e3530000 	cmp	r3, #0	; 0x0
  106f14:	0a00005d 	beq	107090 <.text+0x7090>
  106f18:	e59d001c 	ldr	r0, [sp, #28]
  106f1c:	e59d107c 	ldr	r1, [sp, #124]
  106f20:	e51f322c 	ldr	r3, [pc, #-556]	; 106cfc <.text+0x6cfc>
  106f24:	e3500000 	cmp	r0, #0	; 0x0
  106f28:	c3a02000 	movgt	r2, #0	; 0x0
  106f2c:	d3a02001 	movle	r2, #1	; 0x1
  106f30:	e083318e 	add	r3, r3, lr, lsl #3
  106f34:	e0121fa1 	ands	r1, r2, r1, lsr #31
  106f38:	e8930c00 	ldmia	r3, {sl, fp}
  106f3c:	1a000137 	bne	107420 <.text+0x7420>
  106f40:	e59d2040 	ldr	r2, [sp, #64]
  106f44:	e59d301c 	ldr	r3, [sp, #28]
  106f48:	e1a04008 	mov	r4, r8
  106f4c:	e1a05009 	mov	r5, r9
  106f50:	e0828003 	add	r8, r2, r3
  106f54:	e1a07002 	mov	r7, r2
  106f58:	ea000007 	b	106f7c <.text+0x6f7c>
  106f5c:	eb000c46 	bl	10a07c <__aeabi_dmul>
  106f60:	e3a02000 	mov	r2, #0	; 0x0
  106f64:	e3a03000 	mov	r3, #0	; 0x0
  106f68:	e1a04000 	mov	r4, r0
  106f6c:	e1a05001 	mov	r5, r1
  106f70:	eb000d61 	bl	10a4fc <__cmpdf2>
  106f74:	e3500000 	cmp	r0, #0	; 0x0
  106f78:	0a0000f7 	beq	10735c <.text+0x735c>
  106f7c:	e1a0200a 	mov	r2, sl
  106f80:	e1a0300b 	mov	r3, fp
  106f84:	e1a00004 	mov	r0, r4
  106f88:	e1a01005 	mov	r1, r5
  106f8c:	eb000cd5 	bl	10a2e8 <__aeabi_ddiv>
  106f90:	eb000d9f 	bl	10a614 <__aeabi_d2iz>
  106f94:	e1a06000 	mov	r6, r0
  106f98:	eb000bfc 	bl	109f90 <__aeabi_i2d>
  106f9c:	e1a02000 	mov	r2, r0
  106fa0:	e1a03001 	mov	r3, r1
  106fa4:	e1a0000a 	mov	r0, sl
  106fa8:	e1a0100b 	mov	r1, fp
  106fac:	eb000c32 	bl	10a07c <__aeabi_dmul>
  106fb0:	e1a02000 	mov	r2, r0
  106fb4:	e1a03001 	mov	r3, r1
  106fb8:	e1a00004 	mov	r0, r4
  106fbc:	e1a01005 	mov	r1, r5
  106fc0:	eb000b2f 	bl	109c84 <__aeabi_dsub>
  106fc4:	e286c030 	add	ip, r6, #48	; 0x30
  106fc8:	e4c7c001 	strb	ip, [r7], #1
  106fcc:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  106fd0:	e1570008 	cmp	r7, r8
  106fd4:	e2822709 	add	r2, r2, #2359296	; 0x240000
  106fd8:	e3a03000 	mov	r3, #0	; 0x0
  106fdc:	1affffde 	bne	106f5c <.text+0x6f5c>
  106fe0:	e1a02000 	mov	r2, r0
  106fe4:	e1a03001 	mov	r3, r1
  106fe8:	eb000b26 	bl	109c88 <__adddf3>
  106fec:	e1a04000 	mov	r4, r0
  106ff0:	e1a05001 	mov	r5, r1
  106ff4:	e1a0000a 	mov	r0, sl
  106ff8:	e1a0100b 	mov	r1, fp
  106ffc:	e1a02004 	mov	r2, r4
  107000:	e1a03005 	mov	r3, r5
  107004:	eb000d3a 	bl	10a4f4 <__ledf2>
  107008:	e3500000 	cmp	r0, #0	; 0x0
  10700c:	ba000008 	blt	107034 <.text+0x7034>
  107010:	e1a0000a 	mov	r0, sl
  107014:	e1a0100b 	mov	r1, fp
  107018:	e1a02004 	mov	r2, r4
  10701c:	e1a03005 	mov	r3, r5
  107020:	eb000d35 	bl	10a4fc <__cmpdf2>
  107024:	e3500000 	cmp	r0, #0	; 0x0
  107028:	1a0000cb 	bne	10735c <.text+0x735c>
  10702c:	e3160001 	tst	r6, #1	; 0x1
  107030:	0a0000c9 	beq	10735c <.text+0x735c>
  107034:	e59d0024 	ldr	r0, [sp, #36]
  107038:	e58d004c 	str	r0, [sp, #76]
  10703c:	e1a02007 	mov	r2, r7
  107040:	e59d3040 	ldr	r3, [sp, #64]
  107044:	e0671003 	rsb	r1, r7, r3
  107048:	e5723001 	ldrb	r3, [r2, #-1]!
  10704c:	e3530039 	cmp	r3, #57	; 0x39
  107050:	1a000008 	bne	107078 <.text+0x7078>
  107054:	e59dc040 	ldr	ip, [sp, #64]
  107058:	e15c0002 	cmp	ip, r2
  10705c:	1afffff7 	bne	107040 <.text+0x7040>
  107060:	e3a03030 	mov	r3, #48	; 0x30
  107064:	e5cc3000 	strb	r3, [ip]
  107068:	e59de04c 	ldr	lr, [sp, #76]
  10706c:	e28ee001 	add	lr, lr, #1	; 0x1
  107070:	e7d13007 	ldrb	r3, [r1, r7]
  107074:	e58de04c 	str	lr, [sp, #76]
  107078:	e2833001 	add	r3, r3, #1	; 0x1
  10707c:	e4c23001 	strb	r3, [r2], #1
  107080:	e59dc04c 	ldr	ip, [sp, #76]
  107084:	e1a07002 	mov	r7, r2
  107088:	e58dc024 	str	ip, [sp, #36]
  10708c:	ea0000b2 	b	10735c <.text+0x735c>
  107090:	e59de02c 	ldr	lr, [sp, #44]
  107094:	e35e0000 	cmp	lr, #0	; 0x0
  107098:	1a0000bf 	bne	10739c <.text+0x739c>
  10709c:	e59d7014 	ldr	r7, [sp, #20]
  1070a0:	e59d5018 	ldr	r5, [sp, #24]
  1070a4:	e1a0a00e 	mov	sl, lr
  1070a8:	e3570000 	cmp	r7, #0	; 0x0
  1070ac:	c35b0000 	cmpgt	fp, #0	; 0x0
  1070b0:	da000007 	ble	1070d4 <.text+0x70d4>
  1070b4:	e59de014 	ldr	lr, [sp, #20]
  1070b8:	e157000b 	cmp	r7, fp
  1070bc:	b1a03007 	movlt	r3, r7
  1070c0:	a1a0300b 	movge	r3, fp
  1070c4:	e063e00e 	rsb	lr, r3, lr
  1070c8:	e58de014 	str	lr, [sp, #20]
  1070cc:	e063b00b 	rsb	fp, r3, fp
  1070d0:	e0637007 	rsb	r7, r3, r7
  1070d4:	e59d0018 	ldr	r0, [sp, #24]
  1070d8:	e3500000 	cmp	r0, #0	; 0x0
  1070dc:	da000015 	ble	107138 <.text+0x7138>
  1070e0:	e59d102c 	ldr	r1, [sp, #44]
  1070e4:	e3510000 	cmp	r1, #0	; 0x0
  1070e8:	0a00027a 	beq	107ad8 <.text+0x7ad8>
  1070ec:	e3550000 	cmp	r5, #0	; 0x0
  1070f0:	da00000d 	ble	10712c <.text+0x712c>
  1070f4:	e1a0100a 	mov	r1, sl
  1070f8:	e1a02005 	mov	r2, r5
  1070fc:	e59d0008 	ldr	r0, [sp, #8]
  107100:	eb000965 	bl	10969c <_pow5mult>
  107104:	e1a0a000 	mov	sl, r0
  107108:	e1a0100a 	mov	r1, sl
  10710c:	e59d2038 	ldr	r2, [sp, #56]
  107110:	e59d0008 	ldr	r0, [sp, #8]
  107114:	eb0008b6 	bl	1093f4 <_multiply>
  107118:	e59d1038 	ldr	r1, [sp, #56]
  10711c:	e1a04000 	mov	r4, r0
  107120:	e59d0008 	ldr	r0, [sp, #8]
  107124:	eb0006e3 	bl	108cb8 <_Bfree>
  107128:	e58d4038 	str	r4, [sp, #56]
  10712c:	e59d3018 	ldr	r3, [sp, #24]
  107130:	e0532005 	subs	r2, r3, r5
  107134:	1a00026f 	bne	107af8 <.text+0x7af8>
  107138:	e59d0008 	ldr	r0, [sp, #8]
  10713c:	e3a01001 	mov	r1, #1	; 0x1
  107140:	eb00091b 	bl	1095b4 <_i2b>
  107144:	e59dc030 	ldr	ip, [sp, #48]
  107148:	e35c0000 	cmp	ip, #0	; 0x0
  10714c:	e1a06000 	mov	r6, r0
  107150:	da000004 	ble	107168 <.text+0x7168>
  107154:	e1a01000 	mov	r1, r0
  107158:	e1a0200c 	mov	r2, ip
  10715c:	e59d0008 	ldr	r0, [sp, #8]
  107160:	eb00094d 	bl	10969c <_pow5mult>
  107164:	e1a06000 	mov	r6, r0
  107168:	e59de004 	ldr	lr, [sp, #4]
  10716c:	e35e0001 	cmp	lr, #1	; 0x1
  107170:	da0000f9 	ble	10755c <.text+0x755c>
  107174:	e3a04000 	mov	r4, #0	; 0x0
  107178:	e59d1030 	ldr	r1, [sp, #48]
  10717c:	e3510000 	cmp	r1, #0	; 0x0
  107180:	03a03001 	moveq	r3, #1	; 0x1
  107184:	1a000231 	bne	107a50 <.text+0x7a50>
  107188:	e08b3003 	add	r3, fp, r3
  10718c:	e213301f 	ands	r3, r3, #31	; 0x1f
  107190:	03a0301c 	moveq	r3, #28	; 0x1c
  107194:	0a000119 	beq	107600 <.text+0x7600>
  107198:	e2633020 	rsb	r3, r3, #32	; 0x20
  10719c:	e3530004 	cmp	r3, #4	; 0x4
  1071a0:	da000113 	ble	1075f4 <.text+0x75f4>
  1071a4:	e59d2014 	ldr	r2, [sp, #20]
  1071a8:	e2433004 	sub	r3, r3, #4	; 0x4
  1071ac:	e0822003 	add	r2, r2, r3
  1071b0:	e58d2014 	str	r2, [sp, #20]
  1071b4:	e08bb003 	add	fp, fp, r3
  1071b8:	e0877003 	add	r7, r7, r3
  1071bc:	e59de014 	ldr	lr, [sp, #20]
  1071c0:	e35e0000 	cmp	lr, #0	; 0x0
  1071c4:	da000004 	ble	1071dc <.text+0x71dc>
  1071c8:	e59d1038 	ldr	r1, [sp, #56]
  1071cc:	e1a0200e 	mov	r2, lr
  1071d0:	e59d0008 	ldr	r0, [sp, #8]
  1071d4:	eb000847 	bl	1092f8 <_lshift>
  1071d8:	e58d0038 	str	r0, [sp, #56]
  1071dc:	e35b0000 	cmp	fp, #0	; 0x0
  1071e0:	da000004 	ble	1071f8 <.text+0x71f8>
  1071e4:	e1a01006 	mov	r1, r6
  1071e8:	e1a0200b 	mov	r2, fp
  1071ec:	e59d0008 	ldr	r0, [sp, #8]
  1071f0:	eb000840 	bl	1092f8 <_lshift>
  1071f4:	e1a06000 	mov	r6, r0
  1071f8:	e59d0028 	ldr	r0, [sp, #40]
  1071fc:	e3500000 	cmp	r0, #0	; 0x0
  107200:	1a000218 	bne	107a68 <.text+0x7a68>
  107204:	e59de01c 	ldr	lr, [sp, #28]
  107208:	e59d0004 	ldr	r0, [sp, #4]
  10720c:	e35e0000 	cmp	lr, #0	; 0x0
  107210:	c3a03000 	movgt	r3, #0	; 0x0
  107214:	d3a03001 	movle	r3, #1	; 0x1
  107218:	e3500002 	cmp	r0, #2	; 0x2
  10721c:	d3a03000 	movle	r3, #0	; 0x0
  107220:	e3530000 	cmp	r3, #0	; 0x0
  107224:	0a0000fb 	beq	107618 <.text+0x7618>
  107228:	e35e0000 	cmp	lr, #0	; 0x0
  10722c:	ba000037 	blt	107310 <.text+0x7310>
  107230:	e1a01006 	mov	r1, r6
  107234:	e3a02005 	mov	r2, #5	; 0x5
  107238:	e3a03000 	mov	r3, #0	; 0x0
  10723c:	e59d0008 	ldr	r0, [sp, #8]
  107240:	eb0008e3 	bl	1095d4 <_multadd>
  107244:	e1a06000 	mov	r6, r0
  107248:	e1a01006 	mov	r1, r6
  10724c:	e59d0038 	ldr	r0, [sp, #56]
  107250:	eb0006da 	bl	108dc0 <__mcmp>
  107254:	e3500000 	cmp	r0, #0	; 0x0
  107258:	da00002c 	ble	107310 <.text+0x7310>
  10725c:	e59d7040 	ldr	r7, [sp, #64]
  107260:	e3a03031 	mov	r3, #49	; 0x31
  107264:	e4c73001 	strb	r3, [r7], #1
  107268:	e59d3024 	ldr	r3, [sp, #36]
  10726c:	e3a0c000 	mov	ip, #0	; 0x0
  107270:	e2833001 	add	r3, r3, #1	; 0x1
  107274:	e1a0b00a 	mov	fp, sl
  107278:	e58d3024 	str	r3, [sp, #36]
  10727c:	e58dc03c 	str	ip, [sp, #60]
  107280:	ea000029 	b	10732c <.text+0x732c>
  107284:	e51f158c 	ldr	r1, [pc, #-1420]	; 106d00 <.text+0x6d00>
  107288:	e2812020 	add	r2, r1, #32	; 0x20
  10728c:	e892000c 	ldmia	r2, {r2, r3}
  107290:	e28d000c 	add	r0, sp, #12	; 0xc
  107294:	e8900003 	ldmia	r0, {r0, r1}
  107298:	eb000c12 	bl	10a2e8 <__aeabi_ddiv>
  10729c:	e204400f 	and	r4, r4, #15	; 0xf
  1072a0:	e1a08000 	mov	r8, r0
  1072a4:	e1a09001 	mov	r9, r1
  1072a8:	e3a0a003 	mov	sl, #3	; 0x3
  1072ac:	eafffe3f 	b	106bb0 <.text+0x6bb0>
  1072b0:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  1072b4:	e1a00008 	mov	r0, r8
  1072b8:	e1a01009 	mov	r1, r9
  1072bc:	e2822705 	add	r2, r2, #1310720	; 0x140000
  1072c0:	e3a03000 	mov	r3, #0	; 0x0
  1072c4:	eb000a6e 	bl	109c84 <__aeabi_dsub>
  1072c8:	e1a02006 	mov	r2, r6
  1072cc:	e1a03007 	mov	r3, r7
  1072d0:	e1a08000 	mov	r8, r0
  1072d4:	e1a09001 	mov	r9, r1
  1072d8:	eb000c83 	bl	10a4ec <__gedf2>
  1072dc:	e3500000 	cmp	r0, #0	; 0x0
  1072e0:	e1a04006 	mov	r4, r6
  1072e4:	e1a05007 	mov	r5, r7
  1072e8:	ca000059 	bgt	107454 <.text+0x7454>
  1072ec:	e2862102 	add	r2, r6, #-2147483648	; 0x80000000
  1072f0:	e1a03007 	mov	r3, r7
  1072f4:	e1a00008 	mov	r0, r8
  1072f8:	e1a01009 	mov	r1, r9
  1072fc:	eb000c7c 	bl	10a4f4 <__ledf2>
  107300:	e3500000 	cmp	r0, #0	; 0x0
  107304:	aafffef9 	bge	106ef0 <.text+0x6ef0>
  107308:	e3a06000 	mov	r6, #0	; 0x0
  10730c:	e1a0a006 	mov	sl, r6
  107310:	e59d107c 	ldr	r1, [sp, #124]
  107314:	e3a02000 	mov	r2, #0	; 0x0
  107318:	e1e01001 	mvn	r1, r1
  10731c:	e58d1024 	str	r1, [sp, #36]
  107320:	e59d7040 	ldr	r7, [sp, #64]
  107324:	e58d203c 	str	r2, [sp, #60]
  107328:	e1a0b00a 	mov	fp, sl
  10732c:	e1a01006 	mov	r1, r6
  107330:	e59d0008 	ldr	r0, [sp, #8]
  107334:	eb00065f 	bl	108cb8 <_Bfree>
  107338:	e35b0000 	cmp	fp, #0	; 0x0
  10733c:	0a000006 	beq	10735c <.text+0x735c>
  107340:	e59d203c 	ldr	r2, [sp, #60]
  107344:	e3520000 	cmp	r2, #0	; 0x0
  107348:	1152000b 	cmpne	r2, fp
  10734c:	1a000142 	bne	10785c <.text+0x785c>
  107350:	e1a0100b 	mov	r1, fp
  107354:	e59d0008 	ldr	r0, [sp, #8]
  107358:	eb000656 	bl	108cb8 <_Bfree>
  10735c:	e59d1038 	ldr	r1, [sp, #56]
  107360:	e59d0008 	ldr	r0, [sp, #8]
  107364:	eb000653 	bl	108cb8 <_Bfree>
  107368:	e3a03000 	mov	r3, #0	; 0x0
  10736c:	e59dc024 	ldr	ip, [sp, #36]
  107370:	e59de088 	ldr	lr, [sp, #136]
  107374:	e5c73000 	strb	r3, [r7]
  107378:	e59d0080 	ldr	r0, [sp, #128]
  10737c:	e35e0000 	cmp	lr, #0	; 0x0
  107380:	e28c2001 	add	r2, ip, #1	; 0x1
  107384:	e5802000 	str	r2, [r0]
  107388:	159d1088 	ldrne	r1, [sp, #136]
  10738c:	059d0040 	ldreq	r0, [sp, #64]
  107390:	159d0040 	ldrne	r0, [sp, #64]
  107394:	15817000 	strne	r7, [r1]
  107398:	eafffd43 	b	1068ac <_dtoa_r+0xd8>
  10739c:	e59d0004 	ldr	r0, [sp, #4]
  1073a0:	e3500001 	cmp	r0, #1	; 0x1
  1073a4:	da0001d8 	ble	107b0c <.text+0x7b0c>
  1073a8:	e59d301c 	ldr	r3, [sp, #28]
  1073ac:	e59dc018 	ldr	ip, [sp, #24]
  1073b0:	e2432001 	sub	r2, r3, #1	; 0x1
  1073b4:	e15c0002 	cmp	ip, r2
  1073b8:	b59de018 	ldrlt	lr, [sp, #24]
  1073bc:	b59d0030 	ldrlt	r0, [sp, #48]
  1073c0:	b06e3002 	rsblt	r3, lr, r2
  1073c4:	e59d101c 	ldr	r1, [sp, #28]
  1073c8:	b08ee003 	addlt	lr, lr, r3
  1073cc:	b0800003 	addlt	r0, r0, r3
  1073d0:	a062500c 	rsbge	r5, r2, ip
  1073d4:	b58de018 	strlt	lr, [sp, #24]
  1073d8:	b58d0030 	strlt	r0, [sp, #48]
  1073dc:	b3a05000 	movlt	r5, #0	; 0x0
  1073e0:	e3510000 	cmp	r1, #0	; 0x0
  1073e4:	b59d301c 	ldrlt	r3, [sp, #28]
  1073e8:	b59d2014 	ldrlt	r2, [sp, #20]
  1073ec:	a59d7014 	ldrge	r7, [sp, #20]
  1073f0:	b0637002 	rsblt	r7, r3, r2
  1073f4:	a1a03001 	movge	r3, r1
  1073f8:	b3a03000 	movlt	r3, #0	; 0x0
  1073fc:	e59dc014 	ldr	ip, [sp, #20]
  107400:	e59d0008 	ldr	r0, [sp, #8]
  107404:	e08cc003 	add	ip, ip, r3
  107408:	e3a01001 	mov	r1, #1	; 0x1
  10740c:	e08bb003 	add	fp, fp, r3
  107410:	e58dc014 	str	ip, [sp, #20]
  107414:	eb000866 	bl	1095b4 <_i2b>
  107418:	e1a0a000 	mov	sl, r0
  10741c:	eaffff21 	b	1070a8 <.text+0x70a8>
  107420:	e3500000 	cmp	r0, #0	; 0x0
  107424:	baffffb7 	blt	107308 <.text+0x7308>
  107428:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  10742c:	e2822705 	add	r2, r2, #1310720	; 0x140000
  107430:	e3a03000 	mov	r3, #0	; 0x0
  107434:	e1a0000a 	mov	r0, sl
  107438:	e1a0100b 	mov	r1, fp
  10743c:	eb000b0e 	bl	10a07c <__aeabi_dmul>
  107440:	e1a02008 	mov	r2, r8
  107444:	e1a03009 	mov	r3, r9
  107448:	eb000c27 	bl	10a4ec <__gedf2>
  10744c:	e3500000 	cmp	r0, #0	; 0x0
  107450:	aaffffac 	bge	107308 <.text+0x7308>
  107454:	e3a06000 	mov	r6, #0	; 0x0
  107458:	e1a0a006 	mov	sl, r6
  10745c:	eaffff7e 	b	10725c <.text+0x725c>
  107460:	e3e02000 	mvn	r2, #0	; 0x0
  107464:	e3a03001 	mov	r3, #1	; 0x1
  107468:	e58d2020 	str	r2, [sp, #32]
  10746c:	e58d201c 	str	r2, [sp, #28]
  107470:	e58d302c 	str	r3, [sp, #44]
  107474:	e59dc008 	ldr	ip, [sp, #8]
  107478:	e3560017 	cmp	r6, #23	; 0x17
  10747c:	e3a03000 	mov	r3, #0	; 0x0
  107480:	e58c3044 	str	r3, [ip, #68]
  107484:	81a01003 	movhi	r1, r3
  107488:	83a02004 	movhi	r2, #4	; 0x4
  10748c:	9a0001df 	bls	107c10 <.text+0x7c10>
  107490:	e1a02082 	mov	r2, r2, lsl #1
  107494:	e2823014 	add	r3, r2, #20	; 0x14
  107498:	e1560003 	cmp	r6, r3
  10749c:	e2811001 	add	r1, r1, #1	; 0x1
  1074a0:	2afffffa 	bcs	107490 <.text+0x7490>
  1074a4:	e59d301c 	ldr	r3, [sp, #28]
  1074a8:	e59d2008 	ldr	r2, [sp, #8]
  1074ac:	e353000e 	cmp	r3, #14	; 0xe
  1074b0:	83a04000 	movhi	r4, #0	; 0x0
  1074b4:	93a04001 	movls	r4, #1	; 0x1
  1074b8:	e1a05000 	mov	r5, r0
  1074bc:	e5821044 	str	r1, [r2, #68]
  1074c0:	eafffda7 	b	106b64 <.text+0x6b64>
  1074c4:	e3a03000 	mov	r3, #0	; 0x0
  1074c8:	e58d302c 	str	r3, [sp, #44]
  1074cc:	e59dc07c 	ldr	ip, [sp, #124]
  1074d0:	e59de024 	ldr	lr, [sp, #36]
  1074d4:	e28c3001 	add	r3, ip, #1	; 0x1
  1074d8:	e08e6003 	add	r6, lr, r3
  1074dc:	e3560000 	cmp	r6, #0	; 0x0
  1074e0:	e2461001 	sub	r1, r6, #1	; 0x1
  1074e4:	e58d1020 	str	r1, [sp, #32]
  1074e8:	c58d601c 	strgt	r6, [sp, #28]
  1074ec:	caffffe0 	bgt	107474 <.text+0x7474>
  1074f0:	e356000e 	cmp	r6, #14	; 0xe
  1074f4:	83a04000 	movhi	r4, #0	; 0x0
  1074f8:	93a04001 	movls	r4, #1	; 0x1
  1074fc:	e1a05000 	mov	r5, r0
  107500:	e58d601c 	str	r6, [sp, #28]
  107504:	eafffd93 	b	106b58 <.text+0x6b58>
  107508:	e3a02001 	mov	r2, #1	; 0x1
  10750c:	e58d202c 	str	r2, [sp, #44]
  107510:	e59d207c 	ldr	r2, [sp, #124]
  107514:	e3520000 	cmp	r2, #0	; 0x0
  107518:	c58d2020 	strgt	r2, [sp, #32]
  10751c:	c1a06002 	movgt	r6, r2
  107520:	c58d201c 	strgt	r2, [sp, #28]
  107524:	caffffd2 	bgt	107474 <.text+0x7474>
  107528:	e3a02001 	mov	r2, #1	; 0x1
  10752c:	e1a04002 	mov	r4, r2
  107530:	e1a05000 	mov	r5, r0
  107534:	e58d201c 	str	r2, [sp, #28]
  107538:	e58d207c 	str	r2, [sp, #124]
  10753c:	e58d2020 	str	r2, [sp, #32]
  107540:	eafffd84 	b	106b58 <.text+0x6b58>
  107544:	e3a01001 	mov	r1, #1	; 0x1
  107548:	e58d102c 	str	r1, [sp, #44]
  10754c:	eaffffde 	b	1074cc <.text+0x74cc>
  107550:	e3a01000 	mov	r1, #0	; 0x0
  107554:	e58d102c 	str	r1, [sp, #44]
  107558:	eaffffec 	b	107510 <.text+0x7510>
  10755c:	e3590000 	cmp	r9, #0	; 0x0
  107560:	1affff03 	bne	107174 <.text+0x7174>
  107564:	e3c834ff 	bic	r3, r8, #-16777216	; 0xff000000
  107568:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
  10756c:	e3530000 	cmp	r3, #0	; 0x0
  107570:	1afffeff 	bne	107174 <.text+0x7174>
  107574:	e3c83102 	bic	r3, r8, #-2147483648	; 0x80000000
  107578:	e1a03a23 	mov	r3, r3, lsr #20
  10757c:	e1a03a03 	mov	r3, r3, lsl #20
  107580:	e3530000 	cmp	r3, #0	; 0x0
  107584:	0afffefa 	beq	107174 <.text+0x7174>
  107588:	e59d0014 	ldr	r0, [sp, #20]
  10758c:	e28bb001 	add	fp, fp, #1	; 0x1
  107590:	e2800001 	add	r0, r0, #1	; 0x1
  107594:	e3a04001 	mov	r4, #1	; 0x1
  107598:	e58d0014 	str	r0, [sp, #20]
  10759c:	eafffef5 	b	107178 <.text+0x7178>
  1075a0:	e59d0024 	ldr	r0, [sp, #36]
  1075a4:	eb000a79 	bl	109f90 <__aeabi_i2d>
  1075a8:	e1a02000 	mov	r2, r0
  1075ac:	e1a03001 	mov	r3, r1
  1075b0:	e1a00004 	mov	r0, r4
  1075b4:	e1a01005 	mov	r1, r5
  1075b8:	eb000bcf 	bl	10a4fc <__cmpdf2>
  1075bc:	e3500000 	cmp	r0, #0	; 0x0
  1075c0:	159dc024 	ldrne	ip, [sp, #36]
  1075c4:	124cc001 	subne	ip, ip, #1	; 0x1
  1075c8:	158dc024 	strne	ip, [sp, #36]
  1075cc:	eafffcf1 	b	106998 <_dtoa_r+0x1c4>
  1075d0:	e59d3014 	ldr	r3, [sp, #20]
  1075d4:	e59dc024 	ldr	ip, [sp, #36]
  1075d8:	e3a00000 	mov	r0, #0	; 0x0
  1075dc:	e06c3003 	rsb	r3, ip, r3
  1075e0:	e26ce000 	rsb	lr, ip, #0	; 0x0
  1075e4:	e58d3014 	str	r3, [sp, #20]
  1075e8:	e58de018 	str	lr, [sp, #24]
  1075ec:	e58d0030 	str	r0, [sp, #48]
  1075f0:	eafffd0b 	b	106a24 <_dtoa_r+0x250>
  1075f4:	e3530003 	cmp	r3, #3	; 0x3
  1075f8:	cafffeef 	bgt	1071bc <.text+0x71bc>
  1075fc:	e283301c 	add	r3, r3, #28	; 0x1c
  107600:	e59dc014 	ldr	ip, [sp, #20]
  107604:	e08bb003 	add	fp, fp, r3
  107608:	e08cc003 	add	ip, ip, r3
  10760c:	e0877003 	add	r7, r7, r3
  107610:	e58dc014 	str	ip, [sp, #20]
  107614:	eafffee8 	b	1071bc <.text+0x71bc>
  107618:	e59de02c 	ldr	lr, [sp, #44]
  10761c:	e35e0000 	cmp	lr, #0	; 0x0
  107620:	03a04000 	moveq	r4, #0	; 0x0
  107624:	0a00004c 	beq	10775c <.text+0x775c>
  107628:	e3570000 	cmp	r7, #0	; 0x0
  10762c:	da000004 	ble	107644 <.text+0x7644>
  107630:	e1a0100a 	mov	r1, sl
  107634:	e1a02007 	mov	r2, r7
  107638:	e59d0008 	ldr	r0, [sp, #8]
  10763c:	eb00072d 	bl	1092f8 <_lshift>
  107640:	e1a0a000 	mov	sl, r0
  107644:	e3540000 	cmp	r4, #0	; 0x0
  107648:	01a0b00a 	moveq	fp, sl
  10764c:	1a00014e 	bne	107b8c <.text+0x7b8c>
  107650:	e58da03c 	str	sl, [sp, #60]
  107654:	e59d5040 	ldr	r5, [sp, #64]
  107658:	e2097001 	and	r7, r9, #1	; 0x1
  10765c:	e1a01006 	mov	r1, r6
  107660:	e59d0038 	ldr	r0, [sp, #56]
  107664:	ebfffbd9 	bl	1065d0 <quorem>
  107668:	e59d103c 	ldr	r1, [sp, #60]
  10766c:	e2809030 	add	r9, r0, #48	; 0x30
  107670:	e59d0038 	ldr	r0, [sp, #56]
  107674:	eb0005d1 	bl	108dc0 <__mcmp>
  107678:	e1a01006 	mov	r1, r6
  10767c:	e1a08000 	mov	r8, r0
  107680:	e1a0200b 	mov	r2, fp
  107684:	e59d0008 	ldr	r0, [sp, #8]
  107688:	eb0006cd 	bl	1091c4 <__mdiff>
  10768c:	e590300c 	ldr	r3, [r0, #12]
  107690:	e3530000 	cmp	r3, #0	; 0x0
  107694:	e1a04000 	mov	r4, r0
  107698:	13a0a001 	movne	sl, #1	; 0x1
  10769c:	0a000061 	beq	107828 <.text+0x7828>
  1076a0:	e1a01004 	mov	r1, r4
  1076a4:	e59d0008 	ldr	r0, [sp, #8]
  1076a8:	eb000582 	bl	108cb8 <_Bfree>
  1076ac:	e59d2004 	ldr	r2, [sp, #4]
  1076b0:	e19a2002 	orrs	r2, sl, r2
  1076b4:	1a000001 	bne	1076c0 <.text+0x76c0>
  1076b8:	e3570000 	cmp	r7, #0	; 0x0
  1076bc:	0a00014a 	beq	107bec <.text+0x7bec>
  1076c0:	e3580000 	cmp	r8, #0	; 0x0
  1076c4:	ba00011f 	blt	107b48 <.text+0x7b48>
  1076c8:	e59d3004 	ldr	r3, [sp, #4]
  1076cc:	e1983003 	orrs	r3, r8, r3
  1076d0:	1a000001 	bne	1076dc <.text+0x76dc>
  1076d4:	e3570000 	cmp	r7, #0	; 0x0
  1076d8:	0a00011a 	beq	107b48 <.text+0x7b48>
  1076dc:	e35a0000 	cmp	sl, #0	; 0x0
  1076e0:	ca000139 	bgt	107bcc <.text+0x7bcc>
  1076e4:	e4c59001 	strb	r9, [r5], #1
  1076e8:	e59dc040 	ldr	ip, [sp, #64]
  1076ec:	e59de01c 	ldr	lr, [sp, #28]
  1076f0:	e08c300e 	add	r3, ip, lr
  1076f4:	e1550003 	cmp	r5, r3
  1076f8:	0a00002a 	beq	1077a8 <.text+0x77a8>
  1076fc:	e59d1038 	ldr	r1, [sp, #56]
  107700:	e59d0008 	ldr	r0, [sp, #8]
  107704:	e3a0200a 	mov	r2, #10	; 0xa
  107708:	e3a03000 	mov	r3, #0	; 0x0
  10770c:	eb0007b0 	bl	1095d4 <_multadd>
  107710:	e58d0038 	str	r0, [sp, #56]
  107714:	e59d003c 	ldr	r0, [sp, #60]
  107718:	e150000b 	cmp	r0, fp
  10771c:	0a000046 	beq	10783c <.text+0x783c>
  107720:	e59d103c 	ldr	r1, [sp, #60]
  107724:	e3a0200a 	mov	r2, #10	; 0xa
  107728:	e3a03000 	mov	r3, #0	; 0x0
  10772c:	e59d0008 	ldr	r0, [sp, #8]
  107730:	eb0007a7 	bl	1095d4 <_multadd>
  107734:	e1a0100b 	mov	r1, fp
  107738:	e58d003c 	str	r0, [sp, #60]
  10773c:	e3a0200a 	mov	r2, #10	; 0xa
  107740:	e59d0008 	ldr	r0, [sp, #8]
  107744:	e3a03000 	mov	r3, #0	; 0x0
  107748:	eb0007a1 	bl	1095d4 <_multadd>
  10774c:	e1a0b000 	mov	fp, r0
  107750:	eaffffc1 	b	10765c <.text+0x765c>
  107754:	eb00079e 	bl	1095d4 <_multadd>
  107758:	e58d0038 	str	r0, [sp, #56]
  10775c:	e1a01006 	mov	r1, r6
  107760:	e59d0038 	ldr	r0, [sp, #56]
  107764:	ebfffb99 	bl	1065d0 <quorem>
  107768:	e59dc040 	ldr	ip, [sp, #64]
  10776c:	e2809030 	add	r9, r0, #48	; 0x30
  107770:	e59d1038 	ldr	r1, [sp, #56]
  107774:	e59d0008 	ldr	r0, [sp, #8]
  107778:	e7c4900c 	strb	r9, [r4, ip]
  10777c:	e59de01c 	ldr	lr, [sp, #28]
  107780:	e2844001 	add	r4, r4, #1	; 0x1
  107784:	e15e0004 	cmp	lr, r4
  107788:	e3a0200a 	mov	r2, #10	; 0xa
  10778c:	e3a03000 	mov	r3, #0	; 0x0
  107790:	caffffef 	bgt	107754 <.text+0x7754>
  107794:	e59d0040 	ldr	r0, [sp, #64]
  107798:	e3a01000 	mov	r1, #0	; 0x0
  10779c:	e58d103c 	str	r1, [sp, #60]
  1077a0:	e0805004 	add	r5, r0, r4
  1077a4:	e1a0b00a 	mov	fp, sl
  1077a8:	e59d1038 	ldr	r1, [sp, #56]
  1077ac:	e3a02001 	mov	r2, #1	; 0x1
  1077b0:	e59d0008 	ldr	r0, [sp, #8]
  1077b4:	eb0006cf 	bl	1092f8 <_lshift>
  1077b8:	e1a01006 	mov	r1, r6
  1077bc:	e58d0038 	str	r0, [sp, #56]
  1077c0:	eb00057e 	bl	108dc0 <__mcmp>
  1077c4:	e3500000 	cmp	r0, #0	; 0x0
  1077c8:	da00000d 	ble	107804 <.text+0x7804>
  1077cc:	e1a02005 	mov	r2, r5
  1077d0:	e5723001 	ldrb	r3, [r2, #-1]!
  1077d4:	e3530039 	cmp	r3, #57	; 0x39
  1077d8:	1a0000d6 	bne	107b38 <.text+0x7b38>
  1077dc:	e59d0040 	ldr	r0, [sp, #64]
  1077e0:	e1500002 	cmp	r0, r2
  1077e4:	1afffff9 	bne	1077d0 <.text+0x77d0>
  1077e8:	e1a07000 	mov	r7, r0
  1077ec:	e3a03031 	mov	r3, #49	; 0x31
  1077f0:	e4c73001 	strb	r3, [r7], #1
  1077f4:	e59d1024 	ldr	r1, [sp, #36]
  1077f8:	e2811001 	add	r1, r1, #1	; 0x1
  1077fc:	e58d1024 	str	r1, [sp, #36]
  107800:	eafffec9 	b	10732c <.text+0x732c>
  107804:	1a000001 	bne	107810 <.text+0x7810>
  107808:	e3190001 	tst	r9, #1	; 0x1
  10780c:	1affffee 	bne	1077cc <.text+0x77cc>
  107810:	e1a02005 	mov	r2, r5
  107814:	e5723001 	ldrb	r3, [r2, #-1]!
  107818:	e3530030 	cmp	r3, #48	; 0x30
  10781c:	0afffffc 	beq	107814 <.text+0x7814>
  107820:	e2827001 	add	r7, r2, #1	; 0x1
  107824:	eafffec0 	b	10732c <.text+0x732c>
  107828:	e59d0038 	ldr	r0, [sp, #56]
  10782c:	e1a01004 	mov	r1, r4
  107830:	eb000562 	bl	108dc0 <__mcmp>
  107834:	e1a0a000 	mov	sl, r0
  107838:	eaffff98 	b	1076a0 <.text+0x76a0>
  10783c:	e1a0100b 	mov	r1, fp
  107840:	e59d0008 	ldr	r0, [sp, #8]
  107844:	e3a0200a 	mov	r2, #10	; 0xa
  107848:	e3a03000 	mov	r3, #0	; 0x0
  10784c:	eb000760 	bl	1095d4 <_multadd>
  107850:	e1a0b000 	mov	fp, r0
  107854:	e58d003c 	str	r0, [sp, #60]
  107858:	eaffff7f 	b	10765c <.text+0x765c>
  10785c:	e1a01002 	mov	r1, r2
  107860:	e59d0008 	ldr	r0, [sp, #8]
  107864:	eb000513 	bl	108cb8 <_Bfree>
  107868:	eafffeb8 	b	107350 <.text+0x7350>
  10786c:	e51fcb78 	ldr	ip, [pc, #-2936]	; 106cfc <.text+0x6cfc>
  107870:	e08cc18a 	add	ip, ip, sl, lsl #3
  107874:	e91c000c 	ldmdb	ip, {r2, r3}
  107878:	e1a00006 	mov	r0, r6
  10787c:	e1a01007 	mov	r1, r7
  107880:	eb0009fd 	bl	10a07c <__aeabi_dmul>
  107884:	e58d0044 	str	r0, [sp, #68]
  107888:	e58d1048 	str	r1, [sp, #72]
  10788c:	e1a00008 	mov	r0, r8
  107890:	e1a01009 	mov	r1, r9
  107894:	eb000b5e 	bl	10a614 <__aeabi_d2iz>
  107898:	e1a04000 	mov	r4, r0
  10789c:	eb0009bb 	bl	109f90 <__aeabi_i2d>
  1078a0:	e1a02000 	mov	r2, r0
  1078a4:	e1a03001 	mov	r3, r1
  1078a8:	e1a00008 	mov	r0, r8
  1078ac:	e1a01009 	mov	r1, r9
  1078b0:	eb0008f3 	bl	109c84 <__aeabi_dsub>
  1078b4:	e59d7040 	ldr	r7, [sp, #64]
  1078b8:	e2844030 	add	r4, r4, #48	; 0x30
  1078bc:	e35a0001 	cmp	sl, #1	; 0x1
  1078c0:	e1a05000 	mov	r5, r0
  1078c4:	e1a06001 	mov	r6, r1
  1078c8:	e4c74001 	strb	r4, [r7], #1
  1078cc:	13a08001 	movne	r8, #1	; 0x1
  1078d0:	0a000019 	beq	10793c <.text+0x793c>
  1078d4:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  1078d8:	e2822709 	add	r2, r2, #2359296	; 0x240000
  1078dc:	e3a03000 	mov	r3, #0	; 0x0
  1078e0:	e1a00005 	mov	r0, r5
  1078e4:	e1a01006 	mov	r1, r6
  1078e8:	eb0009e3 	bl	10a07c <__aeabi_dmul>
  1078ec:	e1a06001 	mov	r6, r1
  1078f0:	e1a05000 	mov	r5, r0
  1078f4:	eb000b46 	bl	10a614 <__aeabi_d2iz>
  1078f8:	e1a04000 	mov	r4, r0
  1078fc:	eb0009a3 	bl	109f90 <__aeabi_i2d>
  107900:	e1a02000 	mov	r2, r0
  107904:	e1a03001 	mov	r3, r1
  107908:	e1a00005 	mov	r0, r5
  10790c:	e1a01006 	mov	r1, r6
  107910:	eb0008db 	bl	109c84 <__aeabi_dsub>
  107914:	e59dc040 	ldr	ip, [sp, #64]
  107918:	e2844030 	add	r4, r4, #48	; 0x30
  10791c:	e7c8400c 	strb	r4, [r8, ip]
  107920:	e2888001 	add	r8, r8, #1	; 0x1
  107924:	e158000a 	cmp	r8, sl
  107928:	e1a05000 	mov	r5, r0
  10792c:	e1a06001 	mov	r6, r1
  107930:	1affffe7 	bne	1078d4 <.text+0x78d4>
  107934:	e0873008 	add	r3, r7, r8
  107938:	e2437001 	sub	r7, r3, #1	; 0x1
  10793c:	e3a025ff 	mov	r2, #1069547520	; 0x3fc00000
  107940:	e2822602 	add	r2, r2, #2097152	; 0x200000
  107944:	e3a03000 	mov	r3, #0	; 0x0
  107948:	e28d0044 	add	r0, sp, #68	; 0x44
  10794c:	e8900003 	ldmia	r0, {r0, r1}
  107950:	eb0008cc 	bl	109c88 <__adddf3>
  107954:	e1a02005 	mov	r2, r5
  107958:	e1a03006 	mov	r3, r6
  10795c:	eb000ae4 	bl	10a4f4 <__ledf2>
  107960:	e3500000 	cmp	r0, #0	; 0x0
  107964:	bafffdb4 	blt	10703c <.text+0x703c>
  107968:	e3a005ff 	mov	r0, #1069547520	; 0x3fc00000
  10796c:	e28d2044 	add	r2, sp, #68	; 0x44
  107970:	e892000c 	ldmia	r2, {r2, r3}
  107974:	e2800602 	add	r0, r0, #2097152	; 0x200000
  107978:	e3a01000 	mov	r1, #0	; 0x0
  10797c:	eb0008c0 	bl	109c84 <__aeabi_dsub>
  107980:	e1a02005 	mov	r2, r5
  107984:	e1a03006 	mov	r3, r6
  107988:	eb000ad7 	bl	10a4ec <__gedf2>
  10798c:	e3500000 	cmp	r0, #0	; 0x0
  107990:	dafffd56 	ble	106ef0 <.text+0x6ef0>
  107994:	e1a02007 	mov	r2, r7
  107998:	e5723001 	ldrb	r3, [r2, #-1]!
  10799c:	e3530030 	cmp	r3, #48	; 0x30
  1079a0:	0afffffc 	beq	107998 <.text+0x7998>
  1079a4:	e59d304c 	ldr	r3, [sp, #76]
  1079a8:	e2827001 	add	r7, r2, #1	; 0x1
  1079ac:	e58d3024 	str	r3, [sp, #36]
  1079b0:	eafffe69 	b	10735c <.text+0x735c>
  1079b4:	e59d0024 	ldr	r0, [sp, #36]
  1079b8:	e2605000 	rsb	r5, r0, #0	; 0x0
  1079bc:	e3550000 	cmp	r5, #0	; 0x0
  1079c0:	0a00004a 	beq	107af0 <.text+0x7af0>
  1079c4:	e51f1cd0 	ldr	r1, [pc, #-3280]	; 106cfc <.text+0x6cfc>
  1079c8:	e205300f 	and	r3, r5, #15	; 0xf
  1079cc:	e0811183 	add	r1, r1, r3, lsl #3
  1079d0:	e891000c 	ldmia	r1, {r2, r3}
  1079d4:	e28d000c 	add	r0, sp, #12	; 0xc
  1079d8:	e8900003 	ldmia	r0, {r0, r1}
  1079dc:	eb0009a6 	bl	10a07c <__aeabi_dmul>
  1079e0:	e1b05245 	movs	r5, r5, asr #4
  1079e4:	e1a03000 	mov	r3, r0
  1079e8:	e1a04001 	mov	r4, r1
  1079ec:	e1a08000 	mov	r8, r0
  1079f0:	e1a09001 	mov	r9, r1
  1079f4:	0a00003d 	beq	107af0 <.text+0x7af0>
  1079f8:	e51f6d00 	ldr	r6, [pc, #-3328]	; 106d00 <.text+0x6d00>
  1079fc:	e3a0a002 	mov	sl, #2	; 0x2
  107a00:	e3150001 	tst	r5, #1	; 0x1
  107a04:	e1a00003 	mov	r0, r3
  107a08:	e1a01004 	mov	r1, r4
  107a0c:	0a000004 	beq	107a24 <.text+0x7a24>
  107a10:	e896000c 	ldmia	r6, {r2, r3}
  107a14:	eb000998 	bl	10a07c <__aeabi_dmul>
  107a18:	e28aa001 	add	sl, sl, #1	; 0x1
  107a1c:	e1a03000 	mov	r3, r0
  107a20:	e1a04001 	mov	r4, r1
  107a24:	e1b050c5 	movs	r5, r5, asr #1
  107a28:	e2866008 	add	r6, r6, #8	; 0x8
  107a2c:	1afffff3 	bne	107a00 <.text+0x7a00>
  107a30:	e1a08003 	mov	r8, r3
  107a34:	e1a09004 	mov	r9, r4
  107a38:	eafffc72 	b	106c08 <.text+0x6c08>
  107a3c:	e3a02441 	mov	r2, #1090519040	; 0x41000000
  107a40:	e282260f 	add	r2, r2, #15728640	; 0xf00000
  107a44:	e3a03000 	mov	r3, #0	; 0x0
  107a48:	eb00088e 	bl	109c88 <__adddf3>
  107a4c:	eafffc32 	b	106b1c <.text+0x6b1c>
  107a50:	e5963010 	ldr	r3, [r6, #16]
  107a54:	e0863103 	add	r3, r6, r3, lsl #2
  107a58:	e5930010 	ldr	r0, [r3, #16]
  107a5c:	eb00049c 	bl	108cd4 <_hi0bits>
  107a60:	e2603020 	rsb	r3, r0, #32	; 0x20
  107a64:	eafffdc7 	b	107188 <.text+0x7188>
  107a68:	e59d0038 	ldr	r0, [sp, #56]
  107a6c:	e1a01006 	mov	r1, r6
  107a70:	eb0004d2 	bl	108dc0 <__mcmp>
  107a74:	e3500000 	cmp	r0, #0	; 0x0
  107a78:	aafffde1 	bge	107204 <.text+0x7204>
  107a7c:	e3a03000 	mov	r3, #0	; 0x0
  107a80:	e59d1038 	ldr	r1, [sp, #56]
  107a84:	e3a0200a 	mov	r2, #10	; 0xa
  107a88:	e59d0008 	ldr	r0, [sp, #8]
  107a8c:	eb0006d0 	bl	1095d4 <_multadd>
  107a90:	e59d102c 	ldr	r1, [sp, #44]
  107a94:	e59d2024 	ldr	r2, [sp, #36]
  107a98:	e3510000 	cmp	r1, #0	; 0x0
  107a9c:	059d3020 	ldreq	r3, [sp, #32]
  107aa0:	e2422001 	sub	r2, r2, #1	; 0x1
  107aa4:	e58d0038 	str	r0, [sp, #56]
  107aa8:	e58d2024 	str	r2, [sp, #36]
  107aac:	058d301c 	streq	r3, [sp, #28]
  107ab0:	0afffdd3 	beq	107204 <.text+0x7204>
  107ab4:	e1a0100a 	mov	r1, sl
  107ab8:	e59d0008 	ldr	r0, [sp, #8]
  107abc:	e3a0200a 	mov	r2, #10	; 0xa
  107ac0:	e3a03000 	mov	r3, #0	; 0x0
  107ac4:	eb0006c2 	bl	1095d4 <_multadd>
  107ac8:	e59dc020 	ldr	ip, [sp, #32]
  107acc:	e1a0a000 	mov	sl, r0
  107ad0:	e58dc01c 	str	ip, [sp, #28]
  107ad4:	eafffdca 	b	107204 <.text+0x7204>
  107ad8:	e59d1038 	ldr	r1, [sp, #56]
  107adc:	e59d2018 	ldr	r2, [sp, #24]
  107ae0:	e59d0008 	ldr	r0, [sp, #8]
  107ae4:	eb0006ec 	bl	10969c <_pow5mult>
  107ae8:	e58d0038 	str	r0, [sp, #56]
  107aec:	eafffd91 	b	107138 <.text+0x7138>
  107af0:	e3a0a002 	mov	sl, #2	; 0x2
  107af4:	eafffc43 	b	106c08 <.text+0x6c08>
  107af8:	e59d1038 	ldr	r1, [sp, #56]
  107afc:	e59d0008 	ldr	r0, [sp, #8]
  107b00:	eb0006e5 	bl	10969c <_pow5mult>
  107b04:	e58d0038 	str	r0, [sp, #56]
  107b08:	eafffd8a 	b	107138 <.text+0x7138>
  107b0c:	e59d1034 	ldr	r1, [sp, #52]
  107b10:	e3510000 	cmp	r1, #0	; 0x0
  107b14:	059d3054 	ldreq	r3, [sp, #84]
  107b18:	12823e43 	addne	r3, r2, #1072	; 0x430
  107b1c:	159d7014 	ldrne	r7, [sp, #20]
  107b20:	159d5018 	ldrne	r5, [sp, #24]
  107b24:	059d7014 	ldreq	r7, [sp, #20]
  107b28:	059d5018 	ldreq	r5, [sp, #24]
  107b2c:	12833003 	addne	r3, r3, #3	; 0x3
  107b30:	02633036 	rsbeq	r3, r3, #54	; 0x36
  107b34:	eafffe30 	b	1073fc <.text+0x73fc>
  107b38:	e2833001 	add	r3, r3, #1	; 0x1
  107b3c:	e4c23001 	strb	r3, [r2], #1
  107b40:	e1a07002 	mov	r7, r2
  107b44:	eafffdf8 	b	10732c <.text+0x732c>
  107b48:	e35a0000 	cmp	sl, #0	; 0x0
  107b4c:	da00000b 	ble	107b80 <.text+0x7b80>
  107b50:	e59d1038 	ldr	r1, [sp, #56]
  107b54:	e3a02001 	mov	r2, #1	; 0x1
  107b58:	e59d0008 	ldr	r0, [sp, #8]
  107b5c:	eb0005e5 	bl	1092f8 <_lshift>
  107b60:	e1a01006 	mov	r1, r6
  107b64:	e58d0038 	str	r0, [sp, #56]
  107b68:	eb000494 	bl	108dc0 <__mcmp>
  107b6c:	e3500000 	cmp	r0, #0	; 0x0
  107b70:	da000022 	ble	107c00 <.text+0x7c00>
  107b74:	e2899001 	add	r9, r9, #1	; 0x1
  107b78:	e359003a 	cmp	r9, #58	; 0x3a
  107b7c:	0a000017 	beq	107be0 <.text+0x7be0>
  107b80:	e4c59001 	strb	r9, [r5], #1
  107b84:	e1a07005 	mov	r7, r5
  107b88:	eafffde7 	b	10732c <.text+0x732c>
  107b8c:	e59a1004 	ldr	r1, [sl, #4]
  107b90:	e59d0008 	ldr	r0, [sp, #8]
  107b94:	eb000517 	bl	108ff8 <_Balloc>
  107b98:	e59a2010 	ldr	r2, [sl, #16]
  107b9c:	e1a02102 	mov	r2, r2, lsl #2
  107ba0:	e1a04000 	mov	r4, r0
  107ba4:	e2822008 	add	r2, r2, #8	; 0x8
  107ba8:	e28a100c 	add	r1, sl, #12	; 0xc
  107bac:	e280000c 	add	r0, r0, #12	; 0xc
  107bb0:	eb0003da 	bl	108b20 <memcpy>
  107bb4:	e59d0008 	ldr	r0, [sp, #8]
  107bb8:	e1a01004 	mov	r1, r4
  107bbc:	e3a02001 	mov	r2, #1	; 0x1
  107bc0:	eb0005cc 	bl	1092f8 <_lshift>
  107bc4:	e1a0b000 	mov	fp, r0
  107bc8:	eafffea0 	b	107650 <.text+0x7650>
  107bcc:	e3590039 	cmp	r9, #57	; 0x39
  107bd0:	12893001 	addne	r3, r9, #1	; 0x1
  107bd4:	14c53001 	strneb	r3, [r5], #1
  107bd8:	11a07005 	movne	r7, r5
  107bdc:	1afffdd2 	bne	10732c <.text+0x732c>
  107be0:	e3a03039 	mov	r3, #57	; 0x39
  107be4:	e4c53001 	strb	r3, [r5], #1
  107be8:	eafffef7 	b	1077cc <.text+0x77cc>
  107bec:	e3590039 	cmp	r9, #57	; 0x39
  107bf0:	0afffffa 	beq	107be0 <.text+0x7be0>
  107bf4:	e3580000 	cmp	r8, #0	; 0x0
  107bf8:	c2899001 	addgt	r9, r9, #1	; 0x1
  107bfc:	eaffffdf 	b	107b80 <.text+0x7b80>
  107c00:	1affffde 	bne	107b80 <.text+0x7b80>
  107c04:	e3190001 	tst	r9, #1	; 0x1
  107c08:	0affffdc 	beq	107b80 <.text+0x7b80>
  107c0c:	eaffffd8 	b	107b74 <.text+0x7b74>
  107c10:	e59de01c 	ldr	lr, [sp, #28]
  107c14:	e1a05000 	mov	r5, r0
  107c18:	e35e000e 	cmp	lr, #14	; 0xe
  107c1c:	83a04000 	movhi	r4, #0	; 0x0
  107c20:	93a04001 	movls	r4, #1	; 0x1
  107c24:	eafffbce 	b	106b64 <.text+0x6b64>

00107c28 <__errno>:
  107c28:	e59f3004 	ldr	r3, [pc, #4]	; 107c34 <.text+0x7c34>
  107c2c:	e5930000 	ldr	r0, [r3]
  107c30:	e12fff1e 	bx	lr
  107c34:	00200184 	eoreq	r0, r0, r4, lsl #3

00107c38 <fflush>:
  107c38:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  107c3c:	e2506000 	subs	r6, r0, #0	; 0x0
  107c40:	0a00002c 	beq	107cf8 <fflush+0xc0>
  107c44:	e59f30c0 	ldr	r3, [pc, #192]	; 107d0c <.text+0x7d0c>
  107c48:	e5930000 	ldr	r0, [r3]
  107c4c:	e3500000 	cmp	r0, #0	; 0x0
  107c50:	0a000002 	beq	107c60 <fflush+0x28>
  107c54:	e5903038 	ldr	r3, [r0, #56]
  107c58:	e3530000 	cmp	r3, #0	; 0x0
  107c5c:	0a000023 	beq	107cf0 <fflush+0xb8>
  107c60:	e1d610fc 	ldrsh	r1, [r6, #12]
  107c64:	e3110008 	tst	r1, #8	; 0x8
  107c68:	0a00001c 	beq	107ce0 <fflush+0xa8>
  107c6c:	e5965010 	ldr	r5, [r6, #16]
  107c70:	e3550000 	cmp	r5, #0	; 0x0
  107c74:	0a000019 	beq	107ce0 <fflush+0xa8>
  107c78:	e5963000 	ldr	r3, [r6]
  107c7c:	e3110003 	tst	r1, #3	; 0x3
  107c80:	e0654003 	rsb	r4, r5, r3
  107c84:	e5865000 	str	r5, [r6]
  107c88:	13a03000 	movne	r3, #0	; 0x0
  107c8c:	0a000015 	beq	107ce8 <fflush+0xb0>
  107c90:	e3540000 	cmp	r4, #0	; 0x0
  107c94:	e5863008 	str	r3, [r6, #8]
  107c98:	ca000002 	bgt	107ca8 <fflush+0x70>
  107c9c:	ea00000f 	b	107ce0 <fflush+0xa8>
  107ca0:	e3540000 	cmp	r4, #0	; 0x0
  107ca4:	da00000d 	ble	107ce0 <fflush+0xa8>
  107ca8:	e1a01005 	mov	r1, r5
  107cac:	e1a02004 	mov	r2, r4
  107cb0:	e596001c 	ldr	r0, [r6, #28]
  107cb4:	e1a0e00f 	mov	lr, pc
  107cb8:	e596f024 	ldr	pc, [r6, #36]
  107cbc:	e3500000 	cmp	r0, #0	; 0x0
  107cc0:	e0855000 	add	r5, r5, r0
  107cc4:	e0604004 	rsb	r4, r0, r4
  107cc8:	cafffff4 	bgt	107ca0 <fflush+0x68>
  107ccc:	e1d630bc 	ldrh	r3, [r6, #12]
  107cd0:	e3e00000 	mvn	r0, #0	; 0x0
  107cd4:	e3833040 	orr	r3, r3, #64	; 0x40
  107cd8:	e1c630bc 	strh	r3, [r6, #12]
  107cdc:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  107ce0:	e3a00000 	mov	r0, #0	; 0x0
  107ce4:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  107ce8:	e5963014 	ldr	r3, [r6, #20]
  107cec:	eaffffe7 	b	107c90 <fflush+0x58>
  107cf0:	eb000023 	bl	107d84 <__sinit>
  107cf4:	eaffffd9 	b	107c60 <fflush+0x28>
  107cf8:	e59f3010 	ldr	r3, [pc, #16]	; 107d10 <.text+0x7d10>
  107cfc:	e59f1010 	ldr	r1, [pc, #16]	; 107d14 <.text+0x7d14>
  107d00:	e5930000 	ldr	r0, [r3]
  107d04:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
  107d08:	ea0002a4 	b	1087a0 <_fwalk>
  107d0c:	00200184 	eoreq	r0, r0, r4, lsl #3
  107d10:	0010a714 	andeqs	sl, r0, r4, lsl r7
  107d14:	00107c38 	andeqs	r7, r0, r8, lsr ip

00107d18 <std>:
  107d18:	e59f3044 	ldr	r3, [pc, #68]	; 107d64 <.text+0x7d64>
  107d1c:	e580302c 	str	r3, [r0, #44]
  107d20:	e59f3040 	ldr	r3, [pc, #64]	; 107d68 <.text+0x7d68>
  107d24:	e1c020be 	strh	r2, [r0, #14]
  107d28:	e5803020 	str	r3, [r0, #32]
  107d2c:	e59f2038 	ldr	r2, [pc, #56]	; 107d6c <.text+0x7d6c>
  107d30:	e59f3038 	ldr	r3, [pc, #56]	; 107d70 <.text+0x7d70>
  107d34:	e3a0c000 	mov	ip, #0	; 0x0
  107d38:	e1c010bc 	strh	r1, [r0, #12]
  107d3c:	e580c018 	str	ip, [r0, #24]
  107d40:	e5802024 	str	r2, [r0, #36]
  107d44:	e5803028 	str	r3, [r0, #40]
  107d48:	e580c000 	str	ip, [r0]
  107d4c:	e580c004 	str	ip, [r0, #4]
  107d50:	e580c008 	str	ip, [r0, #8]
  107d54:	e580c010 	str	ip, [r0, #16]
  107d58:	e580c014 	str	ip, [r0, #20]
  107d5c:	e580001c 	str	r0, [r0, #28]
  107d60:	e12fff1e 	bx	lr
  107d64:	001098e4 	andeqs	r9, r0, r4, ror #17
  107d68:	001099a0 	andeqs	r9, r0, r0, lsr #19
  107d6c:	00109940 	andeqs	r9, r0, r0, asr #18
  107d70:	001098f8 	ldreqsh	r9, [r0], -r8

00107d74 <__sfp_lock_acquire>:
  107d74:	e12fff1e 	bx	lr

00107d78 <__sfp_lock_release>:
  107d78:	e12fff1e 	bx	lr

00107d7c <__sinit_lock_acquire>:
  107d7c:	e12fff1e 	bx	lr

00107d80 <__sinit_lock_release>:
  107d80:	e12fff1e 	bx	lr

00107d84 <__sinit>:
  107d84:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  107d88:	e590e038 	ldr	lr, [r0, #56]
  107d8c:	e25e2000 	subs	r2, lr, #0	; 0x0
  107d90:	e3a06001 	mov	r6, #1	; 0x1
  107d94:	e3a01004 	mov	r1, #4	; 0x4
  107d98:	e1a04000 	mov	r4, r0
  107d9c:	e2805fbb 	add	r5, r0, #748	; 0x2ec
  107da0:	e1a03000 	mov	r3, r0
  107da4:	18bd8070 	ldmneia	sp!, {r4, r5, r6, pc}
  107da8:	e59f0048 	ldr	r0, [pc, #72]	; 107df8 <.text+0x7df8>
  107dac:	e3a0c003 	mov	ip, #3	; 0x3
  107db0:	e584003c 	str	r0, [r4, #60]
  107db4:	e584c2e4 	str	ip, [r4, #740]
  107db8:	e584e2e0 	str	lr, [r4, #736]
  107dbc:	e5940004 	ldr	r0, [r4, #4]
  107dc0:	e58452e8 	str	r5, [r4, #744]
  107dc4:	e5846038 	str	r6, [r4, #56]
  107dc8:	ebffffd2 	bl	107d18 <std>
  107dcc:	e1a02006 	mov	r2, r6
  107dd0:	e5940008 	ldr	r0, [r4, #8]
  107dd4:	e1a03004 	mov	r3, r4
  107dd8:	e3a01009 	mov	r1, #9	; 0x9
  107ddc:	ebffffcd 	bl	107d18 <std>
  107de0:	e594000c 	ldr	r0, [r4, #12]
  107de4:	e1a03004 	mov	r3, r4
  107de8:	e3a0100a 	mov	r1, #10	; 0xa
  107dec:	e3a02002 	mov	r2, #2	; 0x2
  107df0:	e8bd4070 	ldmia	sp!, {r4, r5, r6, lr}
  107df4:	eaffffc7 	b	107d18 <std>
  107df8:	00107e3c 	andeqs	r7, r0, ip, lsr lr

00107dfc <__fp_lock>:
  107dfc:	e3a00000 	mov	r0, #0	; 0x0
  107e00:	e12fff1e 	bx	lr

00107e04 <__fp_unlock>:
  107e04:	e3a00000 	mov	r0, #0	; 0x0
  107e08:	e12fff1e 	bx	lr

00107e0c <__fp_unlock_all>:
  107e0c:	e59f3008 	ldr	r3, [pc, #8]	; 107e1c <.text+0x7e1c>
  107e10:	e59f1008 	ldr	r1, [pc, #8]	; 107e20 <.text+0x7e20>
  107e14:	e5930000 	ldr	r0, [r3]
  107e18:	ea000260 	b	1087a0 <_fwalk>
  107e1c:	00200184 	eoreq	r0, r0, r4, lsl #3
  107e20:	00107e04 	andeqs	r7, r0, r4, lsl #28

00107e24 <__fp_lock_all>:
  107e24:	e59f3008 	ldr	r3, [pc, #8]	; 107e34 <.text+0x7e34>
  107e28:	e59f1008 	ldr	r1, [pc, #8]	; 107e38 <.text+0x7e38>
  107e2c:	e5930000 	ldr	r0, [r3]
  107e30:	ea00025a 	b	1087a0 <_fwalk>
  107e34:	00200184 	eoreq	r0, r0, r4, lsl #3
  107e38:	00107dfc 	ldreqsh	r7, [r0], -ip

00107e3c <_cleanup_r>:
  107e3c:	e59f1000 	ldr	r1, [pc, #0]	; 107e44 <.text+0x7e44>
  107e40:	ea000256 	b	1087a0 <_fwalk>
  107e44:	00109c68 	andeqs	r9, r0, r8, ror #24

00107e48 <_cleanup>:
  107e48:	e59f3004 	ldr	r3, [pc, #4]	; 107e54 <.text+0x7e54>
  107e4c:	e5930000 	ldr	r0, [r3]
  107e50:	eafffff9 	b	107e3c <_cleanup_r>
  107e54:	0010a714 	andeqs	sl, r0, r4, lsl r7

00107e58 <__sfmoreglue>:
  107e58:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  107e5c:	e0814081 	add	r4, r1, r1, lsl #1
  107e60:	e0614184 	rsb	r4, r1, r4, lsl #3
  107e64:	e1a04104 	mov	r4, r4, lsl #2
  107e68:	e1a06001 	mov	r6, r1
  107e6c:	e284100c 	add	r1, r4, #12	; 0xc
  107e70:	ebffe9f0 	bl	102638 <_malloc_r>
  107e74:	e250c000 	subs	ip, r0, #0	; 0x0
  107e78:	e3a0e000 	mov	lr, #0	; 0x0
  107e7c:	e28c300c 	add	r3, ip, #12	; 0xc
  107e80:	e1a0500c 	mov	r5, ip
  107e84:	e1a00003 	mov	r0, r3
  107e88:	e1a0100e 	mov	r1, lr
  107e8c:	e1a02004 	mov	r2, r4
  107e90:	158c6004 	strne	r6, [ip, #4]
  107e94:	158ce000 	strne	lr, [ip]
  107e98:	158c3008 	strne	r3, [ip, #8]
  107e9c:	1bffebc1 	blne	102da8 <memset>
  107ea0:	e1a00005 	mov	r0, r5
  107ea4:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}

00107ea8 <__sfp>:
  107ea8:	e59f30d0 	ldr	r3, [pc, #208]	; 107f80 <.text+0x7f80>
  107eac:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  107eb0:	e5934000 	ldr	r4, [r3]
  107eb4:	e5942038 	ldr	r2, [r4, #56]
  107eb8:	e3520000 	cmp	r2, #0	; 0x0
  107ebc:	e1a05000 	mov	r5, r0
  107ec0:	0a000021 	beq	107f4c <__sfp+0xa4>
  107ec4:	e2844e2e 	add	r4, r4, #736	; 0x2e0
  107ec8:	e5942004 	ldr	r2, [r4, #4]
  107ecc:	e3520001 	cmp	r2, #1	; 0x1
  107ed0:	e5940008 	ldr	r0, [r4, #8]
  107ed4:	5a000004 	bpl	107eec <__sfp+0x44>
  107ed8:	ea000016 	b	107f38 <__sfp+0x90>
  107edc:	e3520001 	cmp	r2, #1	; 0x1
  107ee0:	e280005c 	add	r0, r0, #92	; 0x5c
  107ee4:	e2422001 	sub	r2, r2, #1	; 0x1
  107ee8:	0a000012 	beq	107f38 <__sfp+0x90>
  107eec:	e1d030fc 	ldrsh	r3, [r0, #12]
  107ef0:	e3530000 	cmp	r3, #0	; 0x0
  107ef4:	1afffff8 	bne	107edc <__sfp+0x34>
  107ef8:	e3a03000 	mov	r3, #0	; 0x0
  107efc:	e5803048 	str	r3, [r0, #72]
  107f00:	e5803000 	str	r3, [r0]
  107f04:	e5803008 	str	r3, [r0, #8]
  107f08:	e5803004 	str	r3, [r0, #4]
  107f0c:	e5803010 	str	r3, [r0, #16]
  107f10:	e5803014 	str	r3, [r0, #20]
  107f14:	e5803018 	str	r3, [r0, #24]
  107f18:	e5803030 	str	r3, [r0, #48]
  107f1c:	e5803034 	str	r3, [r0, #52]
  107f20:	e5803044 	str	r3, [r0, #68]
  107f24:	e3e03000 	mvn	r3, #0	; 0x0
  107f28:	e1c030be 	strh	r3, [r0, #14]
  107f2c:	e3a03001 	mov	r3, #1	; 0x1
  107f30:	e1c030bc 	strh	r3, [r0, #12]
  107f34:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  107f38:	e5940000 	ldr	r0, [r4]
  107f3c:	e3500000 	cmp	r0, #0	; 0x0
  107f40:	0a000004 	beq	107f58 <__sfp+0xb0>
  107f44:	e1a04000 	mov	r4, r0
  107f48:	eaffffde 	b	107ec8 <__sfp+0x20>
  107f4c:	e1a00004 	mov	r0, r4
  107f50:	ebffff8b 	bl	107d84 <__sinit>
  107f54:	eaffffda 	b	107ec4 <__sfp+0x1c>
  107f58:	e1a00005 	mov	r0, r5
  107f5c:	e3a01004 	mov	r1, #4	; 0x4
  107f60:	ebffffbc 	bl	107e58 <__sfmoreglue>
  107f64:	e3500000 	cmp	r0, #0	; 0x0
  107f68:	e5840000 	str	r0, [r4]
  107f6c:	1afffff4 	bne	107f44 <__sfp+0x9c>
  107f70:	e3a0300c 	mov	r3, #12	; 0xc
  107f74:	e3a00000 	mov	r0, #0	; 0x0
  107f78:	e5853000 	str	r3, [r5]
  107f7c:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  107f80:	0010a714 	andeqs	sl, r0, r4, lsl r7

00107f84 <_malloc_trim_r>:
  107f84:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  107f88:	e59f70e4 	ldr	r7, [pc, #228]	; 108074 <.text+0x8074>
  107f8c:	e1a04001 	mov	r4, r1
  107f90:	e1a05000 	mov	r5, r0
  107f94:	ebffeba9 	bl	102e40 <__malloc_lock>
  107f98:	e5973008 	ldr	r3, [r7, #8]
  107f9c:	e5932004 	ldr	r2, [r3, #4]
  107fa0:	e3c26003 	bic	r6, r2, #3	; 0x3
  107fa4:	e0644006 	rsb	r4, r4, r6
  107fa8:	e2844efe 	add	r4, r4, #4064	; 0xfe0
  107fac:	e284400f 	add	r4, r4, #15	; 0xf
  107fb0:	e1a04624 	mov	r4, r4, lsr #12
  107fb4:	e2444001 	sub	r4, r4, #1	; 0x1
  107fb8:	e1a04604 	mov	r4, r4, lsl #12
  107fbc:	e3540a01 	cmp	r4, #4096	; 0x1000
  107fc0:	e3a01000 	mov	r1, #0	; 0x0
  107fc4:	e1a00005 	mov	r0, r5
  107fc8:	ba000006 	blt	107fe8 <_malloc_trim_r+0x64>
  107fcc:	ebffe10b 	bl	100400 <_sbrk_r>
  107fd0:	e5973008 	ldr	r3, [r7, #8]
  107fd4:	e0863003 	add	r3, r6, r3
  107fd8:	e1500003 	cmp	r0, r3
  107fdc:	e2641000 	rsb	r1, r4, #0	; 0x0
  107fe0:	e1a00005 	mov	r0, r5
  107fe4:	0a000002 	beq	107ff4 <_malloc_trim_r+0x70>
  107fe8:	ebffeb95 	bl	102e44 <__malloc_unlock>
  107fec:	e3a00000 	mov	r0, #0	; 0x0
  107ff0:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  107ff4:	ebffe101 	bl	100400 <_sbrk_r>
  107ff8:	e0643006 	rsb	r3, r4, r6
  107ffc:	e3700001 	cmn	r0, #1	; 0x1
  108000:	e3a01000 	mov	r1, #0	; 0x0
  108004:	e59fe06c 	ldr	lr, [pc, #108]	; 108078 <.text+0x8078>
  108008:	e383c001 	orr	ip, r3, #1	; 0x1
  10800c:	e1a00005 	mov	r0, r5
  108010:	0a000008 	beq	108038 <_malloc_trim_r+0xb4>
  108014:	e59e3000 	ldr	r3, [lr]
  108018:	e5972008 	ldr	r2, [r7, #8]
  10801c:	e0643003 	rsb	r3, r4, r3
  108020:	e1a00005 	mov	r0, r5
  108024:	e582c004 	str	ip, [r2, #4]
  108028:	e58e3000 	str	r3, [lr]
  10802c:	ebffeb84 	bl	102e44 <__malloc_unlock>
  108030:	e3a00001 	mov	r0, #1	; 0x1
  108034:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  108038:	ebffe0f0 	bl	100400 <_sbrk_r>
  10803c:	e5971008 	ldr	r1, [r7, #8]
  108040:	e1a0e000 	mov	lr, r0
  108044:	e061300e 	rsb	r3, r1, lr
  108048:	e353000f 	cmp	r3, #15	; 0xf
  10804c:	e1a00005 	mov	r0, r5
  108050:	e383c001 	orr	ip, r3, #1	; 0x1
  108054:	daffffe3 	ble	107fe8 <_malloc_trim_r+0x64>
  108058:	e59f301c 	ldr	r3, [pc, #28]	; 10807c <.text+0x807c>
  10805c:	e5932000 	ldr	r2, [r3]
  108060:	e59f3010 	ldr	r3, [pc, #16]	; 108078 <.text+0x8078>
  108064:	e062200e 	rsb	r2, r2, lr
  108068:	e5832000 	str	r2, [r3]
  10806c:	e581c004 	str	ip, [r1, #4]
  108070:	eaffffdc 	b	107fe8 <_malloc_trim_r+0x64>
  108074:	00200588 	eoreq	r0, r0, r8, lsl #11
  108078:	00200b04 	eoreq	r0, r0, r4, lsl #22
  10807c:	00200994 	mlaeq	r0, r4, r9, r0

00108080 <_free_r>:
  108080:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  108084:	e2514000 	subs	r4, r1, #0	; 0x0
  108088:	e1a08000 	mov	r8, r0
  10808c:	08bd85f0 	ldmeqia	sp!, {r4, r5, r6, r7, r8, sl, pc}
  108090:	ebffeb6a 	bl	102e40 <__malloc_lock>
  108094:	e244e008 	sub	lr, r4, #8	; 0x8
  108098:	e59e0004 	ldr	r0, [lr, #4]
  10809c:	e59f726c 	ldr	r7, [pc, #620]	; 108310 <.text+0x8310>
  1080a0:	e3c01001 	bic	r1, r0, #1	; 0x1
  1080a4:	e08ec001 	add	ip, lr, r1
  1080a8:	e5973008 	ldr	r3, [r7, #8]
  1080ac:	e59c2004 	ldr	r2, [ip, #4]
  1080b0:	e15c0003 	cmp	ip, r3
  1080b4:	e3c25003 	bic	r5, r2, #3	; 0x3
  1080b8:	e1a0a007 	mov	sl, r7
  1080bc:	0a000077 	beq	1082a0 <_free_r+0x220>
  1080c0:	e2106001 	ands	r6, r0, #1	; 0x1
  1080c4:	e58c5004 	str	r5, [ip, #4]
  1080c8:	13a00000 	movne	r0, #0	; 0x0
  1080cc:	0a000018 	beq	108134 <_free_r+0xb4>
  1080d0:	e08c3005 	add	r3, ip, r5
  1080d4:	e5932004 	ldr	r2, [r3, #4]
  1080d8:	e3120001 	tst	r2, #1	; 0x1
  1080dc:	0a000007 	beq	108100 <_free_r+0x80>
  1080e0:	e3813001 	orr	r3, r1, #1	; 0x1
  1080e4:	e3500000 	cmp	r0, #0	; 0x0
  1080e8:	e58e3004 	str	r3, [lr, #4]
  1080ec:	e781100e 	str	r1, [r1, lr]
  1080f0:	0a00001f 	beq	108174 <_free_r+0xf4>
  1080f4:	e1a00008 	mov	r0, r8
  1080f8:	e8bd45f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, lr}
  1080fc:	eaffeb50 	b	102e44 <__malloc_unlock>
  108100:	e3500000 	cmp	r0, #0	; 0x0
  108104:	e0811005 	add	r1, r1, r5
  108108:	159c2008 	ldrne	r2, [ip, #8]
  10810c:	0a00004a 	beq	10823c <_free_r+0x1bc>
  108110:	e59c300c 	ldr	r3, [ip, #12]
  108114:	e3500000 	cmp	r0, #0	; 0x0
  108118:	e5832008 	str	r2, [r3, #8]
  10811c:	e582300c 	str	r3, [r2, #12]
  108120:	e3813001 	orr	r3, r1, #1	; 0x1
  108124:	e58e3004 	str	r3, [lr, #4]
  108128:	e781100e 	str	r1, [r1, lr]
  10812c:	1afffff0 	bne	1080f4 <_free_r+0x74>
  108130:	ea00000f 	b	108174 <_free_r+0xf4>
  108134:	e5142008 	ldr	r2, [r4, #-8]
  108138:	e062e00e 	rsb	lr, r2, lr
  10813c:	e59e0008 	ldr	r0, [lr, #8]
  108140:	e2873008 	add	r3, r7, #8	; 0x8
  108144:	e1500003 	cmp	r0, r3
  108148:	159e300c 	ldrne	r3, [lr, #12]
  10814c:	15830008 	strne	r0, [r3, #8]
  108150:	1580300c 	strne	r3, [r0, #12]
  108154:	e08c3005 	add	r3, ip, r5
  108158:	e0811002 	add	r1, r1, r2
  10815c:	e5932004 	ldr	r2, [r3, #4]
  108160:	03a00001 	moveq	r0, #1	; 0x1
  108164:	11a00006 	movne	r0, r6
  108168:	e3120001 	tst	r2, #1	; 0x1
  10816c:	1affffdb 	bne	1080e0 <_free_r+0x60>
  108170:	eaffffe2 	b	108100 <_free_r+0x80>
  108174:	e3510c02 	cmp	r1, #512	; 0x200
  108178:	3a00003b 	bcc	10826c <_free_r+0x1ec>
  10817c:	e1b024a1 	movs	r2, r1, lsr #9
  108180:	01a021a1 	moveq	r2, r1, lsr #3
  108184:	01a03182 	moveq	r3, r2, lsl #3
  108188:	0a00001a 	beq	1081f8 <_free_r+0x178>
  10818c:	e3520004 	cmp	r2, #4	; 0x4
  108190:	91a03321 	movls	r3, r1, lsr #6
  108194:	92832038 	addls	r2, r3, #56	; 0x38
  108198:	91a03182 	movls	r3, r2, lsl #3
  10819c:	9a000015 	bls	1081f8 <_free_r+0x178>
  1081a0:	e3520014 	cmp	r2, #20	; 0x14
  1081a4:	9282205b 	addls	r2, r2, #91	; 0x5b
  1081a8:	91a03182 	movls	r3, r2, lsl #3
  1081ac:	9a000011 	bls	1081f8 <_free_r+0x178>
  1081b0:	e3520054 	cmp	r2, #84	; 0x54
  1081b4:	91a03621 	movls	r3, r1, lsr #12
  1081b8:	9283206e 	addls	r2, r3, #110	; 0x6e
  1081bc:	91a03182 	movls	r3, r2, lsl #3
  1081c0:	9a00000c 	bls	1081f8 <_free_r+0x178>
  1081c4:	e3520f55 	cmp	r2, #340	; 0x154
  1081c8:	91a037a1 	movls	r3, r1, lsr #15
  1081cc:	92832077 	addls	r2, r3, #119	; 0x77
  1081d0:	91a03182 	movls	r3, r2, lsl #3
  1081d4:	9a000007 	bls	1081f8 <_free_r+0x178>
  1081d8:	e3a03e55 	mov	r3, #1360	; 0x550
  1081dc:	e2833004 	add	r3, r3, #4	; 0x4
  1081e0:	e1520003 	cmp	r2, r3
  1081e4:	91a03921 	movls	r3, r1, lsr #18
  1081e8:	9283207c 	addls	r2, r3, #124	; 0x7c
  1081ec:	83a0207e 	movhi	r2, #126	; 0x7e
  1081f0:	82433f59 	subhi	r3, r3, #356	; 0x164
  1081f4:	91a03182 	movls	r3, r2, lsl #3
  1081f8:	e083c00a 	add	ip, r3, sl
  1081fc:	e59c0008 	ldr	r0, [ip, #8]
  108200:	e15c0000 	cmp	ip, r0
  108204:	0a00003b 	beq	1082f8 <_free_r+0x278>
  108208:	e5903004 	ldr	r3, [r0, #4]
  10820c:	e3c33003 	bic	r3, r3, #3	; 0x3
  108210:	e1510003 	cmp	r1, r3
  108214:	2a000002 	bcs	108224 <_free_r+0x1a4>
  108218:	e5900008 	ldr	r0, [r0, #8]
  10821c:	e15c0000 	cmp	ip, r0
  108220:	1afffff8 	bne	108208 <_free_r+0x188>
  108224:	e590c00c 	ldr	ip, [r0, #12]
  108228:	e58ec00c 	str	ip, [lr, #12]
  10822c:	e58e0008 	str	r0, [lr, #8]
  108230:	e580e00c 	str	lr, [r0, #12]
  108234:	e58ce008 	str	lr, [ip, #8]
  108238:	eaffffad 	b	1080f4 <_free_r+0x74>
  10823c:	e59c2008 	ldr	r2, [ip, #8]
  108240:	e59f30cc 	ldr	r3, [pc, #204]	; 108314 <.text+0x8314>
  108244:	e1520003 	cmp	r2, r3
  108248:	1affffb0 	bne	108110 <_free_r+0x90>
  10824c:	e3813001 	orr	r3, r1, #1	; 0x1
  108250:	e582e00c 	str	lr, [r2, #12]
  108254:	e582e008 	str	lr, [r2, #8]
  108258:	e781100e 	str	r1, [r1, lr]
  10825c:	e58e3004 	str	r3, [lr, #4]
  108260:	e58e2008 	str	r2, [lr, #8]
  108264:	e58e200c 	str	r2, [lr, #12]
  108268:	eaffffa1 	b	1080f4 <_free_r+0x74>
  10826c:	e1a011a1 	mov	r1, r1, lsr #3
  108270:	e5972004 	ldr	r2, [r7, #4]
  108274:	e1a00121 	mov	r0, r1, lsr #2
  108278:	e3a03001 	mov	r3, #1	; 0x1
  10827c:	e1822013 	orr	r2, r2, r3, lsl r0
  108280:	e08a1181 	add	r1, sl, r1, lsl #3
  108284:	e5913008 	ldr	r3, [r1, #8]
  108288:	e58e100c 	str	r1, [lr, #12]
  10828c:	e58e3008 	str	r3, [lr, #8]
  108290:	e5872004 	str	r2, [r7, #4]
  108294:	e583e00c 	str	lr, [r3, #12]
  108298:	e581e008 	str	lr, [r1, #8]
  10829c:	eaffff94 	b	1080f4 <_free_r+0x74>
  1082a0:	e3100001 	tst	r0, #1	; 0x1
  1082a4:	e0810005 	add	r0, r1, r5
  1082a8:	1a000006 	bne	1082c8 <_free_r+0x248>
  1082ac:	e5141008 	ldr	r1, [r4, #-8]
  1082b0:	e061e00e 	rsb	lr, r1, lr
  1082b4:	e59e200c 	ldr	r2, [lr, #12]
  1082b8:	e59e3008 	ldr	r3, [lr, #8]
  1082bc:	e5823008 	str	r3, [r2, #8]
  1082c0:	e583200c 	str	r2, [r3, #12]
  1082c4:	e0800001 	add	r0, r0, r1
  1082c8:	e59f3048 	ldr	r3, [pc, #72]	; 108318 <.text+0x8318>
  1082cc:	e5932000 	ldr	r2, [r3]
  1082d0:	e3803001 	orr	r3, r0, #1	; 0x1
  1082d4:	e1500002 	cmp	r0, r2
  1082d8:	e587e008 	str	lr, [r7, #8]
  1082dc:	e58e3004 	str	r3, [lr, #4]
  1082e0:	3affff83 	bcc	1080f4 <_free_r+0x74>
  1082e4:	e59f3030 	ldr	r3, [pc, #48]	; 10831c <.text+0x831c>
  1082e8:	e1a00008 	mov	r0, r8
  1082ec:	e5931000 	ldr	r1, [r3]
  1082f0:	ebffff23 	bl	107f84 <_malloc_trim_r>
  1082f4:	eaffff7e 	b	1080f4 <_free_r+0x74>
  1082f8:	e5973004 	ldr	r3, [r7, #4]
  1082fc:	e1a01122 	mov	r1, r2, lsr #2
  108300:	e3a02001 	mov	r2, #1	; 0x1
  108304:	e1833112 	orr	r3, r3, r2, lsl r1
  108308:	e5873004 	str	r3, [r7, #4]
  10830c:	eaffffc5 	b	108228 <_free_r+0x1a8>
  108310:	00200588 	eoreq	r0, r0, r8, lsl #11
  108314:	00200590 	mlaeq	r0, r0, r5, r0
  108318:	00200990 	mlaeq	r0, r0, r9, r0
  10831c:	00200af8 	streqd	r0, [r0], -r8

00108320 <__sfvwrite>:
  108320:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  108324:	e5913008 	ldr	r3, [r1, #8]
  108328:	e3530000 	cmp	r3, #0	; 0x0
  10832c:	e24dd004 	sub	sp, sp, #4	; 0x4
  108330:	e1a0a001 	mov	sl, r1
  108334:	e1a06000 	mov	r6, r0
  108338:	0a00001c 	beq	1083b0 <__sfvwrite+0x90>
  10833c:	e1d010bc 	ldrh	r1, [r0, #12]
  108340:	e3110008 	tst	r1, #8	; 0x8
  108344:	0a0000e8 	beq	1086ec <__sfvwrite+0x3cc>
  108348:	e5903010 	ldr	r3, [r0, #16]
  10834c:	e3530000 	cmp	r3, #0	; 0x0
  108350:	0a0000e5 	beq	1086ec <__sfvwrite+0x3cc>
  108354:	e3110002 	tst	r1, #2	; 0x2
  108358:	13a04000 	movne	r4, #0	; 0x0
  10835c:	e59a8000 	ldr	r8, [sl]
  108360:	11a05004 	movne	r5, r4
  108364:	0a000018 	beq	1083cc <__sfvwrite+0xac>
  108368:	e3540000 	cmp	r4, #0	; 0x0
  10836c:	e1a01005 	mov	r1, r5
  108370:	0a000011 	beq	1083bc <__sfvwrite+0x9c>
  108374:	e3540b01 	cmp	r4, #1024	; 0x400
  108378:	31a02004 	movcc	r2, r4
  10837c:	23a02b01 	movcs	r2, #1024	; 0x400
  108380:	e596001c 	ldr	r0, [r6, #28]
  108384:	e1a0e00f 	mov	lr, pc
  108388:	e596f024 	ldr	pc, [r6, #36]
  10838c:	e3500000 	cmp	r0, #0	; 0x0
  108390:	e0604004 	rsb	r4, r0, r4
  108394:	e0855000 	add	r5, r5, r0
  108398:	da00005b 	ble	10850c <__sfvwrite+0x1ec>
  10839c:	e59a3008 	ldr	r3, [sl, #8]
  1083a0:	e0603003 	rsb	r3, r0, r3
  1083a4:	e3530000 	cmp	r3, #0	; 0x0
  1083a8:	e58a3008 	str	r3, [sl, #8]
  1083ac:	1affffed 	bne	108368 <__sfvwrite+0x48>
  1083b0:	e3a00000 	mov	r0, #0	; 0x0
  1083b4:	e28dd004 	add	sp, sp, #4	; 0x4
  1083b8:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  1083bc:	e5985000 	ldr	r5, [r8]
  1083c0:	e5984004 	ldr	r4, [r8, #4]
  1083c4:	e2888008 	add	r8, r8, #8	; 0x8
  1083c8:	eaffffe6 	b	108368 <__sfvwrite+0x48>
  1083cc:	e2112001 	ands	r2, r1, #1	; 0x1
  1083d0:	13a07000 	movne	r7, #0	; 0x0
  1083d4:	11a09007 	movne	r9, r7
  1083d8:	158d7000 	strne	r7, [sp]
  1083dc:	11a0b007 	movne	fp, r7
  1083e0:	0a00005b 	beq	108554 <__sfvwrite+0x234>
  1083e4:	e3570000 	cmp	r7, #0	; 0x0
  1083e8:	0a000025 	beq	108484 <__sfvwrite+0x164>
  1083ec:	e59d3000 	ldr	r3, [sp]
  1083f0:	e3530000 	cmp	r3, #0	; 0x0
  1083f4:	0a000049 	beq	108520 <__sfvwrite+0x200>
  1083f8:	e596c014 	ldr	ip, [r6, #20]
  1083fc:	e5961008 	ldr	r1, [r6, #8]
  108400:	e5960000 	ldr	r0, [r6]
  108404:	e5962010 	ldr	r2, [r6, #16]
  108408:	e157000b 	cmp	r7, fp
  10840c:	31a05007 	movcc	r5, r7
  108410:	21a0500b 	movcs	r5, fp
  108414:	e08c4001 	add	r4, ip, r1
  108418:	e1500002 	cmp	r0, r2
  10841c:	93a03000 	movls	r3, #0	; 0x0
  108420:	83a03001 	movhi	r3, #1	; 0x1
  108424:	e1550004 	cmp	r5, r4
  108428:	d3a03000 	movle	r3, #0	; 0x0
  10842c:	e3530000 	cmp	r3, #0	; 0x0
  108430:	1a00002b 	bne	1084e4 <__sfvwrite+0x1c4>
  108434:	e155000c 	cmp	r5, ip
  108438:	ba000017 	blt	10849c <__sfvwrite+0x17c>
  10843c:	e1a0200c 	mov	r2, ip
  108440:	e596001c 	ldr	r0, [r6, #28]
  108444:	e1a01009 	mov	r1, r9
  108448:	e1a0e00f 	mov	lr, pc
  10844c:	e596f024 	ldr	pc, [r6, #36]
  108450:	e2504000 	subs	r4, r0, #0	; 0x0
  108454:	da00002c 	ble	10850c <__sfvwrite+0x1ec>
  108458:	e05bb004 	subs	fp, fp, r4
  10845c:	0a00001a 	beq	1084cc <__sfvwrite+0x1ac>
  108460:	e59a3008 	ldr	r3, [sl, #8]
  108464:	e0643003 	rsb	r3, r4, r3
  108468:	e3530000 	cmp	r3, #0	; 0x0
  10846c:	e58a3008 	str	r3, [sl, #8]
  108470:	0affffce 	beq	1083b0 <__sfvwrite+0x90>
  108474:	e0647007 	rsb	r7, r4, r7
  108478:	e3570000 	cmp	r7, #0	; 0x0
  10847c:	e0899004 	add	r9, r9, r4
  108480:	1affffd9 	bne	1083ec <__sfvwrite+0xcc>
  108484:	e5989000 	ldr	r9, [r8]
  108488:	e5987004 	ldr	r7, [r8, #4]
  10848c:	e3a03000 	mov	r3, #0	; 0x0
  108490:	e2888008 	add	r8, r8, #8	; 0x8
  108494:	e58d3000 	str	r3, [sp]
  108498:	eaffffd1 	b	1083e4 <__sfvwrite+0xc4>
  10849c:	e1a02005 	mov	r2, r5
  1084a0:	e1a01009 	mov	r1, r9
  1084a4:	eb0001c5 	bl	108bc0 <memmove>
  1084a8:	e5963008 	ldr	r3, [r6, #8]
  1084ac:	e5962000 	ldr	r2, [r6]
  1084b0:	e1a04005 	mov	r4, r5
  1084b4:	e0653003 	rsb	r3, r5, r3
  1084b8:	e0822005 	add	r2, r2, r5
  1084bc:	e05bb004 	subs	fp, fp, r4
  1084c0:	e5863008 	str	r3, [r6, #8]
  1084c4:	e5862000 	str	r2, [r6]
  1084c8:	1affffe4 	bne	108460 <__sfvwrite+0x140>
  1084cc:	e1a00006 	mov	r0, r6
  1084d0:	ebfffdd8 	bl	107c38 <fflush>
  1084d4:	e3500000 	cmp	r0, #0	; 0x0
  1084d8:	1a00000b 	bne	10850c <__sfvwrite+0x1ec>
  1084dc:	e58d0000 	str	r0, [sp]
  1084e0:	eaffffde 	b	108460 <__sfvwrite+0x140>
  1084e4:	e1a01009 	mov	r1, r9
  1084e8:	e1a02004 	mov	r2, r4
  1084ec:	eb0001b3 	bl	108bc0 <memmove>
  1084f0:	e5963000 	ldr	r3, [r6]
  1084f4:	e0833004 	add	r3, r3, r4
  1084f8:	e5863000 	str	r3, [r6]
  1084fc:	e1a00006 	mov	r0, r6
  108500:	ebfffdcc 	bl	107c38 <fflush>
  108504:	e3500000 	cmp	r0, #0	; 0x0
  108508:	0affffd2 	beq	108458 <__sfvwrite+0x138>
  10850c:	e1d630bc 	ldrh	r3, [r6, #12]
  108510:	e3e00000 	mvn	r0, #0	; 0x0
  108514:	e3833040 	orr	r3, r3, #64	; 0x40
  108518:	e1c630bc 	strh	r3, [r6, #12]
  10851c:	eaffffa4 	b	1083b4 <__sfvwrite+0x94>
  108520:	e1a00009 	mov	r0, r9
  108524:	e3a0100a 	mov	r1, #10	; 0xa
  108528:	e1a02007 	mov	r2, r7
  10852c:	eb00013c 	bl	108a24 <memchr>
  108530:	e3500000 	cmp	r0, #0	; 0x0
  108534:	10693000 	rsbne	r3, r9, r0
  108538:	1283b001 	addne	fp, r3, #1	; 0x1
  10853c:	03a03001 	moveq	r3, #1	; 0x1
  108540:	13a03001 	movne	r3, #1	; 0x1
  108544:	0287b001 	addeq	fp, r7, #1	; 0x1
  108548:	158d3000 	strne	r3, [sp]
  10854c:	058d3000 	streq	r3, [sp]
  108550:	eaffffa8 	b	1083f8 <__sfvwrite+0xd8>
  108554:	e1a07002 	mov	r7, r2
  108558:	e1a09002 	mov	r9, r2
  10855c:	e3570000 	cmp	r7, #0	; 0x0
  108560:	0a000020 	beq	1085e8 <__sfvwrite+0x2c8>
  108564:	e3110c02 	tst	r1, #512	; 0x200
  108568:	e5964008 	ldr	r4, [r6, #8]
  10856c:	0a000021 	beq	1085f8 <__sfvwrite+0x2d8>
  108570:	e1570004 	cmp	r7, r4
  108574:	e1a02004 	mov	r2, r4
  108578:	9a000001 	bls	108584 <__sfvwrite+0x264>
  10857c:	e3110080 	tst	r1, #128	; 0x80
  108580:	1a000047 	bne	1086a4 <__sfvwrite+0x384>
  108584:	e1570002 	cmp	r7, r2
  108588:	31a02007 	movcc	r2, r7
  10858c:	e5960000 	ldr	r0, [r6]
  108590:	e1a01009 	mov	r1, r9
  108594:	31a04007 	movcc	r4, r7
  108598:	eb000188 	bl	108bc0 <memmove>
  10859c:	e5963008 	ldr	r3, [r6, #8]
  1085a0:	e5962000 	ldr	r2, [r6]
  1085a4:	e0643003 	rsb	r3, r4, r3
  1085a8:	e0822004 	add	r2, r2, r4
  1085ac:	e5863008 	str	r3, [r6, #8]
  1085b0:	e5862000 	str	r2, [r6]
  1085b4:	e1a05007 	mov	r5, r7
  1085b8:	e1a00007 	mov	r0, r7
  1085bc:	e1a04007 	mov	r4, r7
  1085c0:	e59a3008 	ldr	r3, [sl, #8]
  1085c4:	e0643003 	rsb	r3, r4, r3
  1085c8:	e3530000 	cmp	r3, #0	; 0x0
  1085cc:	e58a3008 	str	r3, [sl, #8]
  1085d0:	0affff76 	beq	1083b0 <__sfvwrite+0x90>
  1085d4:	e0657007 	rsb	r7, r5, r7
  1085d8:	e3570000 	cmp	r7, #0	; 0x0
  1085dc:	e1d610bc 	ldrh	r1, [r6, #12]
  1085e0:	e0899000 	add	r9, r9, r0
  1085e4:	1affffde 	bne	108564 <__sfvwrite+0x244>
  1085e8:	e5989000 	ldr	r9, [r8]
  1085ec:	e5987004 	ldr	r7, [r8, #4]
  1085f0:	e2888008 	add	r8, r8, #8	; 0x8
  1085f4:	eaffffd8 	b	10855c <__sfvwrite+0x23c>
  1085f8:	e5960000 	ldr	r0, [r6]
  1085fc:	e5963010 	ldr	r3, [r6, #16]
  108600:	e1500003 	cmp	r0, r3
  108604:	81570004 	cmphi	r7, r4
  108608:	e1a05004 	mov	r5, r4
  10860c:	8a000018 	bhi	108674 <__sfvwrite+0x354>
  108610:	e5962014 	ldr	r2, [r6, #20]
  108614:	e1570002 	cmp	r7, r2
  108618:	3a000008 	bcc	108640 <__sfvwrite+0x320>
  10861c:	e596001c 	ldr	r0, [r6, #28]
  108620:	e1a01009 	mov	r1, r9
  108624:	e1a0e00f 	mov	lr, pc
  108628:	e596f024 	ldr	pc, [r6, #36]
  10862c:	e2504000 	subs	r4, r0, #0	; 0x0
  108630:	daffffb5 	ble	10850c <__sfvwrite+0x1ec>
  108634:	e1a05004 	mov	r5, r4
  108638:	e1a00004 	mov	r0, r4
  10863c:	eaffffdf 	b	1085c0 <__sfvwrite+0x2a0>
  108640:	e1a02007 	mov	r2, r7
  108644:	e1a01009 	mov	r1, r9
  108648:	eb00015c 	bl	108bc0 <memmove>
  10864c:	e5963008 	ldr	r3, [r6, #8]
  108650:	e5962000 	ldr	r2, [r6]
  108654:	e0673003 	rsb	r3, r7, r3
  108658:	e0822007 	add	r2, r2, r7
  10865c:	e1a04007 	mov	r4, r7
  108660:	e1a05007 	mov	r5, r7
  108664:	e1a00007 	mov	r0, r7
  108668:	e5863008 	str	r3, [r6, #8]
  10866c:	e5862000 	str	r2, [r6]
  108670:	eaffffd2 	b	1085c0 <__sfvwrite+0x2a0>
  108674:	e1a01009 	mov	r1, r9
  108678:	e1a02004 	mov	r2, r4
  10867c:	eb00014f 	bl	108bc0 <memmove>
  108680:	e5963000 	ldr	r3, [r6]
  108684:	e0833004 	add	r3, r3, r4
  108688:	e5863000 	str	r3, [r6]
  10868c:	e1a00006 	mov	r0, r6
  108690:	ebfffd68 	bl	107c38 <fflush>
  108694:	e3500000 	cmp	r0, #0	; 0x0
  108698:	e1a00004 	mov	r0, r4
  10869c:	0affffc7 	beq	1085c0 <__sfvwrite+0x2a0>
  1086a0:	eaffff99 	b	10850c <__sfvwrite+0x1ec>
  1086a4:	e5961010 	ldr	r1, [r6, #16]
  1086a8:	e5963000 	ldr	r3, [r6]
  1086ac:	e59fb060 	ldr	fp, [pc, #96]	; 108714 <.text+0x8714>
  1086b0:	e0614003 	rsb	r4, r1, r3
  1086b4:	e0875004 	add	r5, r7, r4
  1086b8:	e59b0000 	ldr	r0, [fp]
  1086bc:	e1a02005 	mov	r2, r5
  1086c0:	ebffe9e7 	bl	102e64 <_realloc_r>
  1086c4:	e3500000 	cmp	r0, #0	; 0x0
  1086c8:	0a00000d 	beq	108704 <__sfvwrite+0x3e4>
  1086cc:	e0803004 	add	r3, r0, r4
  1086d0:	e1a02007 	mov	r2, r7
  1086d4:	e1a04007 	mov	r4, r7
  1086d8:	e5863000 	str	r3, [r6]
  1086dc:	e5865014 	str	r5, [r6, #20]
  1086e0:	e5860010 	str	r0, [r6, #16]
  1086e4:	e5867008 	str	r7, [r6, #8]
  1086e8:	eaffffa5 	b	108584 <__sfvwrite+0x264>
  1086ec:	ebfff6ef 	bl	1062b0 <__swsetup>
  1086f0:	e3500000 	cmp	r0, #0	; 0x0
  1086f4:	13e00000 	mvnne	r0, #0	; 0x0
  1086f8:	1affff2d 	bne	1083b4 <__sfvwrite+0x94>
  1086fc:	e1d610bc 	ldrh	r1, [r6, #12]
  108700:	eaffff13 	b	108354 <__sfvwrite+0x34>
  108704:	e59b0000 	ldr	r0, [fp]
  108708:	e5961010 	ldr	r1, [r6, #16]
  10870c:	ebfffe5b 	bl	108080 <_free_r>
  108710:	eaffff7d 	b	10850c <__sfvwrite+0x1ec>
  108714:	00200184 	eoreq	r0, r0, r4, lsl #3

00108718 <_fwalk_reent>:
  108718:	e92d47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  10871c:	e1a08000 	mov	r8, r0
  108720:	e1a0a001 	mov	sl, r1
  108724:	ebfffd92 	bl	107d74 <__sfp_lock_acquire>
  108728:	e2987e2e 	adds	r7, r8, #736	; 0x2e0
  10872c:	01a09007 	moveq	r9, r7
  108730:	0a000017 	beq	108794 <_fwalk_reent+0x7c>
  108734:	e3a09000 	mov	r9, #0	; 0x0
  108738:	e5976004 	ldr	r6, [r7, #4]
  10873c:	e3560001 	cmp	r6, #1	; 0x1
  108740:	e5974008 	ldr	r4, [r7, #8]
  108744:	4a00000f 	bmi	108788 <_fwalk_reent+0x70>
  108748:	e3a05000 	mov	r5, #0	; 0x0
  10874c:	e1d430fc 	ldrsh	r3, [r4, #12]
  108750:	e3530000 	cmp	r3, #0	; 0x0
  108754:	e2855001 	add	r5, r5, #1	; 0x1
  108758:	0a000007 	beq	10877c <_fwalk_reent+0x64>
  10875c:	e1d430fe 	ldrsh	r3, [r4, #14]
  108760:	e3730001 	cmn	r3, #1	; 0x1
  108764:	e1a01004 	mov	r1, r4
  108768:	e1a00008 	mov	r0, r8
  10876c:	0a000002 	beq	10877c <_fwalk_reent+0x64>
  108770:	e1a0e00f 	mov	lr, pc
  108774:	e12fff1a 	bx	sl
  108778:	e1899000 	orr	r9, r9, r0
  10877c:	e1560005 	cmp	r6, r5
  108780:	e284405c 	add	r4, r4, #92	; 0x5c
  108784:	1afffff0 	bne	10874c <_fwalk_reent+0x34>
  108788:	e5977000 	ldr	r7, [r7]
  10878c:	e3570000 	cmp	r7, #0	; 0x0
  108790:	1affffe8 	bne	108738 <_fwalk_reent+0x20>
  108794:	ebfffd77 	bl	107d78 <__sfp_lock_release>
  108798:	e1a00009 	mov	r0, r9
  10879c:	e8bd87f0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

001087a0 <_fwalk>:
  1087a0:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  1087a4:	e1a04000 	mov	r4, r0
  1087a8:	e1a08001 	mov	r8, r1
  1087ac:	ebfffd70 	bl	107d74 <__sfp_lock_acquire>
  1087b0:	e2947e2e 	adds	r7, r4, #736	; 0x2e0
  1087b4:	01a0a007 	moveq	sl, r7
  1087b8:	0a000016 	beq	108818 <_fwalk+0x78>
  1087bc:	e3a0a000 	mov	sl, #0	; 0x0
  1087c0:	e5976004 	ldr	r6, [r7, #4]
  1087c4:	e3560001 	cmp	r6, #1	; 0x1
  1087c8:	e5974008 	ldr	r4, [r7, #8]
  1087cc:	4a00000e 	bmi	10880c <_fwalk+0x6c>
  1087d0:	e3a05000 	mov	r5, #0	; 0x0
  1087d4:	e1d430fc 	ldrsh	r3, [r4, #12]
  1087d8:	e3530000 	cmp	r3, #0	; 0x0
  1087dc:	e2855001 	add	r5, r5, #1	; 0x1
  1087e0:	0a000006 	beq	108800 <_fwalk+0x60>
  1087e4:	e1d430fe 	ldrsh	r3, [r4, #14]
  1087e8:	e3730001 	cmn	r3, #1	; 0x1
  1087ec:	e1a00004 	mov	r0, r4
  1087f0:	0a000002 	beq	108800 <_fwalk+0x60>
  1087f4:	e1a0e00f 	mov	lr, pc
  1087f8:	e12fff18 	bx	r8
  1087fc:	e18aa000 	orr	sl, sl, r0
  108800:	e1560005 	cmp	r6, r5
  108804:	e284405c 	add	r4, r4, #92	; 0x5c
  108808:	1afffff1 	bne	1087d4 <_fwalk+0x34>
  10880c:	e5977000 	ldr	r7, [r7]
  108810:	e3570000 	cmp	r7, #0	; 0x0
  108814:	1affffe9 	bne	1087c0 <_fwalk+0x20>
  108818:	ebfffd56 	bl	107d78 <__sfp_lock_release>
  10881c:	e1a0000a 	mov	r0, sl
  108820:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}

00108824 <__locale_charset>:
  108824:	e59f3004 	ldr	r3, [pc, #4]	; 108830 <.text+0x8830>
  108828:	e5930000 	ldr	r0, [r3]
  10882c:	e12fff1e 	bx	lr
  108830:	0010a810 	andeqs	sl, r0, r0, lsl r8

00108834 <_localeconv_r>:
  108834:	e59f0000 	ldr	r0, [pc, #0]	; 10883c <.text+0x883c>
  108838:	e12fff1e 	bx	lr
  10883c:	0010a7e0 	andeqs	sl, r0, r0, ror #15

00108840 <localeconv>:
  108840:	e59f3004 	ldr	r3, [pc, #4]	; 10884c <.text+0x884c>
  108844:	e5930000 	ldr	r0, [r3]
  108848:	eafffff9 	b	108834 <_localeconv_r>
  10884c:	00200184 	eoreq	r0, r0, r4, lsl #3

00108850 <_setlocale_r>:
  108850:	e59f3054 	ldr	r3, [pc, #84]	; 1088ac <.text+0x88ac>
  108854:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  108858:	e2524000 	subs	r4, r2, #0	; 0x0
  10885c:	e1a05000 	mov	r5, r0
  108860:	e1a06001 	mov	r6, r1
  108864:	e1a00004 	mov	r0, r4
  108868:	e1a01003 	mov	r1, r3
  10886c:	0a000007 	beq	108890 <_setlocale_r+0x40>
  108870:	eb00045b 	bl	1099e4 <strcmp>
  108874:	e3500000 	cmp	r0, #0	; 0x0
  108878:	e59f1030 	ldr	r1, [pc, #48]	; 1088b0 <.text+0x88b0>
  10887c:	e1a00004 	mov	r0, r4
  108880:	1a000004 	bne	108898 <_setlocale_r+0x48>
  108884:	e5854034 	str	r4, [r5, #52]
  108888:	e5856030 	str	r6, [r5, #48]
  10888c:	e59f3018 	ldr	r3, [pc, #24]	; 1088ac <.text+0x88ac>
  108890:	e1a00003 	mov	r0, r3
  108894:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  108898:	eb000451 	bl	1099e4 <strcmp>
  10889c:	e3500000 	cmp	r0, #0	; 0x0
  1088a0:	e3a03000 	mov	r3, #0	; 0x0
  1088a4:	0afffff6 	beq	108884 <_setlocale_r+0x34>
  1088a8:	eafffff8 	b	108890 <_setlocale_r+0x40>
  1088ac:	0010a718 	andeqs	sl, r0, r8, lsl r7
  1088b0:	0010a750 	andeqs	sl, r0, r0, asr r7

001088b4 <setlocale>:
  1088b4:	e1a02001 	mov	r2, r1
  1088b8:	e59f100c 	ldr	r1, [pc, #12]	; 1088cc <.text+0x88cc>
  1088bc:	e1a03000 	mov	r3, r0
  1088c0:	e5910000 	ldr	r0, [r1]
  1088c4:	e1a01003 	mov	r1, r3
  1088c8:	eaffffe0 	b	108850 <_setlocale_r>
  1088cc:	00200184 	eoreq	r0, r0, r4, lsl #3

001088d0 <__smakebuf>:
  1088d0:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  1088d4:	e1d030bc 	ldrh	r3, [r0, #12]
  1088d8:	e3130002 	tst	r3, #2	; 0x2
  1088dc:	12802043 	addne	r2, r0, #67	; 0x43
  1088e0:	13a03001 	movne	r3, #1	; 0x1
  1088e4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
  1088e8:	e1a04000 	mov	r4, r0
  1088ec:	15803014 	strne	r3, [r0, #20]
  1088f0:	15802010 	strne	r2, [r0, #16]
  1088f4:	15802000 	strne	r2, [r0]
  1088f8:	1a000025 	bne	108994 <__smakebuf+0xc4>
  1088fc:	e1d010fe 	ldrsh	r1, [r0, #14]
  108900:	e3510000 	cmp	r1, #0	; 0x0
  108904:	ba000024 	blt	10899c <__smakebuf+0xcc>
  108908:	e59f5108 	ldr	r5, [pc, #264]	; 108a18 <.text+0x8a18>
  10890c:	e1a0200d 	mov	r2, sp
  108910:	e5950000 	ldr	r0, [r5]
  108914:	ebffdeb5 	bl	1003f0 <_fstat_r>
  108918:	e3500000 	cmp	r0, #0	; 0x0
  10891c:	b1d430bc 	ldrlth	r3, [r4, #12]
  108920:	ba00001e 	blt	1089a0 <__smakebuf+0xd0>
  108924:	e59d3004 	ldr	r3, [sp, #4]
  108928:	e2033a0f 	and	r3, r3, #61440	; 0xf000
  10892c:	e3530a02 	cmp	r3, #8192	; 0x2000
  108930:	13a06000 	movne	r6, #0	; 0x0
  108934:	03a06001 	moveq	r6, #1	; 0x1
  108938:	e3530902 	cmp	r3, #32768	; 0x8000
  10893c:	0a000022 	beq	1089cc <__smakebuf+0xfc>
  108940:	e1d430bc 	ldrh	r3, [r4, #12]
  108944:	e3833b02 	orr	r3, r3, #2048	; 0x800
  108948:	e1c430bc 	strh	r3, [r4, #12]
  10894c:	e5950000 	ldr	r0, [r5]
  108950:	e3a01b01 	mov	r1, #1024	; 0x400
  108954:	ebffe737 	bl	102638 <_malloc_r>
  108958:	e3500000 	cmp	r0, #0	; 0x0
  10895c:	0a000024 	beq	1089f4 <__smakebuf+0x124>
  108960:	e59f30b0 	ldr	r3, [pc, #176]	; 108a18 <.text+0x8a18>
  108964:	e1d420bc 	ldrh	r2, [r4, #12]
  108968:	e5931000 	ldr	r1, [r3]
  10896c:	e59f30a8 	ldr	r3, [pc, #168]	; 108a1c <.text+0x8a1c>
  108970:	e3822080 	orr	r2, r2, #128	; 0x80
  108974:	e581303c 	str	r3, [r1, #60]
  108978:	e3560000 	cmp	r6, #0	; 0x0
  10897c:	e3a03b01 	mov	r3, #1024	; 0x400
  108980:	e1c420bc 	strh	r2, [r4, #12]
  108984:	e5840010 	str	r0, [r4, #16]
  108988:	e5843014 	str	r3, [r4, #20]
  10898c:	e5840000 	str	r0, [r4]
  108990:	1a000006 	bne	1089b0 <__smakebuf+0xe0>
  108994:	e28dd03c 	add	sp, sp, #60	; 0x3c
  108998:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10899c:	e59f5074 	ldr	r5, [pc, #116]	; 108a18 <.text+0x8a18>
  1089a0:	e3833b02 	orr	r3, r3, #2048	; 0x800
  1089a4:	e3a06000 	mov	r6, #0	; 0x0
  1089a8:	e1c430bc 	strh	r3, [r4, #12]
  1089ac:	eaffffe6 	b	10894c <__smakebuf+0x7c>
  1089b0:	e1d400fe 	ldrsh	r0, [r4, #14]
  1089b4:	ebffeb26 	bl	103654 <isatty>
  1089b8:	e3500000 	cmp	r0, #0	; 0x0
  1089bc:	11d430bc 	ldrneh	r3, [r4, #12]
  1089c0:	13833001 	orrne	r3, r3, #1	; 0x1
  1089c4:	11c430bc 	strneh	r3, [r4, #12]
  1089c8:	eafffff1 	b	108994 <__smakebuf+0xc4>
  1089cc:	e5942028 	ldr	r2, [r4, #40]
  1089d0:	e59f3048 	ldr	r3, [pc, #72]	; 108a20 <.text+0x8a20>
  1089d4:	e1520003 	cmp	r2, r3
  1089d8:	1affffd8 	bne	108940 <__smakebuf+0x70>
  1089dc:	e1d430bc 	ldrh	r3, [r4, #12]
  1089e0:	e3a02b01 	mov	r2, #1024	; 0x400
  1089e4:	e3833b01 	orr	r3, r3, #1024	; 0x400
  1089e8:	e1c430bc 	strh	r3, [r4, #12]
  1089ec:	e584204c 	str	r2, [r4, #76]
  1089f0:	eaffffd5 	b	10894c <__smakebuf+0x7c>
  1089f4:	e1d430bc 	ldrh	r3, [r4, #12]
  1089f8:	e2841043 	add	r1, r4, #67	; 0x43
  1089fc:	e3833002 	orr	r3, r3, #2	; 0x2
  108a00:	e3a02001 	mov	r2, #1	; 0x1
  108a04:	e5842014 	str	r2, [r4, #20]
  108a08:	e1c430bc 	strh	r3, [r4, #12]
  108a0c:	e5841010 	str	r1, [r4, #16]
  108a10:	e5841000 	str	r1, [r4]
  108a14:	eaffffde 	b	108994 <__smakebuf+0xc4>
  108a18:	00200184 	eoreq	r0, r0, r4, lsl #3
  108a1c:	00107e3c 	andeqs	r7, r0, ip, lsr lr
  108a20:	001098f8 	ldreqsh	r9, [r0], -r8

00108a24 <memchr>:
  108a24:	e1a0c002 	mov	ip, r2
  108a28:	e35c0003 	cmp	ip, #3	; 0x3
  108a2c:	e52de004 	str	lr, [sp, #-4]!
  108a30:	e1a02000 	mov	r2, r0
  108a34:	e20110ff 	and	r1, r1, #255	; 0xff
  108a38:	9a000001 	bls	108a44 <memchr+0x20>
  108a3c:	e2103003 	ands	r3, r0, #3	; 0x3
  108a40:	0a00000d 	beq	108a7c <memchr+0x58>
  108a44:	e35c0000 	cmp	ip, #0	; 0x0
  108a48:	0a000009 	beq	108a74 <memchr+0x50>
  108a4c:	e5d03000 	ldrb	r3, [r0]
  108a50:	e1510003 	cmp	r1, r3
  108a54:	1a000003 	bne	108a68 <memchr+0x44>
  108a58:	e49df004 	ldr	pc, [sp], #4
  108a5c:	e5f03001 	ldrb	r3, [r0, #1]!
  108a60:	e1510003 	cmp	r1, r3
  108a64:	049df004 	ldreq	pc, [sp], #4
  108a68:	e35c0001 	cmp	ip, #1	; 0x1
  108a6c:	e24cc001 	sub	ip, ip, #1	; 0x1
  108a70:	1afffff9 	bne	108a5c <memchr+0x38>
  108a74:	e3a00000 	mov	r0, #0	; 0x0
  108a78:	e49df004 	ldr	pc, [sp], #4
  108a7c:	e1a0e003 	mov	lr, r3
  108a80:	e2833001 	add	r3, r3, #1	; 0x1
  108a84:	e3530004 	cmp	r3, #4	; 0x4
  108a88:	e081e40e 	add	lr, r1, lr, lsl #8
  108a8c:	1afffffb 	bne	108a80 <memchr+0x5c>
  108a90:	e1a00002 	mov	r0, r2
  108a94:	e5902000 	ldr	r2, [r0]
  108a98:	e022200e 	eor	r2, r2, lr
  108a9c:	e28234ff 	add	r3, r2, #-16777216	; 0xff000000
  108aa0:	e2433801 	sub	r3, r3, #65536	; 0x10000
  108aa4:	e2433c01 	sub	r3, r3, #256	; 0x100
  108aa8:	e2433001 	sub	r3, r3, #1	; 0x1
  108aac:	e3c3347f 	bic	r3, r3, #2130706432	; 0x7f000000
  108ab0:	e3c3387f 	bic	r3, r3, #8323072	; 0x7f0000
  108ab4:	e3c33c7f 	bic	r3, r3, #32512	; 0x7f00
  108ab8:	e3c3307f 	bic	r3, r3, #127	; 0x7f
  108abc:	e1d32002 	bics	r2, r3, r2
  108ac0:	e24cc004 	sub	ip, ip, #4	; 0x4
  108ac4:	0a00000f 	beq	108b08 <memchr+0xe4>
  108ac8:	e5d03000 	ldrb	r3, [r0]
  108acc:	e1510003 	cmp	r1, r3
  108ad0:	e1a02000 	mov	r2, r0
  108ad4:	0a00000f 	beq	108b18 <memchr+0xf4>
  108ad8:	e5d03001 	ldrb	r3, [r0, #1]
  108adc:	e1510003 	cmp	r1, r3
  108ae0:	e2802001 	add	r2, r0, #1	; 0x1
  108ae4:	0a00000b 	beq	108b18 <memchr+0xf4>
  108ae8:	e5d03002 	ldrb	r3, [r0, #2]
  108aec:	e1510003 	cmp	r1, r3
  108af0:	e2802002 	add	r2, r0, #2	; 0x2
  108af4:	0a000007 	beq	108b18 <memchr+0xf4>
  108af8:	e5d03003 	ldrb	r3, [r0, #3]
  108afc:	e1510003 	cmp	r1, r3
  108b00:	e2802003 	add	r2, r0, #3	; 0x3
  108b04:	0a000003 	beq	108b18 <memchr+0xf4>
  108b08:	e35c0003 	cmp	ip, #3	; 0x3
  108b0c:	e2800004 	add	r0, r0, #4	; 0x4
  108b10:	8affffdf 	bhi	108a94 <memchr+0x70>
  108b14:	eaffffca 	b	108a44 <memchr+0x20>
  108b18:	e1a00002 	mov	r0, r2
  108b1c:	e49df004 	ldr	pc, [sp], #4

00108b20 <memcpy>:
  108b20:	e352000f 	cmp	r2, #15	; 0xf
  108b24:	e52de004 	str	lr, [sp, #-4]!
  108b28:	e1a0c000 	mov	ip, r0
  108b2c:	e1a0e002 	mov	lr, r2
  108b30:	9a000002 	bls	108b40 <memcpy+0x20>
  108b34:	e1813000 	orr	r3, r1, r0
  108b38:	e3130003 	tst	r3, #3	; 0x3
  108b3c:	0a000008 	beq	108b64 <memcpy+0x44>
  108b40:	e35e0000 	cmp	lr, #0	; 0x0
  108b44:	049df004 	ldreq	pc, [sp], #4
  108b48:	e3a02000 	mov	r2, #0	; 0x0
  108b4c:	e4d13001 	ldrb	r3, [r1], #1
  108b50:	e7c2300c 	strb	r3, [r2, ip]
  108b54:	e2822001 	add	r2, r2, #1	; 0x1
  108b58:	e152000e 	cmp	r2, lr
  108b5c:	1afffffa 	bne	108b4c <memcpy+0x2c>
  108b60:	e49df004 	ldr	pc, [sp], #4
  108b64:	e5913000 	ldr	r3, [r1]
  108b68:	e58c3000 	str	r3, [ip]
  108b6c:	e5912004 	ldr	r2, [r1, #4]
  108b70:	e58c2004 	str	r2, [ip, #4]
  108b74:	e5913008 	ldr	r3, [r1, #8]
  108b78:	e58c3008 	str	r3, [ip, #8]
  108b7c:	e24ee010 	sub	lr, lr, #16	; 0x10
  108b80:	e591300c 	ldr	r3, [r1, #12]
  108b84:	e35e000f 	cmp	lr, #15	; 0xf
  108b88:	e58c300c 	str	r3, [ip, #12]
  108b8c:	e2811010 	add	r1, r1, #16	; 0x10
  108b90:	e28cc010 	add	ip, ip, #16	; 0x10
  108b94:	8afffff2 	bhi	108b64 <memcpy+0x44>
  108b98:	e35e0003 	cmp	lr, #3	; 0x3
  108b9c:	9affffe7 	bls	108b40 <memcpy+0x20>
  108ba0:	e24ee004 	sub	lr, lr, #4	; 0x4
  108ba4:	e4913004 	ldr	r3, [r1], #4
  108ba8:	e35e0003 	cmp	lr, #3	; 0x3
  108bac:	e48c3004 	str	r3, [ip], #4
  108bb0:	8afffffa 	bhi	108ba0 <memcpy+0x80>
  108bb4:	e35e0000 	cmp	lr, #0	; 0x0
  108bb8:	1affffe2 	bne	108b48 <memcpy+0x28>
  108bbc:	e49df004 	ldr	pc, [sp], #4

00108bc0 <memmove>:
  108bc0:	e1500001 	cmp	r0, r1
  108bc4:	e92d4010 	stmdb	sp!, {r4, lr}
  108bc8:	e1a0c000 	mov	ip, r0
  108bcc:	e1a04001 	mov	r4, r1
  108bd0:	e1a0e002 	mov	lr, r2
  108bd4:	9a000010 	bls	108c1c <memmove+0x5c>
  108bd8:	e0813002 	add	r3, r1, r2
  108bdc:	e1500003 	cmp	r0, r3
  108be0:	2a00000d 	bcs	108c1c <memmove+0x5c>
  108be4:	e3520000 	cmp	r2, #0	; 0x0
  108be8:	08bd8010 	ldmeqia	sp!, {r4, pc}
  108bec:	e0801002 	add	r1, r0, r2
  108bf0:	e1a0c003 	mov	ip, r3
  108bf4:	e0622001 	rsb	r2, r2, r1
  108bf8:	e57c3001 	ldrb	r3, [ip, #-1]!
  108bfc:	e5613001 	strb	r3, [r1, #-1]!
  108c00:	e1520001 	cmp	r2, r1
  108c04:	08bd8010 	ldmeqia	sp!, {r4, pc}
  108c08:	e57c3001 	ldrb	r3, [ip, #-1]!
  108c0c:	e5613001 	strb	r3, [r1, #-1]!
  108c10:	e1520001 	cmp	r2, r1
  108c14:	1afffff7 	bne	108bf8 <memmove+0x38>
  108c18:	e8bd8010 	ldmia	sp!, {r4, pc}
  108c1c:	e35e000f 	cmp	lr, #15	; 0xf
  108c20:	8a000008 	bhi	108c48 <memmove+0x88>
  108c24:	e35e0000 	cmp	lr, #0	; 0x0
  108c28:	08bd8010 	ldmeqia	sp!, {r4, pc}
  108c2c:	e3a02000 	mov	r2, #0	; 0x0
  108c30:	e4d13001 	ldrb	r3, [r1], #1
  108c34:	e7c2300c 	strb	r3, [r2, ip]
  108c38:	e2822001 	add	r2, r2, #1	; 0x1
  108c3c:	e152000e 	cmp	r2, lr
  108c40:	1afffffa 	bne	108c30 <memmove+0x70>
  108c44:	e8bd8010 	ldmia	sp!, {r4, pc}
  108c48:	e1843000 	orr	r3, r4, r0
  108c4c:	e3130003 	tst	r3, #3	; 0x3
  108c50:	1afffff3 	bne	108c24 <memmove+0x64>
  108c54:	e1a01004 	mov	r1, r4
  108c58:	e1a0c000 	mov	ip, r0
  108c5c:	e5913000 	ldr	r3, [r1]
  108c60:	e58c3000 	str	r3, [ip]
  108c64:	e5912004 	ldr	r2, [r1, #4]
  108c68:	e58c2004 	str	r2, [ip, #4]
  108c6c:	e5913008 	ldr	r3, [r1, #8]
  108c70:	e58c3008 	str	r3, [ip, #8]
  108c74:	e24ee010 	sub	lr, lr, #16	; 0x10
  108c78:	e591300c 	ldr	r3, [r1, #12]
  108c7c:	e35e000f 	cmp	lr, #15	; 0xf
  108c80:	e58c300c 	str	r3, [ip, #12]
  108c84:	e2811010 	add	r1, r1, #16	; 0x10
  108c88:	e28cc010 	add	ip, ip, #16	; 0x10
  108c8c:	8afffff2 	bhi	108c5c <memmove+0x9c>
  108c90:	e35e0003 	cmp	lr, #3	; 0x3
  108c94:	9affffe2 	bls	108c24 <memmove+0x64>
  108c98:	e24ee004 	sub	lr, lr, #4	; 0x4
  108c9c:	e4913004 	ldr	r3, [r1], #4
  108ca0:	e35e0003 	cmp	lr, #3	; 0x3
  108ca4:	e48c3004 	str	r3, [ip], #4
  108ca8:	8afffffa 	bhi	108c98 <memmove+0xd8>
  108cac:	e35e0000 	cmp	lr, #0	; 0x0
  108cb0:	1affffdd 	bne	108c2c <memmove+0x6c>
  108cb4:	e8bd8010 	ldmia	sp!, {r4, pc}

00108cb8 <_Bfree>:
  108cb8:	e251c000 	subs	ip, r1, #0	; 0x0
  108cbc:	1590104c 	ldrne	r1, [r0, #76]
  108cc0:	159c2004 	ldrne	r2, [ip, #4]
  108cc4:	17913102 	ldrne	r3, [r1, r2, lsl #2]
  108cc8:	158c3000 	strne	r3, [ip]
  108ccc:	1781c102 	strne	ip, [r1, r2, lsl #2]
  108cd0:	e12fff1e 	bx	lr

00108cd4 <_hi0bits>:
  108cd4:	e1a03820 	mov	r3, r0, lsr #16
  108cd8:	e1a03803 	mov	r3, r3, lsl #16
  108cdc:	e3530000 	cmp	r3, #0	; 0x0
  108ce0:	01a00800 	moveq	r0, r0, lsl #16
  108ce4:	13a03000 	movne	r3, #0	; 0x0
  108ce8:	03a03010 	moveq	r3, #16	; 0x10
  108cec:	e31004ff 	tst	r0, #-16777216	; 0xff000000
  108cf0:	01a00400 	moveq	r0, r0, lsl #8
  108cf4:	02833008 	addeq	r3, r3, #8	; 0x8
  108cf8:	e310020f 	tst	r0, #-268435456	; 0xf0000000
  108cfc:	01a00200 	moveq	r0, r0, lsl #4
  108d00:	02833004 	addeq	r3, r3, #4	; 0x4
  108d04:	e3100103 	tst	r0, #-1073741824	; 0xc0000000
  108d08:	01a00100 	moveq	r0, r0, lsl #2
  108d0c:	02833002 	addeq	r3, r3, #2	; 0x2
  108d10:	e3500000 	cmp	r0, #0	; 0x0
  108d14:	ba000002 	blt	108d24 <_hi0bits+0x50>
  108d18:	e3100101 	tst	r0, #1073741824	; 0x40000000
  108d1c:	03a03020 	moveq	r3, #32	; 0x20
  108d20:	12833001 	addne	r3, r3, #1	; 0x1
  108d24:	e1a00003 	mov	r0, r3
  108d28:	e12fff1e 	bx	lr

00108d2c <_lo0bits>:
  108d2c:	e5902000 	ldr	r2, [r0]
  108d30:	e1a01000 	mov	r1, r0
  108d34:	e2120007 	ands	r0, r2, #7	; 0x7
  108d38:	0a00000a 	beq	108d68 <_lo0bits+0x3c>
  108d3c:	e3120001 	tst	r2, #1	; 0x1
  108d40:	13a00000 	movne	r0, #0	; 0x0
  108d44:	112fff1e 	bxne	lr
  108d48:	e3120002 	tst	r2, #2	; 0x2
  108d4c:	11a030a2 	movne	r3, r2, lsr #1
  108d50:	01a03122 	moveq	r3, r2, lsr #2
  108d54:	13a00001 	movne	r0, #1	; 0x1
  108d58:	03a00002 	moveq	r0, #2	; 0x2
  108d5c:	15813000 	strne	r3, [r1]
  108d60:	05813000 	streq	r3, [r1]
  108d64:	e12fff1e 	bx	lr
  108d68:	e1a03802 	mov	r3, r2, lsl #16
  108d6c:	e1a03823 	mov	r3, r3, lsr #16
  108d70:	e3530000 	cmp	r3, #0	; 0x0
  108d74:	01a02822 	moveq	r2, r2, lsr #16
  108d78:	03a00010 	moveq	r0, #16	; 0x10
  108d7c:	e31200ff 	tst	r2, #255	; 0xff
  108d80:	01a02422 	moveq	r2, r2, lsr #8
  108d84:	02800008 	addeq	r0, r0, #8	; 0x8
  108d88:	e312000f 	tst	r2, #15	; 0xf
  108d8c:	01a02222 	moveq	r2, r2, lsr #4
  108d90:	02800004 	addeq	r0, r0, #4	; 0x4
  108d94:	e3120003 	tst	r2, #3	; 0x3
  108d98:	01a02122 	moveq	r2, r2, lsr #2
  108d9c:	02800002 	addeq	r0, r0, #2	; 0x2
  108da0:	e3120001 	tst	r2, #1	; 0x1
  108da4:	1a000003 	bne	108db8 <_lo0bits+0x8c>
  108da8:	e1b020a2 	movs	r2, r2, lsr #1
  108dac:	03a00020 	moveq	r0, #32	; 0x20
  108db0:	012fff1e 	bxeq	lr
  108db4:	e2800001 	add	r0, r0, #1	; 0x1
  108db8:	e5812000 	str	r2, [r1]
  108dbc:	e12fff1e 	bx	lr

00108dc0 <__mcmp>:
  108dc0:	e5903010 	ldr	r3, [r0, #16]
  108dc4:	e5912010 	ldr	r2, [r1, #16]
  108dc8:	e52de004 	str	lr, [sp, #-4]!
  108dcc:	e053e002 	subs	lr, r3, r2
  108dd0:	1a00000c 	bne	108e08 <__mcmp+0x48>
  108dd4:	e1a02102 	mov	r2, r2, lsl #2
  108dd8:	e2800014 	add	r0, r0, #20	; 0x14
  108ddc:	e2823014 	add	r3, r2, #20	; 0x14
  108de0:	e0811003 	add	r1, r1, r3
  108de4:	e080c002 	add	ip, r0, r2
  108de8:	e51c2004 	ldr	r2, [ip, #-4]
  108dec:	e5113004 	ldr	r3, [r1, #-4]
  108df0:	e1520003 	cmp	r2, r3
  108df4:	e24cc004 	sub	ip, ip, #4	; 0x4
  108df8:	e2411004 	sub	r1, r1, #4	; 0x4
  108dfc:	1a000003 	bne	108e10 <__mcmp+0x50>
  108e00:	e150000c 	cmp	r0, ip
  108e04:	3afffff7 	bcc	108de8 <__mcmp+0x28>
  108e08:	e1a0000e 	mov	r0, lr
  108e0c:	e49df004 	ldr	pc, [sp], #4
  108e10:	33e0e000 	mvncc	lr, #0	; 0x0
  108e14:	23a0e001 	movcs	lr, #1	; 0x1
  108e18:	e1a0000e 	mov	r0, lr
  108e1c:	e49df004 	ldr	pc, [sp], #4

00108e20 <_ulp>:
  108e20:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
  108e24:	e1a00a20 	mov	r0, r0, lsr #20
  108e28:	e1a00a00 	mov	r0, r0, lsl #20
  108e2c:	e240250d 	sub	r2, r0, #54525952	; 0x3400000
  108e30:	e3520000 	cmp	r2, #0	; 0x0
  108e34:	e2623000 	rsb	r3, r2, #0	; 0x0
  108e38:	e1a0ca43 	mov	ip, r3, asr #20
  108e3c:	c1a00002 	movgt	r0, r2
  108e40:	c3a01000 	movgt	r1, #0	; 0x0
  108e44:	c12fff1e 	bxgt	lr
  108e48:	e35c0013 	cmp	ip, #19	; 0x13
  108e4c:	e24c3014 	sub	r3, ip, #20	; 0x14
  108e50:	d3a03702 	movle	r3, #524288	; 0x80000
  108e54:	d1a00c53 	movle	r0, r3, asr ip
  108e58:	d3a01000 	movle	r1, #0	; 0x0
  108e5c:	d12fff1e 	bxle	lr
  108e60:	e353001e 	cmp	r3, #30	; 0x1e
  108e64:	e263201f 	rsb	r2, r3, #31	; 0x1f
  108e68:	e3a03001 	mov	r3, #1	; 0x1
  108e6c:	d3a03001 	movle	r3, #1	; 0x1
  108e70:	d1a03213 	movle	r3, r3, lsl r2
  108e74:	e3a00000 	mov	r0, #0	; 0x0
  108e78:	e1a01003 	mov	r1, r3
  108e7c:	e12fff1e 	bx	lr

00108e80 <_b2d>:
  108e80:	e5903010 	ldr	r3, [r0, #16]
  108e84:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  108e88:	e2806014 	add	r6, r0, #20	; 0x14
  108e8c:	e0863103 	add	r3, r6, r3, lsl #2
  108e90:	e5137004 	ldr	r7, [r3, #-4]
  108e94:	e1a00007 	mov	r0, r7
  108e98:	e1a04001 	mov	r4, r1
  108e9c:	e2435004 	sub	r5, r3, #4	; 0x4
  108ea0:	ebffff8b 	bl	108cd4 <_hi0bits>
  108ea4:	e2603020 	rsb	r3, r0, #32	; 0x20
  108ea8:	e350000a 	cmp	r0, #10	; 0xa
  108eac:	e1a02000 	mov	r2, r0
  108eb0:	e5843000 	str	r3, [r4]
  108eb4:	ca00000a 	bgt	108ee4 <_b2d+0x64>
  108eb8:	e1560005 	cmp	r6, r5
  108ebc:	35153004 	ldrcc	r3, [r5, #-4]
  108ec0:	e260c00b 	rsb	ip, r0, #11	; 0xb
  108ec4:	31a0ec33 	movcc	lr, r3, lsr ip
  108ec8:	e1a03c37 	mov	r3, r7, lsr ip
  108ecc:	23a0e000 	movcs	lr, #0	; 0x0
  108ed0:	e2822015 	add	r2, r2, #21	; 0x15
  108ed4:	e18e1217 	orr	r1, lr, r7, lsl r2
  108ed8:	e38305ff 	orr	r0, r3, #1069547520	; 0x3fc00000
  108edc:	e3800603 	orr	r0, r0, #3145728	; 0x300000
  108ee0:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  108ee4:	e1560005 	cmp	r6, r5
  108ee8:	23a0e000 	movcs	lr, #0	; 0x0
  108eec:	3535e004 	ldrcc	lr, [r5, #-4]!
  108ef0:	e250200b 	subs	r2, r0, #11	; 0xb
  108ef4:	1a000003 	bne	108f08 <_b2d+0x88>
  108ef8:	e38705ff 	orr	r0, r7, #1069547520	; 0x3fc00000
  108efc:	e3800603 	orr	r0, r0, #3145728	; 0x300000
  108f00:	e1a0100e 	mov	r1, lr
  108f04:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}
  108f08:	e1550006 	cmp	r5, r6
  108f0c:	85153004 	ldrhi	r3, [r5, #-4]
  108f10:	e262c020 	rsb	ip, r2, #32	; 0x20
  108f14:	81a04c33 	movhi	r4, r3, lsr ip
  108f18:	e1a03217 	mov	r3, r7, lsl r2
  108f1c:	e38335ff 	orr	r3, r3, #1069547520	; 0x3fc00000
  108f20:	93a04000 	movls	r4, #0	; 0x0
  108f24:	e3833603 	orr	r3, r3, #3145728	; 0x300000
  108f28:	e1830c3e 	orr	r0, r3, lr, lsr ip
  108f2c:	e184121e 	orr	r1, r4, lr, lsl r2
  108f30:	e8bd80f0 	ldmia	sp!, {r4, r5, r6, r7, pc}

00108f34 <_ratio>:
  108f34:	e92d43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  108f38:	e24dd008 	sub	sp, sp, #8	; 0x8
  108f3c:	e1a04001 	mov	r4, r1
  108f40:	e28d1004 	add	r1, sp, #4	; 0x4
  108f44:	e1a05000 	mov	r5, r0
  108f48:	ebffffcc 	bl	108e80 <_b2d>
  108f4c:	e1a06000 	mov	r6, r0
  108f50:	e1a07001 	mov	r7, r1
  108f54:	e1a00004 	mov	r0, r4
  108f58:	e1a0100d 	mov	r1, sp
  108f5c:	ebffffc7 	bl	108e80 <_b2d>
  108f60:	e5942010 	ldr	r2, [r4, #16]
  108f64:	e1a09001 	mov	r9, r1
  108f68:	e5951010 	ldr	r1, [r5, #16]
  108f6c:	e59d3004 	ldr	r3, [sp, #4]
  108f70:	e0621001 	rsb	r1, r2, r1
  108f74:	e59d2000 	ldr	r2, [sp]
  108f78:	e0623003 	rsb	r3, r2, r3
  108f7c:	e0833281 	add	r3, r3, r1, lsl #5
  108f80:	e1a08000 	mov	r8, r0
  108f84:	e3530000 	cmp	r3, #0	; 0x0
  108f88:	c0866a03 	addgt	r6, r6, r3, lsl #20
  108f8c:	d0488a03 	suble	r8, r8, r3, lsl #20
  108f90:	e1a00006 	mov	r0, r6
  108f94:	e1a01007 	mov	r1, r7
  108f98:	e1a02008 	mov	r2, r8
  108f9c:	e1a03009 	mov	r3, r9
  108fa0:	eb0004d0 	bl	10a2e8 <__aeabi_ddiv>
  108fa4:	e28dd008 	add	sp, sp, #8	; 0x8
  108fa8:	e8bd83f0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, pc}

00108fac <_mprec_log10>:
  108fac:	e3500017 	cmp	r0, #23	; 0x17
  108fb0:	e92d4010 	stmdb	sp!, {r4, lr}
  108fb4:	e1a04000 	mov	r4, r0
  108fb8:	c3a005ff 	movgt	r0, #1069547520	; 0x3fc00000
  108fbc:	c2800603 	addgt	r0, r0, #3145728	; 0x300000
  108fc0:	c3a01000 	movgt	r1, #0	; 0x0
  108fc4:	ca000003 	bgt	108fd8 <_mprec_log10+0x2c>
  108fc8:	e59f3024 	ldr	r3, [pc, #36]	; 108ff4 <.text+0x8ff4>
  108fcc:	e0833184 	add	r3, r3, r4, lsl #3
  108fd0:	e8930003 	ldmia	r3, {r0, r1}
  108fd4:	e8bd8010 	ldmia	sp!, {r4, pc}
  108fd8:	e3a02101 	mov	r2, #1073741824	; 0x40000000
  108fdc:	e2822709 	add	r2, r2, #2359296	; 0x240000
  108fe0:	e3a03000 	mov	r3, #0	; 0x0
  108fe4:	eb000424 	bl	10a07c <__aeabi_dmul>
  108fe8:	e2544001 	subs	r4, r4, #1	; 0x1
  108fec:	1afffff9 	bne	108fd8 <_mprec_log10+0x2c>
  108ff0:	e8bd8010 	ldmia	sp!, {r4, pc}
  108ff4:	0010a814 	andeqs	sl, r0, r4, lsl r8

00108ff8 <_Balloc>:
  108ff8:	e590c04c 	ldr	ip, [r0, #76]
  108ffc:	e35c0000 	cmp	ip, #0	; 0x0
  109000:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  109004:	e3a02010 	mov	r2, #16	; 0x10
  109008:	e1a06001 	mov	r6, r1
  10900c:	e1a04000 	mov	r4, r0
  109010:	e3a01004 	mov	r1, #4	; 0x4
  109014:	0a00000c 	beq	10904c <_Balloc+0x54>
  109018:	e79c5106 	ldr	r5, [ip, r6, lsl #2]
  10901c:	e3550000 	cmp	r5, #0	; 0x0
  109020:	15953000 	ldrne	r3, [r5]
  109024:	e3a02001 	mov	r2, #1	; 0x1
  109028:	e1a00004 	mov	r0, r4
  10902c:	e1a01002 	mov	r1, r2
  109030:	178c3106 	strne	r3, [ip, r6, lsl #2]
  109034:	0a00000b 	beq	109068 <_Balloc+0x70>
  109038:	e3a03000 	mov	r3, #0	; 0x0
  10903c:	e585300c 	str	r3, [r5, #12]
  109040:	e5853010 	str	r3, [r5, #16]
  109044:	e1a00005 	mov	r0, r5
  109048:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10904c:	eb000298 	bl	109ab4 <_calloc_r>
  109050:	e3500000 	cmp	r0, #0	; 0x0
  109054:	e1a0c000 	mov	ip, r0
  109058:	e1a05000 	mov	r5, r0
  10905c:	e584004c 	str	r0, [r4, #76]
  109060:	1affffec 	bne	109018 <_Balloc+0x20>
  109064:	eafffff6 	b	109044 <_Balloc+0x4c>
  109068:	e1a04612 	mov	r4, r2, lsl r6
  10906c:	e1a02104 	mov	r2, r4, lsl #2
  109070:	e2822014 	add	r2, r2, #20	; 0x14
  109074:	eb00028e 	bl	109ab4 <_calloc_r>
  109078:	e3500000 	cmp	r0, #0	; 0x0
  10907c:	0afffff0 	beq	109044 <_Balloc+0x4c>
  109080:	e1a05000 	mov	r5, r0
  109084:	e5806004 	str	r6, [r0, #4]
  109088:	e5804008 	str	r4, [r0, #8]
  10908c:	eaffffe9 	b	109038 <_Balloc+0x40>

00109090 <_d2b>:
  109090:	e92d47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  109094:	e1a04001 	mov	r4, r1
  109098:	e24dd008 	sub	sp, sp, #8	; 0x8
  10909c:	e3a01001 	mov	r1, #1	; 0x1
  1090a0:	e1a05002 	mov	r5, r2
  1090a4:	e1a0a003 	mov	sl, r3
  1090a8:	e59d9028 	ldr	r9, [sp, #40]
  1090ac:	ebffffd1 	bl	108ff8 <_Balloc>
  1090b0:	e3c42102 	bic	r2, r4, #-2147483648	; 0x80000000
  1090b4:	e3c434ff 	bic	r3, r4, #-16777216	; 0xff000000
  1090b8:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000
  1090bc:	e1b07a22 	movs	r7, r2, lsr #20
  1090c0:	e58d3000 	str	r3, [sp]
  1090c4:	13833601 	orrne	r3, r3, #1048576	; 0x100000
  1090c8:	158d3000 	strne	r3, [sp]
  1090cc:	e3550000 	cmp	r5, #0	; 0x0
  1090d0:	e1a06000 	mov	r6, r0
  1090d4:	e2808014 	add	r8, r0, #20	; 0x14
  1090d8:	0a000022 	beq	109168 <_d2b+0xd8>
  1090dc:	e28d0008 	add	r0, sp, #8	; 0x8
  1090e0:	e5205004 	str	r5, [r0, #-4]!
  1090e4:	ebffff10 	bl	108d2c <_lo0bits>
  1090e8:	e3500000 	cmp	r0, #0	; 0x0
  1090ec:	0a000030 	beq	1091b4 <_d2b+0x124>
  1090f0:	e89d000c 	ldmia	sp, {r2, r3}
  1090f4:	e2601020 	rsb	r1, r0, #32	; 0x20
  1090f8:	e1833112 	orr	r3, r3, r2, lsl r1
  1090fc:	e5863014 	str	r3, [r6, #20]
  109100:	e59d3000 	ldr	r3, [sp]
  109104:	e1a03033 	mov	r3, r3, lsr r0
  109108:	e58d3000 	str	r3, [sp]
  10910c:	e3530000 	cmp	r3, #0	; 0x0
  109110:	03a04001 	moveq	r4, #1	; 0x1
  109114:	13a04002 	movne	r4, #2	; 0x2
  109118:	e3570000 	cmp	r7, #0	; 0x0
  10911c:	e5883004 	str	r3, [r8, #4]
  109120:	10803007 	addne	r3, r0, r7
  109124:	12433e43 	subne	r3, r3, #1072	; 0x430
  109128:	12433003 	subne	r3, r3, #3	; 0x3
  10912c:	12602035 	rsbne	r2, r0, #53	; 0x35
  109130:	e5864010 	str	r4, [r6, #16]
  109134:	158a3000 	strne	r3, [sl]
  109138:	15892000 	strne	r2, [r9]
  10913c:	1a000019 	bne	1091a8 <_d2b+0x118>
  109140:	e2403e43 	sub	r3, r0, #1072	; 0x430
  109144:	e0882104 	add	r2, r8, r4, lsl #2
  109148:	e2433002 	sub	r3, r3, #2	; 0x2
  10914c:	e58a3000 	str	r3, [sl]
  109150:	e5120004 	ldr	r0, [r2, #-4]
  109154:	ebfffede 	bl	108cd4 <_hi0bits>
  109158:	e1a04284 	mov	r4, r4, lsl #5
  10915c:	e0604004 	rsb	r4, r0, r4
  109160:	e5894000 	str	r4, [r9]
  109164:	ea00000f 	b	1091a8 <_d2b+0x118>
  109168:	e1a0000d 	mov	r0, sp
  10916c:	ebfffeee 	bl	108d2c <_lo0bits>
  109170:	e59d3000 	ldr	r3, [sp]
  109174:	e3570000 	cmp	r7, #0	; 0x0
  109178:	e2800020 	add	r0, r0, #32	; 0x20
  10917c:	e5863014 	str	r3, [r6, #20]
  109180:	10803007 	addne	r3, r0, r7
  109184:	e3a02001 	mov	r2, #1	; 0x1
  109188:	12433e43 	subne	r3, r3, #1072	; 0x430
  10918c:	e5862010 	str	r2, [r6, #16]
  109190:	e1a04002 	mov	r4, r2
  109194:	12433003 	subne	r3, r3, #3	; 0x3
  109198:	12602035 	rsbne	r2, r0, #53	; 0x35
  10919c:	158a3000 	strne	r3, [sl]
  1091a0:	15892000 	strne	r2, [r9]
  1091a4:	0affffe5 	beq	109140 <_d2b+0xb0>
  1091a8:	e1a00006 	mov	r0, r6
  1091ac:	e28dd008 	add	sp, sp, #8	; 0x8
  1091b0:	e8bd87f0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  1091b4:	e59d3004 	ldr	r3, [sp, #4]
  1091b8:	e5863014 	str	r3, [r6, #20]
  1091bc:	e59d3000 	ldr	r3, [sp]
  1091c0:	eaffffd1 	b	10910c <_d2b+0x7c>

001091c4 <__mdiff>:
  1091c4:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  1091c8:	e1a04001 	mov	r4, r1
  1091cc:	e1a07000 	mov	r7, r0
  1091d0:	e1a01002 	mov	r1, r2
  1091d4:	e1a00004 	mov	r0, r4
  1091d8:	e1a05002 	mov	r5, r2
  1091dc:	ebfffef7 	bl	108dc0 <__mcmp>
  1091e0:	e2506000 	subs	r6, r0, #0	; 0x0
  1091e4:	0a00003a 	beq	1092d4 <__mdiff+0x110>
  1091e8:	b1a03005 	movlt	r3, r5
  1091ec:	b1a05004 	movlt	r5, r4
  1091f0:	b1a04003 	movlt	r4, r3
  1091f4:	e1a00007 	mov	r0, r7
  1091f8:	e5941004 	ldr	r1, [r4, #4]
  1091fc:	b3a0a001 	movlt	sl, #1	; 0x1
  109200:	a3a0a000 	movge	sl, #0	; 0x0
  109204:	ebffff7b 	bl	108ff8 <_Balloc>
  109208:	e5953010 	ldr	r3, [r5, #16]
  10920c:	e5946010 	ldr	r6, [r4, #16]
  109210:	e284e014 	add	lr, r4, #20	; 0x14
  109214:	e2854014 	add	r4, r5, #20	; 0x14
  109218:	e580a00c 	str	sl, [r0, #12]
  10921c:	e1a08000 	mov	r8, r0
  109220:	e0847103 	add	r7, r4, r3, lsl #2
  109224:	e08ea106 	add	sl, lr, r6, lsl #2
  109228:	e280c014 	add	ip, r0, #20	; 0x14
  10922c:	e3a05000 	mov	r5, #0	; 0x0
  109230:	e4942004 	ldr	r2, [r4], #4
  109234:	e49e0004 	ldr	r0, [lr], #4
  109238:	e1a01802 	mov	r1, r2, lsl #16
  10923c:	e1a03800 	mov	r3, r0, lsl #16
  109240:	e1a03823 	mov	r3, r3, lsr #16
  109244:	e1a01821 	mov	r1, r1, lsr #16
  109248:	e0613003 	rsb	r3, r1, r3
  10924c:	e1a02822 	mov	r2, r2, lsr #16
  109250:	e0833005 	add	r3, r3, r5
  109254:	e0622820 	rsb	r2, r2, r0, lsr #16
  109258:	e0822843 	add	r2, r2, r3, asr #16
  10925c:	e1570004 	cmp	r7, r4
  109260:	e1cc20b2 	strh	r2, [ip, #2]
  109264:	e1a05842 	mov	r5, r2, asr #16
  109268:	e0cc30b4 	strh	r3, [ip], #4
  10926c:	8affffef 	bhi	109230 <__mdiff+0x6c>
  109270:	e15a000e 	cmp	sl, lr
  109274:	9a00000a 	bls	1092a4 <__mdiff+0xe0>
  109278:	e49e3004 	ldr	r3, [lr], #4
  10927c:	e1a02803 	mov	r2, r3, lsl #16
  109280:	e1a02822 	mov	r2, r2, lsr #16
  109284:	e0822005 	add	r2, r2, r5
  109288:	e1a01842 	mov	r1, r2, asr #16
  10928c:	e0811823 	add	r1, r1, r3, lsr #16
  109290:	e15a000e 	cmp	sl, lr
  109294:	e1cc10b2 	strh	r1, [ip, #2]
  109298:	e1a05841 	mov	r5, r1, asr #16
  10929c:	e0cc20b4 	strh	r2, [ip], #4
  1092a0:	8afffff4 	bhi	109278 <__mdiff+0xb4>
  1092a4:	e51c3004 	ldr	r3, [ip, #-4]
  1092a8:	e3530000 	cmp	r3, #0	; 0x0
  1092ac:	1a000005 	bne	1092c8 <__mdiff+0x104>
  1092b0:	e1a0200c 	mov	r2, ip
  1092b4:	e5123008 	ldr	r3, [r2, #-8]
  1092b8:	e3530000 	cmp	r3, #0	; 0x0
  1092bc:	e2466001 	sub	r6, r6, #1	; 0x1
  1092c0:	e2422004 	sub	r2, r2, #4	; 0x4
  1092c4:	0afffffa 	beq	1092b4 <__mdiff+0xf0>
  1092c8:	e1a00008 	mov	r0, r8
  1092cc:	e5886010 	str	r6, [r8, #16]
  1092d0:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}
  1092d4:	e1a00007 	mov	r0, r7
  1092d8:	e1a01006 	mov	r1, r6
  1092dc:	ebffff45 	bl	108ff8 <_Balloc>
  1092e0:	e3a03001 	mov	r3, #1	; 0x1
  1092e4:	e1a08000 	mov	r8, r0
  1092e8:	e5803010 	str	r3, [r0, #16]
  1092ec:	e5806014 	str	r6, [r0, #20]
  1092f0:	e1a00008 	mov	r0, r8
  1092f4:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}

001092f8 <_lshift>:
  1092f8:	e5913010 	ldr	r3, [r1, #16]
  1092fc:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  109300:	e2833001 	add	r3, r3, #1	; 0x1
  109304:	e1a042c2 	mov	r4, r2, asr #5
  109308:	e1a06002 	mov	r6, r2
  10930c:	e5912008 	ldr	r2, [r1, #8]
  109310:	e0845003 	add	r5, r4, r3
  109314:	e1550002 	cmp	r5, r2
  109318:	e1a07001 	mov	r7, r1
  10931c:	e1a0a000 	mov	sl, r0
  109320:	e5911004 	ldr	r1, [r1, #4]
  109324:	da000003 	ble	109338 <_lshift+0x40>
  109328:	e1a02082 	mov	r2, r2, lsl #1
  10932c:	e1550002 	cmp	r5, r2
  109330:	e2811001 	add	r1, r1, #1	; 0x1
  109334:	cafffffb 	bgt	109328 <_lshift+0x30>
  109338:	e1a0000a 	mov	r0, sl
  10933c:	ebffff2d 	bl	108ff8 <_Balloc>
  109340:	e3540000 	cmp	r4, #0	; 0x0
  109344:	e1a08000 	mov	r8, r0
  109348:	e2800014 	add	r0, r0, #20	; 0x14
  10934c:	da000007 	ble	109370 <_lshift+0x78>
  109350:	e3a03000 	mov	r3, #0	; 0x0
  109354:	e1a02000 	mov	r2, r0
  109358:	e1a01003 	mov	r1, r3
  10935c:	e2833001 	add	r3, r3, #1	; 0x1
  109360:	e1540003 	cmp	r4, r3
  109364:	e4821004 	str	r1, [r2], #4
  109368:	1afffffb 	bne	10935c <_lshift+0x64>
  10936c:	e0800104 	add	r0, r0, r4, lsl #2
  109370:	e5973010 	ldr	r3, [r7, #16]
  109374:	e2871014 	add	r1, r7, #20	; 0x14
  109378:	e216401f 	ands	r4, r6, #31	; 0x1f
  10937c:	e081c103 	add	ip, r1, r3, lsl #2
  109380:	0a000012 	beq	1093d0 <_lshift+0xd8>
  109384:	e264e020 	rsb	lr, r4, #32	; 0x20
  109388:	e3a02000 	mov	r2, #0	; 0x0
  10938c:	e5913000 	ldr	r3, [r1]
  109390:	e1823413 	orr	r3, r2, r3, lsl r4
  109394:	e4803004 	str	r3, [r0], #4
  109398:	e4912004 	ldr	r2, [r1], #4
  10939c:	e15c0001 	cmp	ip, r1
  1093a0:	e1a02e32 	mov	r2, r2, lsr lr
  1093a4:	8afffff8 	bhi	10938c <_lshift+0x94>
  1093a8:	e3520000 	cmp	r2, #0	; 0x0
  1093ac:	e5802000 	str	r2, [r0]
  1093b0:	12855001 	addne	r5, r5, #1	; 0x1
  1093b4:	e2453001 	sub	r3, r5, #1	; 0x1
  1093b8:	e1a0000a 	mov	r0, sl
  1093bc:	e5883010 	str	r3, [r8, #16]
  1093c0:	e1a01007 	mov	r1, r7
  1093c4:	ebfffe3b 	bl	108cb8 <_Bfree>
  1093c8:	e1a00008 	mov	r0, r8
  1093cc:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}
  1093d0:	e4913004 	ldr	r3, [r1], #4
  1093d4:	e15c0001 	cmp	ip, r1
  1093d8:	e4803004 	str	r3, [r0], #4
  1093dc:	9afffff4 	bls	1093b4 <_lshift+0xbc>
  1093e0:	e4913004 	ldr	r3, [r1], #4
  1093e4:	e15c0001 	cmp	ip, r1
  1093e8:	e4803004 	str	r3, [r0], #4
  1093ec:	8afffff7 	bhi	1093d0 <_lshift+0xd8>
  1093f0:	eaffffef 	b	1093b4 <_lshift+0xbc>

001093f4 <_multiply>:
  1093f4:	e92d4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  1093f8:	e5918010 	ldr	r8, [r1, #16]
  1093fc:	e5925010 	ldr	r5, [r2, #16]
  109400:	e1580005 	cmp	r8, r5
  109404:	b1a03002 	movlt	r3, r2
  109408:	e1a06002 	mov	r6, r2
  10940c:	b1a06001 	movlt	r6, r1
  109410:	e1a04001 	mov	r4, r1
  109414:	b1a08005 	movlt	r8, r5
  109418:	b1a04003 	movlt	r4, r3
  10941c:	b5965010 	ldrlt	r5, [r6, #16]
  109420:	e994000a 	ldmib	r4, {r1, r3}
  109424:	e0889005 	add	r9, r8, r5
  109428:	e1590003 	cmp	r9, r3
  10942c:	e24dd00c 	sub	sp, sp, #12	; 0xc
  109430:	c2811001 	addgt	r1, r1, #1	; 0x1
  109434:	ebfffeef 	bl	108ff8 <_Balloc>
  109438:	e2801014 	add	r1, r0, #20	; 0x14
  10943c:	e58d0000 	str	r0, [sp]
  109440:	e0810109 	add	r0, r1, r9, lsl #2
  109444:	e1510000 	cmp	r1, r0
  109448:	e58d0004 	str	r0, [sp, #4]
  10944c:	2a000005 	bcs	109468 <_multiply+0x74>
  109450:	e1a03001 	mov	r3, r1
  109454:	e3a02000 	mov	r2, #0	; 0x0
  109458:	e4832004 	str	r2, [r3], #4
  10945c:	e59d0004 	ldr	r0, [sp, #4]
  109460:	e1500003 	cmp	r0, r3
  109464:	8afffffb 	bhi	109458 <_multiply+0x64>
  109468:	e2867014 	add	r7, r6, #20	; 0x14
  10946c:	e0875105 	add	r5, r7, r5, lsl #2
  109470:	e284b014 	add	fp, r4, #20	; 0x14
  109474:	e1570005 	cmp	r7, r5
  109478:	e58d5008 	str	r5, [sp, #8]
  10947c:	e08b8108 	add	r8, fp, r8, lsl #2
  109480:	2a000038 	bcs	109568 <_multiply+0x174>
  109484:	e1a0a001 	mov	sl, r1
  109488:	e5973000 	ldr	r3, [r7]
  10948c:	e1a06803 	mov	r6, r3, lsl #16
  109490:	e1a06826 	mov	r6, r6, lsr #16
  109494:	e3560000 	cmp	r6, #0	; 0x0
  109498:	0a000015 	beq	1094f4 <_multiply+0x100>
  10949c:	e1a0500b 	mov	r5, fp
  1094a0:	e1a0400a 	mov	r4, sl
  1094a4:	e3a03000 	mov	r3, #0	; 0x0
  1094a8:	e594c000 	ldr	ip, [r4]
  1094ac:	e4950004 	ldr	r0, [r5], #4
  1094b0:	e1a0280c 	mov	r2, ip, lsl #16
  1094b4:	e1a01800 	mov	r1, r0, lsl #16
  1094b8:	e1a02822 	mov	r2, r2, lsr #16
  1094bc:	e0832002 	add	r2, r3, r2
  1094c0:	e1a01821 	mov	r1, r1, lsr #16
  1094c4:	e1a00820 	mov	r0, r0, lsr #16
  1094c8:	e1a0c82c 	mov	ip, ip, lsr #16
  1094cc:	e02e2691 	mla	lr, r1, r6, r2
  1094d0:	e023c690 	mla	r3, r0, r6, ip
  1094d4:	e1580005 	cmp	r8, r5
  1094d8:	e083382e 	add	r3, r3, lr, lsr #16
  1094dc:	e1c430b2 	strh	r3, [r4, #2]
  1094e0:	e0c4e0b4 	strh	lr, [r4], #4
  1094e4:	e1a03823 	mov	r3, r3, lsr #16
  1094e8:	8affffee 	bhi	1094a8 <_multiply+0xb4>
  1094ec:	e5843000 	str	r3, [r4]
  1094f0:	e5973000 	ldr	r3, [r7]
  1094f4:	e1b05823 	movs	r5, r3, lsr #16
  1094f8:	0a000015 	beq	109554 <_multiply+0x160>
  1094fc:	e59ae000 	ldr	lr, [sl]
  109500:	e1a0c00a 	mov	ip, sl
  109504:	e1a0400b 	mov	r4, fp
  109508:	e3a00000 	mov	r0, #0	; 0x0
  10950c:	e4941004 	ldr	r1, [r4], #4
  109510:	e59c2000 	ldr	r2, [ip]
  109514:	e1a03801 	mov	r3, r1, lsl #16
  109518:	e0802822 	add	r2, r0, r2, lsr #16
  10951c:	e1a03823 	mov	r3, r3, lsr #16
  109520:	e0202593 	mla	r0, r3, r5, r2
  109524:	e1cce0b0 	strh	lr, [ip]
  109528:	e1cc00b2 	strh	r0, [ip, #2]
  10952c:	e5bc3004 	ldr	r3, [ip, #4]!
  109530:	e1a03803 	mov	r3, r3, lsl #16
  109534:	e1a01821 	mov	r1, r1, lsr #16
  109538:	e1a03823 	mov	r3, r3, lsr #16
  10953c:	e0223591 	mla	r2, r1, r5, r3
  109540:	e1580004 	cmp	r8, r4
  109544:	e082e820 	add	lr, r2, r0, lsr #16
  109548:	e1a0082e 	mov	r0, lr, lsr #16
  10954c:	8affffee 	bhi	10950c <_multiply+0x118>
  109550:	e58ce000 	str	lr, [ip]
  109554:	e59d2008 	ldr	r2, [sp, #8]
  109558:	e2877004 	add	r7, r7, #4	; 0x4
  10955c:	e1520007 	cmp	r2, r7
  109560:	828aa004 	addhi	sl, sl, #4	; 0x4
  109564:	8affffc7 	bhi	109488 <_multiply+0x94>
  109568:	e3590000 	cmp	r9, #0	; 0x0
  10956c:	da00000b 	ble	1095a0 <_multiply+0x1ac>
  109570:	e59d0004 	ldr	r0, [sp, #4]
  109574:	e5103004 	ldr	r3, [r0, #-4]
  109578:	e3530000 	cmp	r3, #0	; 0x0
  10957c:	1a000007 	bne	1095a0 <_multiply+0x1ac>
  109580:	e1a02000 	mov	r2, r0
  109584:	ea000003 	b	109598 <_multiply+0x1a4>
  109588:	e5123008 	ldr	r3, [r2, #-8]
  10958c:	e3530000 	cmp	r3, #0	; 0x0
  109590:	e2422004 	sub	r2, r2, #4	; 0x4
  109594:	1a000001 	bne	1095a0 <_multiply+0x1ac>
  109598:	e2599001 	subs	r9, r9, #1	; 0x1
  10959c:	1afffff9 	bne	109588 <_multiply+0x194>
  1095a0:	e59d2000 	ldr	r2, [sp]
  1095a4:	e1a00002 	mov	r0, r2
  1095a8:	e5829010 	str	r9, [r2, #16]
  1095ac:	e28dd00c 	add	sp, sp, #12	; 0xc
  1095b0:	e8bd8ff0 	ldmia	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

001095b4 <_i2b>:
  1095b4:	e92d4010 	stmdb	sp!, {r4, lr}
  1095b8:	e1a04001 	mov	r4, r1
  1095bc:	e3a01001 	mov	r1, #1	; 0x1
  1095c0:	ebfffe8c 	bl	108ff8 <_Balloc>
  1095c4:	e3a03001 	mov	r3, #1	; 0x1
  1095c8:	e5803010 	str	r3, [r0, #16]
  1095cc:	e5804014 	str	r4, [r0, #20]
  1095d0:	e8bd8010 	ldmia	sp!, {r4, pc}

001095d4 <_multadd>:
  1095d4:	e92d41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1095d8:	e5916010 	ldr	r6, [r1, #16]
  1095dc:	e1a07001 	mov	r7, r1
  1095e0:	e1a08000 	mov	r8, r0
  1095e4:	e1a04002 	mov	r4, r2
  1095e8:	e1a05003 	mov	r5, r3
  1095ec:	e281c014 	add	ip, r1, #20	; 0x14
  1095f0:	e3a0e000 	mov	lr, #0	; 0x0
  1095f4:	e59c1000 	ldr	r1, [ip]
  1095f8:	e1a03801 	mov	r3, r1, lsl #16
  1095fc:	e1a03823 	mov	r3, r3, lsr #16
  109600:	e0225394 	mla	r2, r4, r3, r5
  109604:	e1a01821 	mov	r1, r1, lsr #16
  109608:	e1a03822 	mov	r3, r2, lsr #16
  10960c:	e0203194 	mla	r0, r4, r1, r3
  109610:	e1a02802 	mov	r2, r2, lsl #16
  109614:	e1a02822 	mov	r2, r2, lsr #16
  109618:	e28ee001 	add	lr, lr, #1	; 0x1
  10961c:	e0822800 	add	r2, r2, r0, lsl #16
  109620:	e156000e 	cmp	r6, lr
  109624:	e48c2004 	str	r2, [ip], #4
  109628:	e1a05820 	mov	r5, r0, lsr #16
  10962c:	cafffff0 	bgt	1095f4 <_multadd+0x20>
  109630:	e3550000 	cmp	r5, #0	; 0x0
  109634:	0a000006 	beq	109654 <_multadd+0x80>
  109638:	e5973008 	ldr	r3, [r7, #8]
  10963c:	e1560003 	cmp	r6, r3
  109640:	aa000005 	bge	10965c <_multadd+0x88>
  109644:	e2862001 	add	r2, r6, #1	; 0x1
  109648:	e0873106 	add	r3, r7, r6, lsl #2
  10964c:	e5835014 	str	r5, [r3, #20]
  109650:	e5872010 	str	r2, [r7, #16]
  109654:	e1a00007 	mov	r0, r7
  109658:	e8bd81f0 	ldmia	sp!, {r4, r5, r6, r7, r8, pc}
  10965c:	e5971004 	ldr	r1, [r7, #4]
  109660:	e1a00008 	mov	r0, r8
  109664:	e2811001 	add	r1, r1, #1	; 0x1
  109668:	ebfffe62 	bl	108ff8 <_Balloc>
  10966c:	e5972010 	ldr	r2, [r7, #16]
  109670:	e1a02102 	mov	r2, r2, lsl #2
  109674:	e287100c 	add	r1, r7, #12	; 0xc
  109678:	e1a04000 	mov	r4, r0
  10967c:	e2822008 	add	r2, r2, #8	; 0x8
  109680:	e280000c 	add	r0, r0, #12	; 0xc
  109684:	ebfffd25 	bl	108b20 <memcpy>
  109688:	e1a01007 	mov	r1, r7
  10968c:	e1a00008 	mov	r0, r8
  109690:	ebfffd88 	bl	108cb8 <_Bfree>
  109694:	e1a07004 	mov	r7, r4
  109698:	eaffffe9 	b	109644 <_multadd+0x70>

0010969c <_pow5mult>:
  10969c:	e92d41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  1096a0:	e1a04002 	mov	r4, r2
  1096a4:	e2122003 	ands	r2, r2, #3	; 0x3
  1096a8:	e1a07000 	mov	r7, r0
  1096ac:	e1a08001 	mov	r8, r1
  1096b0:	1a000025 	bne	10974c <_pow5mult+0xb0>
  1096b4:	e1b06144 	movs	r6, r4, asr #2
  1096b8:	0a00001c 	beq	109730 <_pow5mult+0x94>
  1096bc:	e5975048 	ldr	r5, [r7, #72]
  1096c0:	e3550000 	cmp	r5, #0	; 0x0
  1096c4:	1a000009 	bne	1096f0 <_pow5mult+0x54>
  1096c8:	ea000026 	b	109768 <_pow5mult+0xcc>
  1096cc:	e1b060c6 	movs	r6, r6, asr #1
  1096d0:	e1a01005 	mov	r1, r5
  1096d4:	e1a02005 	mov	r2, r5
  1096d8:	e1a00007 	mov	r0, r7
  1096dc:	0a000013 	beq	109730 <_pow5mult+0x94>
  1096e0:	e5954000 	ldr	r4, [r5]
  1096e4:	e3540000 	cmp	r4, #0	; 0x0
  1096e8:	0a000012 	beq	109738 <_pow5mult+0x9c>
  1096ec:	e1a05004 	mov	r5, r4
  1096f0:	e3160001 	tst	r6, #1	; 0x1
  1096f4:	e1a02005 	mov	r2, r5
  1096f8:	e1a00007 	mov	r0, r7
  1096fc:	e1a01008 	mov	r1, r8
  109700:	0afffff1 	beq	1096cc <_pow5mult+0x30>
  109704:	ebffff3a 	bl	1093f4 <_multiply>
  109708:	e1a01008 	mov	r1, r8
  10970c:	e1a04000 	mov	r4, r0
  109710:	e1a00007 	mov	r0, r7
  109714:	ebfffd67 	bl	108cb8 <_Bfree>
  109718:	e1b060c6 	movs	r6, r6, asr #1
  10971c:	e1a08004 	mov	r8, r4
  109720:	e1a01005 	mov	r1, r5
  109724:	e1a02005 	mov	r2, r5
  109728:	e1a00007 	mov	r0, r7
  10972c:	1affffeb 	bne	1096e0 <_pow5mult+0x44>
  109730:	e1a00008 	mov	r0, r8
  109734:	e8bd81f0 	ldmia	sp!, {r4, r5, r6, r7, r8, pc}
  109738:	ebffff2d 	bl	1093f4 <_multiply>
  10973c:	e5850000 	str	r0, [r5]
  109740:	e1a05000 	mov	r5, r0
  109744:	e5804000 	str	r4, [r0]
  109748:	eaffffe8 	b	1096f0 <_pow5mult+0x54>
  10974c:	e59f3038 	ldr	r3, [pc, #56]	; 10978c <.text+0x978c>
  109750:	e0833102 	add	r3, r3, r2, lsl #2
  109754:	e5132004 	ldr	r2, [r3, #-4]
  109758:	e3a03000 	mov	r3, #0	; 0x0
  10975c:	ebffff9c 	bl	1095d4 <_multadd>
  109760:	e1a08000 	mov	r8, r0
  109764:	eaffffd2 	b	1096b4 <_pow5mult+0x18>
  109768:	e3a01e27 	mov	r1, #624	; 0x270
  10976c:	e2811001 	add	r1, r1, #1	; 0x1
  109770:	e1a00007 	mov	r0, r7
  109774:	ebffff8e 	bl	1095b4 <_i2b>
  109778:	e3a03000 	mov	r3, #0	; 0x0
  10977c:	e1a05000 	mov	r5, r0
  109780:	e5870048 	str	r0, [r7, #72]
  109784:	e5803000 	str	r3, [r0]
  109788:	eaffffd8 	b	1096f0 <_pow5mult+0x54>
  10978c:	0010a92c 	andeqs	sl, r0, ip, lsr #18

00109790 <_s2b>:
  109790:	e59fc0dc 	ldr	ip, [pc, #220]	; 109874 <.text+0x9874>
  109794:	e92d45f0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, lr}
  109798:	e1a08003 	mov	r8, r3
  10979c:	e2833008 	add	r3, r3, #8	; 0x8
  1097a0:	e0ce439c 	smull	r4, lr, ip, r3
  1097a4:	e1a03fc3 	mov	r3, r3, asr #31
  1097a8:	e063c0ce 	rsb	ip, r3, lr, asr #1
  1097ac:	e35c0001 	cmp	ip, #1	; 0x1
  1097b0:	e1a07001 	mov	r7, r1
  1097b4:	e1a06000 	mov	r6, r0
  1097b8:	e1a05002 	mov	r5, r2
  1097bc:	d3a01000 	movle	r1, #0	; 0x0
  1097c0:	da000005 	ble	1097dc <_s2b+0x4c>
  1097c4:	e3a03001 	mov	r3, #1	; 0x1
  1097c8:	e3a01000 	mov	r1, #0	; 0x0
  1097cc:	e1a03083 	mov	r3, r3, lsl #1
  1097d0:	e15c0003 	cmp	ip, r3
  1097d4:	e2811001 	add	r1, r1, #1	; 0x1
  1097d8:	cafffffb 	bgt	1097cc <_s2b+0x3c>
  1097dc:	e1a00006 	mov	r0, r6
  1097e0:	ebfffe04 	bl	108ff8 <_Balloc>
  1097e4:	e59d301c 	ldr	r3, [sp, #28]
  1097e8:	e3550009 	cmp	r5, #9	; 0x9
  1097ec:	e3a02001 	mov	r2, #1	; 0x1
  1097f0:	e5802010 	str	r2, [r0, #16]
  1097f4:	e5803014 	str	r3, [r0, #20]
  1097f8:	d287700a 	addle	r7, r7, #10	; 0xa
  1097fc:	d3a02009 	movle	r2, #9	; 0x9
  109800:	da00000d 	ble	10983c <_s2b+0xac>
  109804:	e287a009 	add	sl, r7, #9	; 0x9
  109808:	e3a04009 	mov	r4, #9	; 0x9
  10980c:	e7d43007 	ldrb	r3, [r4, r7]
  109810:	e1a01000 	mov	r1, r0
  109814:	e2433030 	sub	r3, r3, #48	; 0x30
  109818:	e2844001 	add	r4, r4, #1	; 0x1
  10981c:	e1a00006 	mov	r0, r6
  109820:	e3a0200a 	mov	r2, #10	; 0xa
  109824:	ebffff6a 	bl	1095d4 <_multadd>
  109828:	e1550004 	cmp	r5, r4
  10982c:	1afffff6 	bne	10980c <_s2b+0x7c>
  109830:	e08a3005 	add	r3, sl, r5
  109834:	e2437008 	sub	r7, r3, #8	; 0x8
  109838:	e1a02005 	mov	r2, r5
  10983c:	e1580002 	cmp	r8, r2
  109840:	d8bd85f0 	ldmleia	sp!, {r4, r5, r6, r7, r8, sl, pc}
  109844:	e0625008 	rsb	r5, r2, r8
  109848:	e3a04000 	mov	r4, #0	; 0x0
  10984c:	e7d43007 	ldrb	r3, [r4, r7]
  109850:	e1a01000 	mov	r1, r0
  109854:	e2433030 	sub	r3, r3, #48	; 0x30
  109858:	e2844001 	add	r4, r4, #1	; 0x1
  10985c:	e1a00006 	mov	r0, r6
  109860:	e3a0200a 	mov	r2, #10	; 0xa
  109864:	ebffff5a 	bl	1095d4 <_multadd>
  109868:	e1540005 	cmp	r4, r5
  10986c:	1afffff6 	bne	10984c <_s2b+0xbc>
  109870:	e8bd85f0 	ldmia	sp!, {r4, r5, r6, r7, r8, sl, pc}
  109874:	38e38e39 	stmccia	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^

00109878 <isinf>:
  109878:	e2612000 	rsb	r2, r1, #0	; 0x0
  10987c:	e1822001 	orr	r2, r2, r1
  109880:	e3c03102 	bic	r3, r0, #-2147483648	; 0x80000000
  109884:	e3a0047f 	mov	r0, #2130706432	; 0x7f000000
  109888:	e1833fa2 	orr	r3, r3, r2, lsr #31
  10988c:	e280060f 	add	r0, r0, #15728640	; 0xf00000
  109890:	e0630000 	rsb	r0, r3, r0
  109894:	e52d4004 	str	r4, [sp, #-4]!
  109898:	e2602000 	rsb	r2, r0, #0	; 0x0
  10989c:	e1800002 	orr	r0, r0, r2
  1098a0:	e1a00fa0 	mov	r0, r0, lsr #31
  1098a4:	e1a04001 	mov	r4, r1
  1098a8:	e2600001 	rsb	r0, r0, #1	; 0x1
  1098ac:	e8bd0010 	ldmia	sp!, {r4}
  1098b0:	e12fff1e 	bx	lr

001098b4 <isnan>:
  1098b4:	e52d4004 	str	r4, [sp, #-4]!
  1098b8:	e2612000 	rsb	r2, r1, #0	; 0x0
  1098bc:	e1822001 	orr	r2, r2, r1
  1098c0:	e3c03102 	bic	r3, r0, #-2147483648	; 0x80000000
  1098c4:	e3a0047f 	mov	r0, #2130706432	; 0x7f000000
  1098c8:	e1833fa2 	orr	r3, r3, r2, lsr #31
  1098cc:	e280060f 	add	r0, r0, #15728640	; 0xf00000
  1098d0:	e0630000 	rsb	r0, r3, r0
  1098d4:	e1a04001 	mov	r4, r1
  1098d8:	e1a00fa0 	mov	r0, r0, lsr #31
  1098dc:	e8bd0010 	ldmia	sp!, {r4}
  1098e0:	e12fff1e 	bx	lr

001098e4 <__sclose>:
  1098e4:	e59f3008 	ldr	r3, [pc, #8]	; 1098f4 <.text+0x98f4>
  1098e8:	e1d010fe 	ldrsh	r1, [r0, #14]
  1098ec:	e5930000 	ldr	r0, [r3]
  1098f0:	eaffdaba 	b	1003e0 <_close_r>
  1098f4:	00200184 	eoreq	r0, r0, r4, lsl #3

001098f8 <__sseek>:
  1098f8:	e1a03002 	mov	r3, r2
  1098fc:	e59f2038 	ldr	r2, [pc, #56]	; 10993c <.text+0x993c>
  109900:	e92d4010 	stmdb	sp!, {r4, lr}
  109904:	e1a04000 	mov	r4, r0
  109908:	e5920000 	ldr	r0, [r2]
  10990c:	e1a02001 	mov	r2, r1
  109910:	e1d410fe 	ldrsh	r1, [r4, #14]
  109914:	ebffdab3 	bl	1003e8 <_lseek_r>
  109918:	e3700001 	cmn	r0, #1	; 0x1
  10991c:	01d430bc 	ldreqh	r3, [r4, #12]
  109920:	11d430bc 	ldrneh	r3, [r4, #12]
  109924:	03c33a01 	biceq	r3, r3, #4096	; 0x1000
  109928:	13833a01 	orrne	r3, r3, #4096	; 0x1000
  10992c:	01c430bc 	streqh	r3, [r4, #12]
  109930:	11c430bc 	strneh	r3, [r4, #12]
  109934:	15840050 	strne	r0, [r4, #80]
  109938:	e8bd8010 	ldmia	sp!, {r4, pc}
  10993c:	00200184 	eoreq	r0, r0, r4, lsl #3

00109940 <__swrite>:
  109940:	e1d0c0bc 	ldrh	ip, [r0, #12]
  109944:	e31c0c01 	tst	ip, #256	; 0x100
  109948:	e92d40f0 	stmdb	sp!, {r4, r5, r6, r7, lr}
  10994c:	e3a03002 	mov	r3, #2	; 0x2
  109950:	e59f7044 	ldr	r7, [pc, #68]	; 10999c <.text+0x999c>
  109954:	e1a06002 	mov	r6, r2
  109958:	e1a04000 	mov	r4, r0
  10995c:	e1a05001 	mov	r5, r1
  109960:	e3a02000 	mov	r2, #0	; 0x0
  109964:	059f7030 	ldreq	r7, [pc, #48]	; 10999c <.text+0x999c>
  109968:	0a000003 	beq	10997c <__swrite+0x3c>
  10996c:	e5970000 	ldr	r0, [r7]
  109970:	e1d410fe 	ldrsh	r1, [r4, #14]
  109974:	ebffda9b 	bl	1003e8 <_lseek_r>
  109978:	e1d4c0bc 	ldrh	ip, [r4, #12]
  10997c:	e5970000 	ldr	r0, [r7]
  109980:	e1d410fe 	ldrsh	r1, [r4, #14]
  109984:	e3ccca01 	bic	ip, ip, #4096	; 0x1000
  109988:	e1a02005 	mov	r2, r5
  10998c:	e1a03006 	mov	r3, r6
  109990:	e1c4c0bc 	strh	ip, [r4, #12]
  109994:	e8bd40f0 	ldmia	sp!, {r4, r5, r6, r7, lr}
  109998:	eaffdaa4 	b	100430 <_write_r>
  10999c:	00200184 	eoreq	r0, r0, r4, lsl #3

001099a0 <__sread>:
  1099a0:	e1a03002 	mov	r3, r2
  1099a4:	e59f2034 	ldr	r2, [pc, #52]	; 1099e0 <.text+0x99e0>
  1099a8:	e92d4010 	stmdb	sp!, {r4, lr}
  1099ac:	e1a04000 	mov	r4, r0
  1099b0:	e5920000 	ldr	r0, [r2]
  1099b4:	e1a02001 	mov	r2, r1
  1099b8:	e1d410fe 	ldrsh	r1, [r4, #14]
  1099bc:	ebffdaac 	bl	100474 <_read_r>
  1099c0:	e3500000 	cmp	r0, #0	; 0x0
  1099c4:	a5943050 	ldrge	r3, [r4, #80]
  1099c8:	b1d430bc 	ldrlth	r3, [r4, #12]
  1099cc:	a0833000 	addge	r3, r3, r0
  1099d0:	b3c33a01 	biclt	r3, r3, #4096	; 0x1000
  1099d4:	a5843050 	strge	r3, [r4, #80]
  1099d8:	b1c430bc 	strlth	r3, [r4, #12]
  1099dc:	e8bd8010 	ldmia	sp!, {r4, pc}
  1099e0:	00200184 	eoreq	r0, r0, r4, lsl #3

001099e4 <strcmp>:
  1099e4:	e1803001 	orr	r3, r0, r1
  1099e8:	e3130003 	tst	r3, #3	; 0x3
  1099ec:	e1a02000 	mov	r2, r0
  1099f0:	1a00001d 	bne	109a6c <strcmp+0x88>
  1099f4:	e5902000 	ldr	r2, [r0]
  1099f8:	e5913000 	ldr	r3, [r1]
  1099fc:	e1520003 	cmp	r2, r3
  109a00:	1a000018 	bne	109a68 <strcmp+0x84>
  109a04:	e28234ff 	add	r3, r2, #-16777216	; 0xff000000
  109a08:	e2433801 	sub	r3, r3, #65536	; 0x10000
  109a0c:	e2433c01 	sub	r3, r3, #256	; 0x100
  109a10:	e2433001 	sub	r3, r3, #1	; 0x1
  109a14:	e3c3347f 	bic	r3, r3, #2130706432	; 0x7f000000
  109a18:	e3c3387f 	bic	r3, r3, #8323072	; 0x7f0000
  109a1c:	e3c33c7f 	bic	r3, r3, #32512	; 0x7f00
  109a20:	e3c3307f 	bic	r3, r3, #127	; 0x7f
  109a24:	e1d32002 	bics	r2, r3, r2
  109a28:	0a000002 	beq	109a38 <strcmp+0x54>
  109a2c:	ea00001e 	b	109aac <strcmp+0xc8>
  109a30:	e1d2c00c 	bics	ip, r2, ip
  109a34:	1a00001c 	bne	109aac <strcmp+0xc8>
  109a38:	e5b0c004 	ldr	ip, [r0, #4]!
  109a3c:	e28c34ff 	add	r3, ip, #-16777216	; 0xff000000
  109a40:	e2433801 	sub	r3, r3, #65536	; 0x10000
  109a44:	e2433c01 	sub	r3, r3, #256	; 0x100
  109a48:	e2433001 	sub	r3, r3, #1	; 0x1
  109a4c:	e3c3247f 	bic	r2, r3, #2130706432	; 0x7f000000
  109a50:	e5b13004 	ldr	r3, [r1, #4]!
  109a54:	e3c2287f 	bic	r2, r2, #8323072	; 0x7f0000
  109a58:	e3c22c7f 	bic	r2, r2, #32512	; 0x7f00
  109a5c:	e15c0003 	cmp	ip, r3
  109a60:	e3c2207f 	bic	r2, r2, #127	; 0x7f
  109a64:	0afffff1 	beq	109a30 <strcmp+0x4c>
  109a68:	e1a02000 	mov	r2, r0
  109a6c:	e5d23000 	ldrb	r3, [r2]
  109a70:	e3530000 	cmp	r3, #0	; 0x0
  109a74:	1a000004 	bne	109a8c <strcmp+0xa8>
  109a78:	ea000008 	b	109aa0 <strcmp+0xbc>
  109a7c:	e5f23001 	ldrb	r3, [r2, #1]!
  109a80:	e3530000 	cmp	r3, #0	; 0x0
  109a84:	e2811001 	add	r1, r1, #1	; 0x1
  109a88:	0a000004 	beq	109aa0 <strcmp+0xbc>
  109a8c:	e5d10000 	ldrb	r0, [r1]
  109a90:	e1500003 	cmp	r0, r3
  109a94:	0afffff8 	beq	109a7c <strcmp+0x98>
  109a98:	e0600003 	rsb	r0, r0, r3
  109a9c:	e12fff1e 	bx	lr
  109aa0:	e5d10000 	ldrb	r0, [r1]
  109aa4:	e0600003 	rsb	r0, r0, r3
  109aa8:	e12fff1e 	bx	lr
  109aac:	e3a00000 	mov	r0, #0	; 0x0
  109ab0:	e12fff1e 	bx	lr

00109ab4 <_calloc_r>:
  109ab4:	e92d4010 	stmdb	sp!, {r4, lr}
  109ab8:	e0010192 	mul	r1, r2, r1
  109abc:	ebffe2dd 	bl	102638 <_malloc_r>
  109ac0:	e2504000 	subs	r4, r0, #0	; 0x0
  109ac4:	0a00000f 	beq	109b08 <_calloc_r+0x54>
  109ac8:	e5143004 	ldr	r3, [r4, #-4]
  109acc:	e3c33003 	bic	r3, r3, #3	; 0x3
  109ad0:	e2433004 	sub	r3, r3, #4	; 0x4
  109ad4:	e3a0c000 	mov	ip, #0	; 0x0
  109ad8:	e3530024 	cmp	r3, #36	; 0x24
  109adc:	e1a02003 	mov	r2, r3
  109ae0:	e1a0100c 	mov	r1, ip
  109ae4:	8a000017 	bhi	109b48 <_calloc_r+0x94>
  109ae8:	e3530013 	cmp	r3, #19	; 0x13
  109aec:	e1a01004 	mov	r1, r4
  109af0:	e1a02004 	mov	r2, r4
  109af4:	8a000005 	bhi	109b10 <_calloc_r+0x5c>
  109af8:	e1a03002 	mov	r3, r2
  109afc:	e483c004 	str	ip, [r3], #4
  109b00:	e582c004 	str	ip, [r2, #4]
  109b04:	e583c004 	str	ip, [r3, #4]
  109b08:	e1a00004 	mov	r0, r4
  109b0c:	e8bd8010 	ldmia	sp!, {r4, pc}
  109b10:	e481c004 	str	ip, [r1], #4
  109b14:	e353001b 	cmp	r3, #27	; 0x1b
  109b18:	e2812004 	add	r2, r1, #4	; 0x4
  109b1c:	e584c004 	str	ip, [r4, #4]
  109b20:	e282e004 	add	lr, r2, #4	; 0x4
  109b24:	9afffff3 	bls	109af8 <_calloc_r+0x44>
  109b28:	e3530024 	cmp	r3, #36	; 0x24
  109b2c:	e581c004 	str	ip, [r1, #4]
  109b30:	e582c004 	str	ip, [r2, #4]
  109b34:	e28e2004 	add	r2, lr, #4	; 0x4
  109b38:	058ec004 	streq	ip, [lr, #4]
  109b3c:	0582c004 	streq	ip, [r2, #4]
  109b40:	02822008 	addeq	r2, r2, #8	; 0x8
  109b44:	eaffffeb 	b	109af8 <_calloc_r+0x44>
  109b48:	ebffe496 	bl	102da8 <memset>
  109b4c:	e1a00004 	mov	r0, r4
  109b50:	e8bd8010 	ldmia	sp!, {r4, pc}

00109b54 <_fclose_r>:
  109b54:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  109b58:	e2515000 	subs	r5, r1, #0	; 0x0
  109b5c:	e1a06000 	mov	r6, r0
  109b60:	01a04005 	moveq	r4, r5
  109b64:	0a00002b 	beq	109c18 <_fclose_r+0xc4>
  109b68:	ebfff881 	bl	107d74 <__sfp_lock_acquire>
  109b6c:	e3560000 	cmp	r6, #0	; 0x0
  109b70:	0a000002 	beq	109b80 <_fclose_r+0x2c>
  109b74:	e5963038 	ldr	r3, [r6, #56]
  109b78:	e3530000 	cmp	r3, #0	; 0x0
  109b7c:	0a000027 	beq	109c20 <_fclose_r+0xcc>
  109b80:	e1d540bc 	ldrh	r4, [r5, #12]
  109b84:	e3540000 	cmp	r4, #0	; 0x0
  109b88:	0a000021 	beq	109c14 <_fclose_r+0xc0>
  109b8c:	e2140008 	ands	r0, r4, #8	; 0x8
  109b90:	1a000025 	bne	109c2c <_fclose_r+0xd8>
  109b94:	e595302c 	ldr	r3, [r5, #44]
  109b98:	e3530000 	cmp	r3, #0	; 0x0
  109b9c:	e1a04000 	mov	r4, r0
  109ba0:	0a000004 	beq	109bb8 <_fclose_r+0x64>
  109ba4:	e595001c 	ldr	r0, [r5, #28]
  109ba8:	e1a0e00f 	mov	lr, pc
  109bac:	e12fff13 	bx	r3
  109bb0:	e3500000 	cmp	r0, #0	; 0x0
  109bb4:	b3e04000 	mvnlt	r4, #0	; 0x0
  109bb8:	e1d530bc 	ldrh	r3, [r5, #12]
  109bbc:	e3130080 	tst	r3, #128	; 0x80
  109bc0:	1a000020 	bne	109c48 <_fclose_r+0xf4>
  109bc4:	e5951030 	ldr	r1, [r5, #48]
  109bc8:	e3510000 	cmp	r1, #0	; 0x0
  109bcc:	0a000006 	beq	109bec <_fclose_r+0x98>
  109bd0:	e2853040 	add	r3, r5, #64	; 0x40
  109bd4:	e1510003 	cmp	r1, r3
  109bd8:	159f3084 	ldrne	r3, [pc, #132]	; 109c64 <.text+0x9c64>
  109bdc:	15930000 	ldrne	r0, [r3]
  109be0:	1bfff926 	blne	108080 <_free_r>
  109be4:	e3a03000 	mov	r3, #0	; 0x0
  109be8:	e5853030 	str	r3, [r5, #48]
  109bec:	e5951044 	ldr	r1, [r5, #68]
  109bf0:	e3510000 	cmp	r1, #0	; 0x0
  109bf4:	0a000004 	beq	109c0c <_fclose_r+0xb8>
  109bf8:	e59f3064 	ldr	r3, [pc, #100]	; 109c64 <.text+0x9c64>
  109bfc:	e5930000 	ldr	r0, [r3]
  109c00:	ebfff91e 	bl	108080 <_free_r>
  109c04:	e3a03000 	mov	r3, #0	; 0x0
  109c08:	e5853044 	str	r3, [r5, #68]
  109c0c:	e3a03000 	mov	r3, #0	; 0x0
  109c10:	e1c530bc 	strh	r3, [r5, #12]
  109c14:	ebfff857 	bl	107d78 <__sfp_lock_release>
  109c18:	e1a00004 	mov	r0, r4
  109c1c:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  109c20:	e1a00006 	mov	r0, r6
  109c24:	ebfff856 	bl	107d84 <__sinit>
  109c28:	eaffffd4 	b	109b80 <_fclose_r+0x2c>
  109c2c:	e1a00005 	mov	r0, r5
  109c30:	ebfff800 	bl	107c38 <fflush>
  109c34:	e595302c 	ldr	r3, [r5, #44]
  109c38:	e3530000 	cmp	r3, #0	; 0x0
  109c3c:	e1a04000 	mov	r4, r0
  109c40:	1affffd7 	bne	109ba4 <_fclose_r+0x50>
  109c44:	eaffffdb 	b	109bb8 <_fclose_r+0x64>
  109c48:	e5951010 	ldr	r1, [r5, #16]
  109c4c:	e1a00006 	mov	r0, r6
  109c50:	ebfff90a 	bl	108080 <_free_r>
  109c54:	e5951030 	ldr	r1, [r5, #48]
  109c58:	e3510000 	cmp	r1, #0	; 0x0
  109c5c:	1affffdb 	bne	109bd0 <_fclose_r+0x7c>
  109c60:	eaffffe1 	b	109bec <_fclose_r+0x98>
  109c64:	00200184 	eoreq	r0, r0, r4, lsl #3

00109c68 <fclose>:
  109c68:	e59f3008 	ldr	r3, [pc, #8]	; 109c78 <.text+0x9c78>
  109c6c:	e1a01000 	mov	r1, r0
  109c70:	e5930000 	ldr	r0, [r3]
  109c74:	eaffffb6 	b	109b54 <_fclose_r>
  109c78:	00200184 	eoreq	r0, r0, r4, lsl #3

00109c7c <__aeabi_drsub>:
  109c7c:	e2200102 	eor	r0, r0, #-2147483648	; 0x80000000
  109c80:	ea000000 	b	109c88 <__adddf3>

00109c84 <__aeabi_dsub>:
  109c84:	e2222102 	eor	r2, r2, #-2147483648	; 0x80000000

00109c88 <__adddf3>:
  109c88:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  109c8c:	e1a04080 	mov	r4, r0, lsl #1
  109c90:	e1a05082 	mov	r5, r2, lsl #1
  109c94:	e1340005 	teq	r4, r5
  109c98:	01310003 	teqeq	r1, r3
  109c9c:	1194c001 	orrnes	ip, r4, r1
  109ca0:	1195c003 	orrnes	ip, r5, r3
  109ca4:	11f0cac4 	mvnnes	ip, r4, asr #21
  109ca8:	11f0cac5 	mvnnes	ip, r5, asr #21
  109cac:	0a000086 	beq	109ecc <__adddf3+0x244>
  109cb0:	e1a04aa4 	mov	r4, r4, lsr #21
  109cb4:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
  109cb8:	b2655000 	rsblt	r5, r5, #0	; 0x0
  109cbc:	da000006 	ble	109cdc <__adddf3+0x54>
  109cc0:	e0844005 	add	r4, r4, r5
  109cc4:	e0213003 	eor	r3, r1, r3
  109cc8:	e0202002 	eor	r2, r0, r2
  109ccc:	e0231001 	eor	r1, r3, r1
  109cd0:	e0220000 	eor	r0, r2, r0
  109cd4:	e0213003 	eor	r3, r1, r3
  109cd8:	e0202002 	eor	r2, r0, r2
  109cdc:	e3550036 	cmp	r5, #54	; 0x36
  109ce0:	88bd8030 	ldmhiia	sp!, {r4, r5, pc}
  109ce4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
  109ce8:	e1a00600 	mov	r0, r0, lsl #12
  109cec:	e3a0c601 	mov	ip, #1048576	; 0x100000
  109cf0:	e18c0620 	orr	r0, ip, r0, lsr #12
  109cf4:	0a000001 	beq	109d00 <__adddf3+0x78>
  109cf8:	e2711000 	rsbs	r1, r1, #0	; 0x0
  109cfc:	e2e00000 	rsc	r0, r0, #0	; 0x0
  109d00:	e3120102 	tst	r2, #-2147483648	; 0x80000000
  109d04:	e1a02602 	mov	r2, r2, lsl #12
  109d08:	e18c2622 	orr	r2, ip, r2, lsr #12
  109d0c:	0a000001 	beq	109d18 <__adddf3+0x90>
  109d10:	e2733000 	rsbs	r3, r3, #0	; 0x0
  109d14:	e2e22000 	rsc	r2, r2, #0	; 0x0
  109d18:	e1340005 	teq	r4, r5
  109d1c:	0a000064 	beq	109eb4 <__adddf3+0x22c>
  109d20:	e2444001 	sub	r4, r4, #1	; 0x1
  109d24:	e275e020 	rsbs	lr, r5, #32	; 0x20
  109d28:	ba000005 	blt	109d44 <__adddf3+0xbc>
  109d2c:	e1a0ce13 	mov	ip, r3, lsl lr
  109d30:	e0911533 	adds	r1, r1, r3, lsr r5
  109d34:	e2a00000 	adc	r0, r0, #0	; 0x0
  109d38:	e0911e12 	adds	r1, r1, r2, lsl lr
  109d3c:	e0b00552 	adcs	r0, r0, r2, asr r5
  109d40:	ea000006 	b	109d60 <__adddf3+0xd8>
  109d44:	e2455020 	sub	r5, r5, #32	; 0x20
  109d48:	e28ee020 	add	lr, lr, #32	; 0x20
  109d4c:	e3530001 	cmp	r3, #1	; 0x1
  109d50:	e1a0ce12 	mov	ip, r2, lsl lr
  109d54:	238cc002 	orrcs	ip, ip, #2	; 0x2
  109d58:	e0911552 	adds	r1, r1, r2, asr r5
  109d5c:	e0b00fc2 	adcs	r0, r0, r2, asr #31
  109d60:	e2005102 	and	r5, r0, #-2147483648	; 0x80000000
  109d64:	5a000002 	bpl	109d74 <__adddf3+0xec>
  109d68:	e27cc000 	rsbs	ip, ip, #0	; 0x0
  109d6c:	e2f11000 	rscs	r1, r1, #0	; 0x0
  109d70:	e2e00000 	rsc	r0, r0, #0	; 0x0
  109d74:	e3500601 	cmp	r0, #1048576	; 0x100000
  109d78:	3a00000e 	bcc	109db8 <__adddf3+0x130>
  109d7c:	e3500602 	cmp	r0, #2097152	; 0x200000
  109d80:	3a000006 	bcc	109da0 <__adddf3+0x118>
  109d84:	e1b000a0 	movs	r0, r0, lsr #1
  109d88:	e1b01061 	movs	r1, r1, rrx
  109d8c:	e1a0c06c 	mov	ip, ip, rrx
  109d90:	e2844001 	add	r4, r4, #1	; 0x1
  109d94:	e1a02a84 	mov	r2, r4, lsl #21
  109d98:	e3720501 	cmn	r2, #4194304	; 0x400000
  109d9c:	2a000062 	bcs	109f2c <__adddf3+0x2a4>
  109da0:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
  109da4:	01b0c0a1 	moveqs	ip, r1, lsr #1
  109da8:	e2b11000 	adcs	r1, r1, #0	; 0x0
  109dac:	e0a00a04 	adc	r0, r0, r4, lsl #20
  109db0:	e1800005 	orr	r0, r0, r5
  109db4:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109db8:	e1b0c08c 	movs	ip, ip, lsl #1
  109dbc:	e0b11001 	adcs	r1, r1, r1
  109dc0:	e0a00000 	adc	r0, r0, r0
  109dc4:	e3100601 	tst	r0, #1048576	; 0x100000
  109dc8:	e2444001 	sub	r4, r4, #1	; 0x1
  109dcc:	1afffff3 	bne	109da0 <__adddf3+0x118>
  109dd0:	e3300000 	teq	r0, #0	; 0x0
  109dd4:	13a03014 	movne	r3, #20	; 0x14
  109dd8:	03a03034 	moveq	r3, #52	; 0x34
  109ddc:	01a00001 	moveq	r0, r1
  109de0:	03a01000 	moveq	r1, #0	; 0x0
  109de4:	e1a02000 	mov	r2, r0
  109de8:	e3520801 	cmp	r2, #65536	; 0x10000
  109dec:	21a02822 	movcs	r2, r2, lsr #16
  109df0:	22433010 	subcs	r3, r3, #16	; 0x10
  109df4:	e3520c01 	cmp	r2, #256	; 0x100
  109df8:	21a02422 	movcs	r2, r2, lsr #8
  109dfc:	22433008 	subcs	r3, r3, #8	; 0x8
  109e00:	e3520010 	cmp	r2, #16	; 0x10
  109e04:	21a02222 	movcs	r2, r2, lsr #4
  109e08:	22433004 	subcs	r3, r3, #4	; 0x4
  109e0c:	e3520004 	cmp	r2, #4	; 0x4
  109e10:	22433002 	subcs	r3, r3, #2	; 0x2
  109e14:	304330a2 	subcc	r3, r3, r2, lsr #1
  109e18:	e04331a2 	sub	r3, r3, r2, lsr #3
  109e1c:	e2532020 	subs	r2, r3, #32	; 0x20
  109e20:	aa000007 	bge	109e44 <__adddf3+0x1bc>
  109e24:	e292200c 	adds	r2, r2, #12	; 0xc
  109e28:	da000004 	ble	109e40 <__adddf3+0x1b8>
  109e2c:	e282c014 	add	ip, r2, #20	; 0x14
  109e30:	e262200c 	rsb	r2, r2, #12	; 0xc
  109e34:	e1a01c10 	mov	r1, r0, lsl ip
  109e38:	e1a00230 	mov	r0, r0, lsr r2
  109e3c:	ea000004 	b	109e54 <__adddf3+0x1cc>
  109e40:	e2822014 	add	r2, r2, #20	; 0x14
  109e44:	d262c020 	rsble	ip, r2, #32	; 0x20
  109e48:	e1a00210 	mov	r0, r0, lsl r2
  109e4c:	d1800c31 	orrle	r0, r0, r1, lsr ip
  109e50:	d1a01211 	movle	r1, r1, lsl r2
  109e54:	e0544003 	subs	r4, r4, r3
  109e58:	a0800a04 	addge	r0, r0, r4, lsl #20
  109e5c:	a1800005 	orrge	r0, r0, r5
  109e60:	a8bd8030 	ldmgeia	sp!, {r4, r5, pc}
  109e64:	e1e04004 	mvn	r4, r4
  109e68:	e254401f 	subs	r4, r4, #31	; 0x1f
  109e6c:	aa00000d 	bge	109ea8 <__adddf3+0x220>
  109e70:	e294400c 	adds	r4, r4, #12	; 0xc
  109e74:	ca000005 	bgt	109e90 <__adddf3+0x208>
  109e78:	e2844014 	add	r4, r4, #20	; 0x14
  109e7c:	e2642020 	rsb	r2, r4, #32	; 0x20
  109e80:	e1a01431 	mov	r1, r1, lsr r4
  109e84:	e1811210 	orr	r1, r1, r0, lsl r2
  109e88:	e1850430 	orr	r0, r5, r0, lsr r4
  109e8c:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109e90:	e264400c 	rsb	r4, r4, #12	; 0xc
  109e94:	e2642020 	rsb	r2, r4, #32	; 0x20
  109e98:	e1a01231 	mov	r1, r1, lsr r2
  109e9c:	e1811410 	orr	r1, r1, r0, lsl r4
  109ea0:	e1a00005 	mov	r0, r5
  109ea4:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109ea8:	e1a01430 	mov	r1, r0, lsr r4
  109eac:	e1a00005 	mov	r0, r5
  109eb0:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109eb4:	e3340000 	teq	r4, #0	; 0x0
  109eb8:	e2222601 	eor	r2, r2, #1048576	; 0x100000
  109ebc:	02200601 	eoreq	r0, r0, #1048576	; 0x100000
  109ec0:	02844001 	addeq	r4, r4, #1	; 0x1
  109ec4:	12455001 	subne	r5, r5, #1	; 0x1
  109ec8:	eaffff94 	b	109d20 <__adddf3+0x98>
  109ecc:	e1f0cac4 	mvns	ip, r4, asr #21
  109ed0:	11f0cac5 	mvnnes	ip, r5, asr #21
  109ed4:	0a000018 	beq	109f3c <__adddf3+0x2b4>
  109ed8:	e1340005 	teq	r4, r5
  109edc:	01310003 	teqeq	r1, r3
  109ee0:	0a000003 	beq	109ef4 <__adddf3+0x26c>
  109ee4:	e3340000 	teq	r4, #0	; 0x0
  109ee8:	01a00002 	moveq	r0, r2
  109eec:	01a01003 	moveq	r1, r3
  109ef0:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109ef4:	e1300002 	teq	r0, r2
  109ef8:	13a00000 	movne	r0, #0	; 0x0
  109efc:	13a01000 	movne	r1, #0	; 0x0
  109f00:	18bd8030 	ldmneia	sp!, {r4, r5, pc}
  109f04:	e1b0caa4 	movs	ip, r4, lsr #21
  109f08:	1a000003 	bne	109f1c <__adddf3+0x294>
  109f0c:	e1b01081 	movs	r1, r1, lsl #1
  109f10:	e0b00000 	adcs	r0, r0, r0
  109f14:	23800102 	orrcs	r0, r0, #-2147483648	; 0x80000000
  109f18:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109f1c:	e2944501 	adds	r4, r4, #4194304	; 0x400000
  109f20:	32800601 	addcc	r0, r0, #1048576	; 0x100000
  109f24:	38bd8030 	ldmccia	sp!, {r4, r5, pc}
  109f28:	e2005102 	and	r5, r0, #-2147483648	; 0x80000000
  109f2c:	e385047f 	orr	r0, r5, #2130706432	; 0x7f000000
  109f30:	e380060f 	orr	r0, r0, #15728640	; 0xf00000
  109f34:	e3a01000 	mov	r1, #0	; 0x0
  109f38:	e8bd8030 	ldmia	sp!, {r4, r5, pc}
  109f3c:	e1f0cac4 	mvns	ip, r4, asr #21
  109f40:	11a00002 	movne	r0, r2
  109f44:	11a01003 	movne	r1, r3
  109f48:	01f0cac5 	mvneqs	ip, r5, asr #21
  109f4c:	11a02000 	movne	r2, r0
  109f50:	11a03001 	movne	r3, r1
  109f54:	e1914600 	orrs	r4, r1, r0, lsl #12
  109f58:	01935602 	orreqs	r5, r3, r2, lsl #12
  109f5c:	01300002 	teqeq	r0, r2
  109f60:	13800702 	orrne	r0, r0, #524288	; 0x80000
  109f64:	e8bd8030 	ldmia	sp!, {r4, r5, pc}

00109f68 <__aeabi_ui2d>:
  109f68:	e3300000 	teq	r0, #0	; 0x0
  109f6c:	03a01000 	moveq	r1, #0	; 0x0
  109f70:	012fff1e 	bxeq	lr
  109f74:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  109f78:	e3a04b01 	mov	r4, #1024	; 0x400
  109f7c:	e2844032 	add	r4, r4, #50	; 0x32
  109f80:	e3a05000 	mov	r5, #0	; 0x0
  109f84:	e1a01000 	mov	r1, r0
  109f88:	e3a00000 	mov	r0, #0	; 0x0
  109f8c:	eaffff8f 	b	109dd0 <__adddf3+0x148>

00109f90 <__aeabi_i2d>:
  109f90:	e3300000 	teq	r0, #0	; 0x0
  109f94:	03a01000 	moveq	r1, #0	; 0x0
  109f98:	012fff1e 	bxeq	lr
  109f9c:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  109fa0:	e3a04b01 	mov	r4, #1024	; 0x400
  109fa4:	e2844032 	add	r4, r4, #50	; 0x32
  109fa8:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
  109fac:	42600000 	rsbmi	r0, r0, #0	; 0x0
  109fb0:	e1a01000 	mov	r1, r0
  109fb4:	e3a00000 	mov	r0, #0	; 0x0
  109fb8:	eaffff84 	b	109dd0 <__adddf3+0x148>

00109fbc <__aeabi_f2d>:
  109fbc:	e1b02080 	movs	r2, r0, lsl #1
  109fc0:	e1a001c2 	mov	r0, r2, asr #3
  109fc4:	e1a00060 	mov	r0, r0, rrx
  109fc8:	e1a01e02 	mov	r1, r2, lsl #28
  109fcc:	121234ff 	andnes	r3, r2, #-16777216	; 0xff000000
  109fd0:	133304ff 	teqne	r3, #-16777216	; 0xff000000
  109fd4:	1220030e 	eorne	r0, r0, #939524096	; 0x38000000
  109fd8:	112fff1e 	bxne	lr
  109fdc:	e3320000 	teq	r2, #0	; 0x0
  109fe0:	133304ff 	teqne	r3, #-16777216	; 0xff000000
  109fe4:	012fff1e 	bxeq	lr
  109fe8:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  109fec:	e3a04d0e 	mov	r4, #896	; 0x380
  109ff0:	e2005102 	and	r5, r0, #-2147483648	; 0x80000000
  109ff4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
  109ff8:	eaffff74 	b	109dd0 <__adddf3+0x148>

00109ffc <__aeabi_ul2d>:
  109ffc:	e1902001 	orrs	r2, r0, r1
  10a000:	012fff1e 	bxeq	lr
  10a004:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  10a008:	e3a05000 	mov	r5, #0	; 0x0
  10a00c:	ea000006 	b	10a02c <__aeabi_l2d+0x1c>

0010a010 <__aeabi_l2d>:
  10a010:	e1902001 	orrs	r2, r0, r1
  10a014:	012fff1e 	bxeq	lr
  10a018:	e92d4030 	stmdb	sp!, {r4, r5, lr}
  10a01c:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
  10a020:	5a000001 	bpl	10a02c <__aeabi_l2d+0x1c>
  10a024:	e2700000 	rsbs	r0, r0, #0	; 0x0
  10a028:	e2e11000 	rsc	r1, r1, #0	; 0x0
  10a02c:	e3a04b01 	mov	r4, #1024	; 0x400
  10a030:	e2844032 	add	r4, r4, #50	; 0x32
  10a034:	e1a0c000 	mov	ip, r0
  10a038:	e1a00001 	mov	r0, r1
  10a03c:	e1a0100c 	mov	r1, ip
  10a040:	e1b0cb20 	movs	ip, r0, lsr #22
  10a044:	0affff4a 	beq	109d74 <__adddf3+0xec>
  10a048:	e3a02003 	mov	r2, #3	; 0x3
  10a04c:	e1b0c1ac 	movs	ip, ip, lsr #3
  10a050:	12822003 	addne	r2, r2, #3	; 0x3
  10a054:	e1b0c1ac 	movs	ip, ip, lsr #3
  10a058:	12822003 	addne	r2, r2, #3	; 0x3
  10a05c:	e08221ac 	add	r2, r2, ip, lsr #3
  10a060:	e2623020 	rsb	r3, r2, #32	; 0x20
  10a064:	e1a0c311 	mov	ip, r1, lsl r3
  10a068:	e1a01231 	mov	r1, r1, lsr r2
  10a06c:	e1811310 	orr	r1, r1, r0, lsl r3
  10a070:	e1a00230 	mov	r0, r0, lsr r2
  10a074:	e0844002 	add	r4, r4, r2
  10a078:	eaffff3d 	b	109d74 <__adddf3+0xec>

0010a07c <__aeabi_dmul>:
  10a07c:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  10a080:	e3a0c0ff 	mov	ip, #255	; 0xff
  10a084:	e38ccc07 	orr	ip, ip, #1792	; 0x700
  10a088:	e01c4a20 	ands	r4, ip, r0, lsr #20
  10a08c:	101c5a22 	andnes	r5, ip, r2, lsr #20
  10a090:	1134000c 	teqne	r4, ip
  10a094:	1135000c 	teqne	r5, ip
  10a098:	0b00006f 	bleq	10a25c <__aeabi_dmul+0x1e0>
  10a09c:	e0844005 	add	r4, r4, r5
  10a0a0:	e0206002 	eor	r6, r0, r2
  10a0a4:	e1c00a8c 	bic	r0, r0, ip, lsl #21
  10a0a8:	e1c22a8c 	bic	r2, r2, ip, lsl #21
  10a0ac:	e1915600 	orrs	r5, r1, r0, lsl #12
  10a0b0:	11935602 	orrnes	r5, r3, r2, lsl #12
  10a0b4:	e3800601 	orr	r0, r0, #1048576	; 0x100000
  10a0b8:	e3822601 	orr	r2, r2, #1048576	; 0x100000
  10a0bc:	0a00001c 	beq	10a134 <__aeabi_dmul+0xb8>
  10a0c0:	e08ec391 	umull	ip, lr, r1, r3
  10a0c4:	e3a05000 	mov	r5, #0	; 0x0
  10a0c8:	e0a5e390 	umlal	lr, r5, r0, r3
  10a0cc:	e2063102 	and	r3, r6, #-2147483648	; 0x80000000
  10a0d0:	e0a5e291 	umlal	lr, r5, r1, r2
  10a0d4:	e3a06000 	mov	r6, #0	; 0x0
  10a0d8:	e0a65290 	umlal	r5, r6, r0, r2
  10a0dc:	e33c0000 	teq	ip, #0	; 0x0
  10a0e0:	138ee001 	orrne	lr, lr, #1	; 0x1
  10a0e4:	e24440ff 	sub	r4, r4, #255	; 0xff
  10a0e8:	e3560c02 	cmp	r6, #512	; 0x200
  10a0ec:	e2c44c03 	sbc	r4, r4, #768	; 0x300
  10a0f0:	2a000002 	bcs	10a100 <__aeabi_dmul+0x84>
  10a0f4:	e1b0e08e 	movs	lr, lr, lsl #1
  10a0f8:	e0b55005 	adcs	r5, r5, r5
  10a0fc:	e0a66006 	adc	r6, r6, r6
  10a100:	e1830586 	orr	r0, r3, r6, lsl #11
  10a104:	e1800aa5 	orr	r0, r0, r5, lsr #21
  10a108:	e1a01585 	mov	r1, r5, lsl #11
  10a10c:	e1811aae 	orr	r1, r1, lr, lsr #21
  10a110:	e1a0e58e 	mov	lr, lr, lsl #11
  10a114:	e254c0fd 	subs	ip, r4, #253	; 0xfd
  10a118:	835c0c07 	cmphi	ip, #1792	; 0x700
  10a11c:	8a00000f 	bhi	10a160 <__aeabi_dmul+0xe4>
  10a120:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
  10a124:	01b0e0a1 	moveqs	lr, r1, lsr #1
  10a128:	e2b11000 	adcs	r1, r1, #0	; 0x0
  10a12c:	e0a00a04 	adc	r0, r0, r4, lsl #20
  10a130:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a134:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
  10a138:	e1860000 	orr	r0, r6, r0
  10a13c:	e1811003 	orr	r1, r1, r3
  10a140:	e0200002 	eor	r0, r0, r2
  10a144:	e05440ac 	subs	r4, r4, ip, lsr #1
  10a148:	c074500c 	rsbgts	r5, r4, ip
  10a14c:	c1800a04 	orrgt	r0, r0, r4, lsl #20
  10a150:	c8bd8070 	ldmgtia	sp!, {r4, r5, r6, pc}
  10a154:	e3800601 	orr	r0, r0, #1048576	; 0x100000
  10a158:	e3a0e000 	mov	lr, #0	; 0x0
  10a15c:	e2544001 	subs	r4, r4, #1	; 0x1
  10a160:	ca000058 	bgt	10a2c8 <__aeabi_dmul+0x24c>
  10a164:	e3740036 	cmn	r4, #54	; 0x36
  10a168:	d3a01000 	movle	r1, #0	; 0x0
  10a16c:	d2000102 	andle	r0, r0, #-2147483648	; 0x80000000
  10a170:	d8bd8070 	ldmleia	sp!, {r4, r5, r6, pc}
  10a174:	e2644000 	rsb	r4, r4, #0	; 0x0
  10a178:	e2544020 	subs	r4, r4, #32	; 0x20
  10a17c:	aa000018 	bge	10a1e4 <__aeabi_dmul+0x168>
  10a180:	e294400c 	adds	r4, r4, #12	; 0xc
  10a184:	ca00000b 	bgt	10a1b8 <__aeabi_dmul+0x13c>
  10a188:	e2844014 	add	r4, r4, #20	; 0x14
  10a18c:	e2645020 	rsb	r5, r4, #32	; 0x20
  10a190:	e1a03511 	mov	r3, r1, lsl r5
  10a194:	e1a01431 	mov	r1, r1, lsr r4
  10a198:	e1811510 	orr	r1, r1, r0, lsl r5
  10a19c:	e2002102 	and	r2, r0, #-2147483648	; 0x80000000
  10a1a0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
  10a1a4:	e0911fa3 	adds	r1, r1, r3, lsr #31
  10a1a8:	e0a20430 	adc	r0, r2, r0, lsr r4
  10a1ac:	e19ee083 	orrs	lr, lr, r3, lsl #1
  10a1b0:	01c11fa3 	biceq	r1, r1, r3, lsr #31
  10a1b4:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a1b8:	e264400c 	rsb	r4, r4, #12	; 0xc
  10a1bc:	e2645020 	rsb	r5, r4, #32	; 0x20
  10a1c0:	e1a03411 	mov	r3, r1, lsl r4
  10a1c4:	e1a01531 	mov	r1, r1, lsr r5
  10a1c8:	e1811410 	orr	r1, r1, r0, lsl r4
  10a1cc:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
  10a1d0:	e0911fa3 	adds	r1, r1, r3, lsr #31
  10a1d4:	e2a00000 	adc	r0, r0, #0	; 0x0
  10a1d8:	e19ee083 	orrs	lr, lr, r3, lsl #1
  10a1dc:	01c11fa3 	biceq	r1, r1, r3, lsr #31
  10a1e0:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a1e4:	e2645020 	rsb	r5, r4, #32	; 0x20
  10a1e8:	e18ee511 	orr	lr, lr, r1, lsl r5
  10a1ec:	e1a03431 	mov	r3, r1, lsr r4
  10a1f0:	e1833510 	orr	r3, r3, r0, lsl r5
  10a1f4:	e1a01430 	mov	r1, r0, lsr r4
  10a1f8:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
  10a1fc:	e1c11430 	bic	r1, r1, r0, lsr r4
  10a200:	e0811fa3 	add	r1, r1, r3, lsr #31
  10a204:	e19ee083 	orrs	lr, lr, r3, lsl #1
  10a208:	01c11fa3 	biceq	r1, r1, r3, lsr #31
  10a20c:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a210:	e3340000 	teq	r4, #0	; 0x0
  10a214:	1a000008 	bne	10a23c <__aeabi_dmul+0x1c0>
  10a218:	e2006102 	and	r6, r0, #-2147483648	; 0x80000000
  10a21c:	e1b01081 	movs	r1, r1, lsl #1
  10a220:	e0a00000 	adc	r0, r0, r0
  10a224:	e3100601 	tst	r0, #1048576	; 0x100000
  10a228:	02444001 	subeq	r4, r4, #1	; 0x1
  10a22c:	0afffffa 	beq	10a21c <__aeabi_dmul+0x1a0>
  10a230:	e1800006 	orr	r0, r0, r6
  10a234:	e3350000 	teq	r5, #0	; 0x0
  10a238:	11a0f00e 	movne	pc, lr
  10a23c:	e2026102 	and	r6, r2, #-2147483648	; 0x80000000
  10a240:	e1b03083 	movs	r3, r3, lsl #1
  10a244:	e0a22002 	adc	r2, r2, r2
  10a248:	e3120601 	tst	r2, #1048576	; 0x100000
  10a24c:	02455001 	subeq	r5, r5, #1	; 0x1
  10a250:	0afffffa 	beq	10a240 <__aeabi_dmul+0x1c4>
  10a254:	e1822006 	orr	r2, r2, r6
  10a258:	e1a0f00e 	mov	pc, lr
  10a25c:	e134000c 	teq	r4, ip
  10a260:	e00c5a22 	and	r5, ip, r2, lsr #20
  10a264:	1135000c 	teqne	r5, ip
  10a268:	0a000006 	beq	10a288 <__aeabi_dmul+0x20c>
  10a26c:	e1916080 	orrs	r6, r1, r0, lsl #1
  10a270:	11936082 	orrnes	r6, r3, r2, lsl #1
  10a274:	1affffe5 	bne	10a210 <__aeabi_dmul+0x194>
  10a278:	e0200002 	eor	r0, r0, r2
  10a27c:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
  10a280:	e3a01000 	mov	r1, #0	; 0x0
  10a284:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a288:	e1916080 	orrs	r6, r1, r0, lsl #1
  10a28c:	01a01003 	moveq	r1, r3
  10a290:	01a00002 	moveq	r0, r2
  10a294:	11936082 	orrnes	r6, r3, r2, lsl #1
  10a298:	0a00000f 	beq	10a2dc <__aeabi_dmul+0x260>
  10a29c:	e134000c 	teq	r4, ip
  10a2a0:	1a000001 	bne	10a2ac <__aeabi_dmul+0x230>
  10a2a4:	e1916600 	orrs	r6, r1, r0, lsl #12
  10a2a8:	1a00000b 	bne	10a2dc <__aeabi_dmul+0x260>
  10a2ac:	e135000c 	teq	r5, ip
  10a2b0:	1a000003 	bne	10a2c4 <__aeabi_dmul+0x248>
  10a2b4:	e1936602 	orrs	r6, r3, r2, lsl #12
  10a2b8:	11a01003 	movne	r1, r3
  10a2bc:	11a00002 	movne	r0, r2
  10a2c0:	1a000005 	bne	10a2dc <__aeabi_dmul+0x260>
  10a2c4:	e0200002 	eor	r0, r0, r2
  10a2c8:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
  10a2cc:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
  10a2d0:	e380060f 	orr	r0, r0, #15728640	; 0xf00000
  10a2d4:	e3a01000 	mov	r1, #0	; 0x0
  10a2d8:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a2dc:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
  10a2e0:	e380073e 	orr	r0, r0, #16252928	; 0xf80000
  10a2e4:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}

0010a2e8 <__aeabi_ddiv>:
  10a2e8:	e92d4070 	stmdb	sp!, {r4, r5, r6, lr}
  10a2ec:	e3a0c0ff 	mov	ip, #255	; 0xff
  10a2f0:	e38ccc07 	orr	ip, ip, #1792	; 0x700
  10a2f4:	e01c4a20 	ands	r4, ip, r0, lsr #20
  10a2f8:	101c5a22 	andnes	r5, ip, r2, lsr #20
  10a2fc:	1134000c 	teqne	r4, ip
  10a300:	1135000c 	teqne	r5, ip
  10a304:	0b00005c 	bleq	10a47c <__aeabi_ddiv+0x194>
  10a308:	e0444005 	sub	r4, r4, r5
  10a30c:	e020e002 	eor	lr, r0, r2
  10a310:	e1935602 	orrs	r5, r3, r2, lsl #12
  10a314:	e1a00600 	mov	r0, r0, lsl #12
  10a318:	0a00004b 	beq	10a44c <__aeabi_ddiv+0x164>
  10a31c:	e1a02602 	mov	r2, r2, lsl #12
  10a320:	e3a05201 	mov	r5, #268435456	; 0x10000000
  10a324:	e1852222 	orr	r2, r5, r2, lsr #4
  10a328:	e1822c23 	orr	r2, r2, r3, lsr #24
  10a32c:	e1a03403 	mov	r3, r3, lsl #8
  10a330:	e1855220 	orr	r5, r5, r0, lsr #4
  10a334:	e1855c21 	orr	r5, r5, r1, lsr #24
  10a338:	e1a06401 	mov	r6, r1, lsl #8
  10a33c:	e20e0102 	and	r0, lr, #-2147483648	; 0x80000000
  10a340:	e1550002 	cmp	r5, r2
  10a344:	01560003 	cmpeq	r6, r3
  10a348:	e2a440fd 	adc	r4, r4, #253	; 0xfd
  10a34c:	e2844c03 	add	r4, r4, #768	; 0x300
  10a350:	2a000001 	bcs	10a35c <__aeabi_ddiv+0x74>
  10a354:	e1b020a2 	movs	r2, r2, lsr #1
  10a358:	e1a03063 	mov	r3, r3, rrx
  10a35c:	e0566003 	subs	r6, r6, r3
  10a360:	e0c55002 	sbc	r5, r5, r2
  10a364:	e1b020a2 	movs	r2, r2, lsr #1
  10a368:	e1a03063 	mov	r3, r3, rrx
  10a36c:	e3a01601 	mov	r1, #1048576	; 0x100000
  10a370:	e3a0c702 	mov	ip, #524288	; 0x80000
  10a374:	e056e003 	subs	lr, r6, r3
  10a378:	e0d5e002 	sbcs	lr, r5, r2
  10a37c:	20466003 	subcs	r6, r6, r3
  10a380:	21a0500e 	movcs	r5, lr
  10a384:	2181100c 	orrcs	r1, r1, ip
  10a388:	e1b020a2 	movs	r2, r2, lsr #1
  10a38c:	e1a03063 	mov	r3, r3, rrx
  10a390:	e056e003 	subs	lr, r6, r3
  10a394:	e0d5e002 	sbcs	lr, r5, r2
  10a398:	20466003 	subcs	r6, r6, r3
  10a39c:	21a0500e 	movcs	r5, lr
  10a3a0:	218110ac 	orrcs	r1, r1, ip, lsr #1
  10a3a4:	e1b020a2 	movs	r2, r2, lsr #1
  10a3a8:	e1a03063 	mov	r3, r3, rrx
  10a3ac:	e056e003 	subs	lr, r6, r3
  10a3b0:	e0d5e002 	sbcs	lr, r5, r2
  10a3b4:	20466003 	subcs	r6, r6, r3
  10a3b8:	21a0500e 	movcs	r5, lr
  10a3bc:	2181112c 	orrcs	r1, r1, ip, lsr #2
  10a3c0:	e1b020a2 	movs	r2, r2, lsr #1
  10a3c4:	e1a03063 	mov	r3, r3, rrx
  10a3c8:	e056e003 	subs	lr, r6, r3
  10a3cc:	e0d5e002 	sbcs	lr, r5, r2
  10a3d0:	20466003 	subcs	r6, r6, r3
  10a3d4:	21a0500e 	movcs	r5, lr
  10a3d8:	218111ac 	orrcs	r1, r1, ip, lsr #3
  10a3dc:	e195e006 	orrs	lr, r5, r6
  10a3e0:	0a00000d 	beq	10a41c <__aeabi_ddiv+0x134>
  10a3e4:	e1a05205 	mov	r5, r5, lsl #4
  10a3e8:	e1855e26 	orr	r5, r5, r6, lsr #28
  10a3ec:	e1a06206 	mov	r6, r6, lsl #4
  10a3f0:	e1a02182 	mov	r2, r2, lsl #3
  10a3f4:	e1822ea3 	orr	r2, r2, r3, lsr #29
  10a3f8:	e1a03183 	mov	r3, r3, lsl #3
  10a3fc:	e1b0c22c 	movs	ip, ip, lsr #4
  10a400:	1affffdb 	bne	10a374 <__aeabi_ddiv+0x8c>
  10a404:	e3100601 	tst	r0, #1048576	; 0x100000
  10a408:	1a000006 	bne	10a428 <__aeabi_ddiv+0x140>
  10a40c:	e1800001 	orr	r0, r0, r1
  10a410:	e3a01000 	mov	r1, #0	; 0x0
  10a414:	e3a0c102 	mov	ip, #-2147483648	; 0x80000000
  10a418:	eaffffd5 	b	10a374 <__aeabi_ddiv+0x8c>
  10a41c:	e3100601 	tst	r0, #1048576	; 0x100000
  10a420:	01800001 	orreq	r0, r0, r1
  10a424:	03a01000 	moveq	r1, #0	; 0x0
  10a428:	e254c0fd 	subs	ip, r4, #253	; 0xfd
  10a42c:	835c0c07 	cmphi	ip, #1792	; 0x700
  10a430:	8affff4a 	bhi	10a160 <__aeabi_dmul+0xe4>
  10a434:	e055c002 	subs	ip, r5, r2
  10a438:	0056c003 	subeqs	ip, r6, r3
  10a43c:	01b0c0a1 	moveqs	ip, r1, lsr #1
  10a440:	e2b11000 	adcs	r1, r1, #0	; 0x0
  10a444:	e0a00a04 	adc	r0, r0, r4, lsl #20
  10a448:	e8bd8070 	ldmia	sp!, {r4, r5, r6, pc}
  10a44c:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
  10a450:	e18e0620 	orr	r0, lr, r0, lsr #12
  10a454:	e09440ac 	adds	r4, r4, ip, lsr #1
  10a458:	c074500c 	rsbgts	r5, r4, ip
  10a45c:	c1800a04 	orrgt	r0, r0, r4, lsl #20
  10a460:	c8bd8070 	ldmgtia	sp!, {r4, r5, r6, pc}
  10a464:	e3800601 	orr	r0, r0, #1048576	; 0x100000
  10a468:	e3a0e000 	mov	lr, #0	; 0x0
  10a46c:	e2544001 	subs	r4, r4, #1	; 0x1
  10a470:	eaffff3a 	b	10a160 <__aeabi_dmul+0xe4>
  10a474:	e185e006 	orr	lr, r5, r6
  10a478:	eaffff38 	b	10a160 <__aeabi_dmul+0xe4>
  10a47c:	e00c5a22 	and	r5, ip, r2, lsr #20
  10a480:	e134000c 	teq	r4, ip
  10a484:	0135000c 	teqeq	r5, ip
  10a488:	0affff93 	beq	10a2dc <__aeabi_dmul+0x260>
  10a48c:	e134000c 	teq	r4, ip
  10a490:	1a000006 	bne	10a4b0 <__aeabi_ddiv+0x1c8>
  10a494:	e1914600 	orrs	r4, r1, r0, lsl #12
  10a498:	1affff8f 	bne	10a2dc <__aeabi_dmul+0x260>
  10a49c:	e135000c 	teq	r5, ip
  10a4a0:	1affff87 	bne	10a2c4 <__aeabi_dmul+0x248>
  10a4a4:	e1a01003 	mov	r1, r3
  10a4a8:	e1a00002 	mov	r0, r2
  10a4ac:	eaffff8a 	b	10a2dc <__aeabi_dmul+0x260>
  10a4b0:	e135000c 	teq	r5, ip
  10a4b4:	1a000004 	bne	10a4cc <__aeabi_ddiv+0x1e4>
  10a4b8:	e1935602 	orrs	r5, r3, r2, lsl #12
  10a4bc:	0affff6d 	beq	10a278 <__aeabi_dmul+0x1fc>
  10a4c0:	e1a01003 	mov	r1, r3
  10a4c4:	e1a00002 	mov	r0, r2
  10a4c8:	eaffff83 	b	10a2dc <__aeabi_dmul+0x260>
  10a4cc:	e1916080 	orrs	r6, r1, r0, lsl #1
  10a4d0:	11936082 	orrnes	r6, r3, r2, lsl #1
  10a4d4:	1affff4d 	bne	10a210 <__aeabi_dmul+0x194>
  10a4d8:	e1914080 	orrs	r4, r1, r0, lsl #1
  10a4dc:	1affff78 	bne	10a2c4 <__aeabi_dmul+0x248>
  10a4e0:	e1935082 	orrs	r5, r3, r2, lsl #1
  10a4e4:	1affff63 	bne	10a278 <__aeabi_dmul+0x1fc>
  10a4e8:	eaffff7b 	b	10a2dc <__aeabi_dmul+0x260>

0010a4ec <__gedf2>:
  10a4ec:	e3e0c000 	mvn	ip, #0	; 0x0
  10a4f0:	ea000002 	b	10a500 <__cmpdf2+0x4>

0010a4f4 <__ledf2>:
  10a4f4:	e3a0c001 	mov	ip, #1	; 0x1
  10a4f8:	ea000000 	b	10a500 <__cmpdf2+0x4>

0010a4fc <__cmpdf2>:
  10a4fc:	e3a0c001 	mov	ip, #1	; 0x1
  10a500:	e50dc004 	str	ip, [sp, #-4]
  10a504:	e1a0c080 	mov	ip, r0, lsl #1
  10a508:	e1f0cacc 	mvns	ip, ip, asr #21
  10a50c:	e1a0c082 	mov	ip, r2, lsl #1
  10a510:	11f0cacc 	mvnnes	ip, ip, asr #21
  10a514:	0a00000d 	beq	10a550 <__cmpdf2+0x54>
  10a518:	e191c080 	orrs	ip, r1, r0, lsl #1
  10a51c:	0193c082 	orreqs	ip, r3, r2, lsl #1
  10a520:	11300002 	teqne	r0, r2
  10a524:	01310003 	teqeq	r1, r3
  10a528:	03a00000 	moveq	r0, #0	; 0x0
  10a52c:	012fff1e 	bxeq	lr
  10a530:	e3700000 	cmn	r0, #0	; 0x0
  10a534:	e1300002 	teq	r0, r2
  10a538:	51500002 	cmppl	r0, r2
  10a53c:	01510003 	cmpeq	r1, r3
  10a540:	21a00fc2 	movcs	r0, r2, asr #31
  10a544:	31e00fc2 	mvncc	r0, r2, asr #31
  10a548:	e3800001 	orr	r0, r0, #1	; 0x1
  10a54c:	e12fff1e 	bx	lr
  10a550:	e1a0c080 	mov	ip, r0, lsl #1
  10a554:	e1f0cacc 	mvns	ip, ip, asr #21
  10a558:	1a000001 	bne	10a564 <__cmpdf2+0x68>
  10a55c:	e191c600 	orrs	ip, r1, r0, lsl #12
  10a560:	1a000004 	bne	10a578 <__cmpdf2+0x7c>
  10a564:	e1a0c082 	mov	ip, r2, lsl #1
  10a568:	e1f0cacc 	mvns	ip, ip, asr #21
  10a56c:	1affffe9 	bne	10a518 <__cmpdf2+0x1c>
  10a570:	e193c602 	orrs	ip, r3, r2, lsl #12
  10a574:	0affffe7 	beq	10a518 <__cmpdf2+0x1c>
  10a578:	e51d0004 	ldr	r0, [sp, #-4]
  10a57c:	e12fff1e 	bx	lr

0010a580 <__aeabi_cdrcmple>:
  10a580:	e1a0c000 	mov	ip, r0
  10a584:	e1a00002 	mov	r0, r2
  10a588:	e1a0200c 	mov	r2, ip
  10a58c:	e1a0c001 	mov	ip, r1
  10a590:	e1a01003 	mov	r1, r3
  10a594:	e1a0300c 	mov	r3, ip
  10a598:	eaffffff 	b	10a59c <__aeabi_cdcmpeq>

0010a59c <__aeabi_cdcmpeq>:
  10a59c:	e92d4001 	stmdb	sp!, {r0, lr}
  10a5a0:	ebffffd5 	bl	10a4fc <__cmpdf2>
  10a5a4:	e3500000 	cmp	r0, #0	; 0x0
  10a5a8:	43700000 	cmnmi	r0, #0	; 0x0
  10a5ac:	e8bd8001 	ldmia	sp!, {r0, pc}

0010a5b0 <__aeabi_dcmpeq>:
  10a5b0:	e52de008 	str	lr, [sp, #-8]!
  10a5b4:	ebfffff8 	bl	10a59c <__aeabi_cdcmpeq>
  10a5b8:	03a00001 	moveq	r0, #1	; 0x1
  10a5bc:	13a00000 	movne	r0, #0	; 0x0
  10a5c0:	e49df008 	ldr	pc, [sp], #8

0010a5c4 <__aeabi_dcmplt>:
  10a5c4:	e52de008 	str	lr, [sp, #-8]!
  10a5c8:	ebfffff3 	bl	10a59c <__aeabi_cdcmpeq>
  10a5cc:	33a00001 	movcc	r0, #1	; 0x1
  10a5d0:	23a00000 	movcs	r0, #0	; 0x0
  10a5d4:	e49df008 	ldr	pc, [sp], #8

0010a5d8 <__aeabi_dcmple>:
  10a5d8:	e52de008 	str	lr, [sp, #-8]!
  10a5dc:	ebffffee 	bl	10a59c <__aeabi_cdcmpeq>
  10a5e0:	93a00001 	movls	r0, #1	; 0x1
  10a5e4:	83a00000 	movhi	r0, #0	; 0x0
  10a5e8:	e49df008 	ldr	pc, [sp], #8

0010a5ec <__aeabi_dcmpge>:
  10a5ec:	e52de008 	str	lr, [sp, #-8]!
  10a5f0:	ebffffe2 	bl	10a580 <__aeabi_cdrcmple>
  10a5f4:	93a00001 	movls	r0, #1	; 0x1
  10a5f8:	83a00000 	movhi	r0, #0	; 0x0
  10a5fc:	e49df008 	ldr	pc, [sp], #8

0010a600 <__aeabi_dcmpgt>:
  10a600:	e52de008 	str	lr, [sp, #-8]!
  10a604:	ebffffdd 	bl	10a580 <__aeabi_cdrcmple>
  10a608:	33a00001 	movcc	r0, #1	; 0x1
  10a60c:	23a00000 	movcs	r0, #0	; 0x0
  10a610:	e49df008 	ldr	pc, [sp], #8

0010a614 <__aeabi_d2iz>:
  10a614:	e1a02080 	mov	r2, r0, lsl #1
  10a618:	e2922602 	adds	r2, r2, #2097152	; 0x200000
  10a61c:	2a00000c 	bcs	10a654 <__aeabi_d2iz+0x40>
  10a620:	5a000009 	bpl	10a64c <__aeabi_d2iz+0x38>
  10a624:	e3e03e3e 	mvn	r3, #992	; 0x3e0
  10a628:	e0532ac2 	subs	r2, r3, r2, asr #21
  10a62c:	9a00000a 	bls	10a65c <__aeabi_d2iz+0x48>
  10a630:	e1a03580 	mov	r3, r0, lsl #11
  10a634:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
  10a638:	e1833aa1 	orr	r3, r3, r1, lsr #21
  10a63c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
  10a640:	e1a00233 	mov	r0, r3, lsr r2
  10a644:	12600000 	rsbne	r0, r0, #0	; 0x0
  10a648:	e12fff1e 	bx	lr
  10a64c:	e3a00000 	mov	r0, #0	; 0x0
  10a650:	e12fff1e 	bx	lr
  10a654:	e1911600 	orrs	r1, r1, r0, lsl #12
  10a658:	1a000002 	bne	10a668 <__aeabi_d2iz+0x54>
  10a65c:	e2100102 	ands	r0, r0, #-2147483648	; 0x80000000
  10a660:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
  10a664:	e12fff1e 	bx	lr
  10a668:	e3a00000 	mov	r0, #0	; 0x0
  10a66c:	e12fff1e 	bx	lr

0010a670 <__do_global_ctors_aux>:
  10a670:	e59f2028 	ldr	r2, [pc, #40]	; 10a6a0 <.text+0xa6a0>
  10a674:	e5123004 	ldr	r3, [r2, #-4]
  10a678:	e3730001 	cmn	r3, #1	; 0x1
  10a67c:	e92d4010 	stmdb	sp!, {r4, lr}
  10a680:	08bd8010 	ldmeqia	sp!, {r4, pc}
  10a684:	e2424004 	sub	r4, r2, #4	; 0x4
  10a688:	e1a0e00f 	mov	lr, pc
  10a68c:	e12fff13 	bx	r3
  10a690:	e5343004 	ldr	r3, [r4, #-4]!
  10a694:	e3730001 	cmn	r3, #1	; 0x1
  10a698:	1afffffa 	bne	10a688 <__do_global_ctors_aux+0x18>
  10a69c:	e8bd8010 	ldmia	sp!, {r4, pc}
  10a6a0:	0010a6cc 	andeqs	sl, r0, ip, asr #13

0010a6a4 <call___do_global_ctors_aux>:
  10a6a4:	e52de004 	str	lr, [sp, #-4]!
  10a6a8:	e49df004 	ldr	pc, [sp], #4

0010a6ac <_fini>:
  10a6ac:	e1a0c00d 	mov	ip, sp
  10a6b0:	e92ddff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
  10a6b4:	e24cb004 	sub	fp, ip, #4	; 0x4
  10a6b8:	ebffd6be 	bl	1001b8 <__do_global_dtors_aux>
  10a6bc:	e24bd028 	sub	sp, fp, #40	; 0x28
  10a6c0:	e89d6ff0 	ldmia	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
  10a6c4:	e1a0f00e 	mov	pc, lr
Déassemblage de la section .data:

00200000 <_data>:
  200000:	e59ff018 	ldr	pc, [pc, #24]	; 200020 <Reset_AddrR>
  200004:	e59ff018 	ldr	pc, [pc, #24]	; 200024 <Undef_AddrR>
  200008:	e59ff018 	ldr	pc, [pc, #24]	; 200028 <SWI_AddrR>
  20000c:	e59ff018 	ldr	pc, [pc, #24]	; 20002c <PAbt_AddrR>
  200010:	e59ff018 	ldr	pc, [pc, #24]	; 200030 <DAbt_AddrR>
  200014:	e1a00000 	nop			(mov r0,r0)
  200018:	e51fff20 	ldr	pc, [pc, #-3872]	; 1ff100 <PMC_PLLR_Val+0x6d4fb>
  20001c:	e51fff20 	ldr	pc, [pc, #-3872]	; 1ff104 <PMC_PLLR_Val+0x6d4ff>

00200020 <Reset_AddrR>:
  200020:	0010006c 	andeqs	r0, r0, ip, rrx

00200024 <Undef_AddrR>:
  200024:	00200040 	eoreq	r0, r0, r0, asr #32

00200028 <SWI_AddrR>:
  200028:	00200044 	eoreq	r0, r0, r4, asr #32

0020002c <PAbt_AddrR>:
  20002c:	00200048 	eoreq	r0, r0, r8, asr #32

00200030 <DAbt_AddrR>:
  200030:	0020004c 	eoreq	r0, r0, ip, asr #32
  200034:	00000000 	andeq	r0, r0, r0

00200038 <IRQ_AddrR>:
  200038:	00200050 	eoreq	r0, r0, r0, asr r0

0020003c <FIQ_AddrR>:
  20003c:	00200054 	eoreq	r0, r0, r4, asr r0

00200040 <Undef_HandlerR>:
  200040:	eafffffe 	b	200040 <Undef_HandlerR>

00200044 <SWI_HandlerR>:
  200044:	eafffffe 	b	200044 <SWI_HandlerR>

00200048 <PAbt_HandlerR>:
  200048:	eafffffe 	b	200048 <PAbt_HandlerR>

0020004c <DAbt_HandlerR>:
  20004c:	eafffffe 	b	20004c <DAbt_HandlerR>

00200050 <IRQ_HandlerR>:
  200050:	eafffffe 	b	200050 <IRQ_HandlerR>

00200054 <FIQ_HandlerR>:
  200054:	eafffffe 	b	200054 <FIQ_HandlerR>

00200058 <force_to_data>:
  200058:	00000000                                ....

0020005c <__dso_handle>:
  20005c:	00000000                                ....

00200060 <p.3962>:
  200060:	0010a6d4                                ....

00200064 <HeapBase>:
  200064:	00000000 	andeq	r0, r0, r0

00200068 <HeapLimit>:
  200068:	00000000 	andeq	r0, r0, r0

0020006c <__stack_base__>:
  20006c:	00000000 	andeq	r0, r0, r0

00200070 <StackLimit>:
  200070:	00000000 	andeq	r0, r0, r0

00200074 <CommandLine>:
	...

00200174 <pPIO>:
  200174:	fffff400                                ....

00200178 <pUSART>:
  200178:	fffc0000                                ....

0020017c <pPIOA>:
  20017c:	fffff400                                ....

00200180 <pSPI>:
  200180:	fffe0000                                ....

00200184 <_impure_ptr>:
  200184:	00200188                                .. .

00200188 <impure_data>:
  200188:	00000000 00200474 002004d0 0020052c     ....t. ... .,. .
	...
  2001bc:	0010a718 00000000 00000000 00000000     ................
	...
  20022c:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
  20023c:	0005deec 0000000b 00000000 00000000     ................
	...

00200588 <__malloc_av_>:
	...
  200590:	00200588 00200588 00200590 00200590     .. ... ... ... .
  2005a0:	00200598 00200598 002005a0 002005a0     .. ... ... ... .
  2005b0:	002005a8 002005a8 002005b0 002005b0     .. ... ... ... .
  2005c0:	002005b8 002005b8 002005c0 002005c0     .. ... ... ... .
  2005d0:	002005c8 002005c8 002005d0 002005d0     .. ... ... ... .
  2005e0:	002005d8 002005d8 002005e0 002005e0     .. ... ... ... .
  2005f0:	002005e8 002005e8 002005f0 002005f0     .. ... ... ... .
  200600:	002005f8 002005f8 00200600 00200600     .. ... ... ... .
  200610:	00200608 00200608 00200610 00200610     .. ... ... ... .
  200620:	00200618 00200618 00200620 00200620     .. ... . . . . .
  200630:	00200628 00200628 00200630 00200630     (. .(. .0. .0. .
  200640:	00200638 00200638 00200640 00200640     8. .8. .@. .@. .
  200650:	00200648 00200648 00200650 00200650     H. .H. .P. .P. .
  200660:	00200658 00200658 00200660 00200660     X. .X. .`. .`. .
  200670:	00200668 00200668 00200670 00200670     h. .h. .p. .p. .
  200680:	00200678 00200678 00200680 00200680     x. .x. ... ... .
  200690:	00200688 00200688 00200690 00200690     .. ... ... ... .
  2006a0:	00200698 00200698 002006a0 002006a0     .. ... ... ... .
  2006b0:	002006a8 002006a8 002006b0 002006b0     .. ... ... ... .
  2006c0:	002006b8 002006b8 002006c0 002006c0     .. ... ... ... .
  2006d0:	002006c8 002006c8 002006d0 002006d0     .. ... ... ... .
  2006e0:	002006d8 002006d8 002006e0 002006e0     .. ... ... ... .
  2006f0:	002006e8 002006e8 002006f0 002006f0     .. ... ... ... .
  200700:	002006f8 002006f8 00200700 00200700     .. ... ... ... .
  200710:	00200708 00200708 00200710 00200710     .. ... ... ... .
  200720:	00200718 00200718 00200720 00200720     .. ... . . . . .
  200730:	00200728 00200728 00200730 00200730     (. .(. .0. .0. .
  200740:	00200738 00200738 00200740 00200740     8. .8. .@. .@. .
  200750:	00200748 00200748 00200750 00200750     H. .H. .P. .P. .
  200760:	00200758 00200758 00200760 00200760     X. .X. .`. .`. .
  200770:	00200768 00200768 00200770 00200770     h. .h. .p. .p. .
  200780:	00200778 00200778 00200780 00200780     x. .x. ... ... .
  200790:	00200788 00200788 00200790 00200790     .. ... ... ... .
  2007a0:	00200798 00200798 002007a0 002007a0     .. ... ... ... .
  2007b0:	002007a8 002007a8 002007b0 002007b0     .. ... ... ... .
  2007c0:	002007b8 002007b8 002007c0 002007c0     .. ... ... ... .
  2007d0:	002007c8 002007c8 002007d0 002007d0     .. ... ... ... .
  2007e0:	002007d8 002007d8 002007e0 002007e0     .. ... ... ... .
  2007f0:	002007e8 002007e8 002007f0 002007f0     .. ... ... ... .
  200800:	002007f8 002007f8 00200800 00200800     .. ... ... ... .
  200810:	00200808 00200808 00200810 00200810     .. ... ... ... .
  200820:	00200818 00200818 00200820 00200820     .. ... . . . . .
  200830:	00200828 00200828 00200830 00200830     (. .(. .0. .0. .
  200840:	00200838 00200838 00200840 00200840     8. .8. .@. .@. .
  200850:	00200848 00200848 00200850 00200850     H. .H. .P. .P. .
  200860:	00200858 00200858 00200860 00200860     X. .X. .`. .`. .
  200870:	00200868 00200868 00200870 00200870     h. .h. .p. .p. .
  200880:	00200878 00200878 00200880 00200880     x. .x. ... ... .
  200890:	00200888 00200888 00200890 00200890     .. ... ... ... .
  2008a0:	00200898 00200898 002008a0 002008a0     .. ... ... ... .
  2008b0:	002008a8 002008a8 002008b0 002008b0     .. ... ... ... .
  2008c0:	002008b8 002008b8 002008c0 002008c0     .. ... ... ... .
  2008d0:	002008c8 002008c8 002008d0 002008d0     .. ... ... ... .
  2008e0:	002008d8 002008d8 002008e0 002008e0     .. ... ... ... .
  2008f0:	002008e8 002008e8 002008f0 002008f0     .. ... ... ... .
  200900:	002008f8 002008f8 00200900 00200900     .. ... ... ... .
  200910:	00200908 00200908 00200910 00200910     .. ... ... ... .
  200920:	00200918 00200918 00200920 00200920     .. ... . . . . .
  200930:	00200928 00200928 00200930 00200930     (. .(. .0. .0. .
  200940:	00200938 00200938 00200940 00200940     8. .8. .@. .@. .
  200950:	00200948 00200948 00200950 00200950     H. .H. .P. .P. .
  200960:	00200958 00200958 00200960 00200960     X. .X. .`. .`. .
  200970:	00200968 00200968 00200970 00200970     h. .h. .p. .p. .
  200980:	00200978 00200978 00200980 00200980     x. .x. ... ... .

00200990 <__malloc_trim_threshold>:
  200990:	00020000                                ....

00200994 <__malloc_sbrk_base>:
  200994:	ffffffff                                ....

00200998 <__mb_cur_max>:
  200998:	00000001                                ....

0020099c <__lc_ctype>:
  20099c:	00000043 00000000 00000000              C...........

002009a8 <force_to_data>:
  2009a8:	00000000                                ....

002009ac <irq0_int>:
  2009ac:	e92d5fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
  2009b0:	e14fe000 	mrs	lr, SPSR
  2009b4:	e92d4000 	stmdb	sp!, {lr}
  2009b8:	e321f01f 	msr	CPSR_c, #31	; 0x1f
  2009bc:	e92d4000 	stmdb	sp!, {lr}
  2009c0:	e59f3070 	ldr	r3, [pc, #112]	; 200a38 <.data+0xa38>
  2009c4:	e5933000 	ldr	r3, [r3]
  2009c8:	e593303c 	ldr	r3, [r3, #60]
  2009cc:	e2033601 	and	r3, r3, #1048576	; 0x100000
  2009d0:	e3530000 	cmp	r3, #0	; 0x0
  2009d4:	1a00000d 	bne	200a10 <irq0_int+0x64>
  2009d8:	e59f3058 	ldr	r3, [pc, #88]	; 200a38 <.data+0xa38>
  2009dc:	e5932000 	ldr	r2, [r3]
  2009e0:	e3a03701 	mov	r3, #262144	; 0x40000
  2009e4:	e5823034 	str	r3, [r2, #52]
  2009e8:	e59f3048 	ldr	r3, [pc, #72]	; 200a38 <.data+0xa38>
  2009ec:	e5933000 	ldr	r3, [r3]
  2009f0:	e593303c 	ldr	r3, [r3, #60]
  2009f4:	e2033601 	and	r3, r3, #1048576	; 0x100000
  2009f8:	e3530000 	cmp	r3, #0	; 0x0
  2009fc:	0afffff9 	beq	2009e8 <irq0_int+0x3c>
  200a00:	e59f3030 	ldr	r3, [pc, #48]	; 200a38 <.data+0xa38>
  200a04:	e5932000 	ldr	r2, [r3]
  200a08:	e3a03701 	mov	r3, #262144	; 0x40000
  200a0c:	e5823030 	str	r3, [r2, #48]
  200a10:	e8bd4000 	ldmia	sp!, {lr}
  200a14:	e321f092 	msr	CPSR_c, #146	; 0x92
  200a18:	e8bd4000 	ldmia	sp!, {lr}
  200a1c:	e16ff00e 	msr	SPSR_fsxc, lr
  200a20:	e3a03000 	mov	r3, #0	; 0x0
  200a24:	e2433eed 	sub	r3, r3, #3792	; 0xed0
  200a28:	e3a02000 	mov	r2, #0	; 0x0
  200a2c:	e5832000 	str	r2, [r3]
  200a30:	e8bd5fff 	ldmia	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
  200a34:	e25ef004 	subs	pc, lr, #4	; 0x4
  200a38:	00200174 	eoreq	r0, r0, r4, ror r1
